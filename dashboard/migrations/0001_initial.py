# Generated by Django 5.1.4 on 2025-09-10 07:50

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APICollection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('base_url', models.URLField(blank=True, help_text='Base URL for all requests in this collection')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIEnvironment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('variables', models.JSONField(default=dict, help_text='Environment variables as key-value pairs')),
                ('is_default', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_environments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE'), ('HEAD', 'HEAD'), ('OPTIONS', 'OPTIONS')], default='GET', max_length=10)),
                ('url', models.URLField()),
                ('headers', models.JSONField(default=dict)),
                ('body', models.TextField(blank=True)),
                ('body_type', models.CharField(choices=[('json', 'JSON'), ('form', 'Form Data'), ('raw', 'Raw'), ('binary', 'Binary')], default='json', max_length=20)),
                ('params', models.JSONField(default=dict, help_text='Query parameters')),
                ('auth_type', models.CharField(choices=[('none', 'No Auth'), ('bearer', 'Bearer Token'), ('basic', 'Basic Auth'), ('api_key', 'API Key')], default='none', max_length=20)),
                ('auth_config', models.JSONField(default=dict, help_text='Authentication configuration')),
                ('timeout', models.IntegerField(default=30, help_text='Request timeout in seconds')),
                ('order', models.IntegerField(default=0, help_text='Order within collection')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='dashboard.apicollection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APITest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('test_script', models.TextField(blank=True, help_text='JavaScript test script')),
                ('assertions', models.JSONField(default=list, help_text='List of assertions to run')),
                ('pre_request_script', models.TextField(blank=True, help_text='Script to run before request')),
                ('enabled', models.BooleanField(default=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='dashboard.apirequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APITestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('passed', 'Passed'), ('failed', 'Failed'), ('error', 'Error')], max_length=20)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('response_headers', models.JSONField(default=dict)),
                ('response_body', models.TextField(blank=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('test_results', models.JSONField(default=dict, help_text='Individual test assertion results')),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.apienvironment')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='dashboard.apirequest')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='dashboard.apitest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APITestSuite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('enabled', models.BooleanField(default=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_suites', to='dashboard.apicollection')),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.apienvironment')),
                ('tests', models.ManyToManyField(related_name='test_suites', to='dashboard.apitest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIAutomation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('schedule', models.CharField(blank=True, help_text='Cron expression for scheduling', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('notification_email', models.EmailField(blank=True, max_length=254)),
                ('retry_count', models.IntegerField(default=0)),
                ('retry_delay', models.IntegerField(default=300, help_text='Retry delay in seconds')),
                ('test_suite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automations', to='dashboard.apitestsuite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APITestSuiteResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=20)),
                ('total_tests', models.IntegerField(default=0)),
                ('passed_tests', models.IntegerField(default=0)),
                ('failed_tests', models.IntegerField(default=0)),
                ('total_time', models.FloatField(blank=True, help_text='Total execution time in seconds', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('results', models.ManyToManyField(related_name='suite_results', to='dashboard.apitestresult')),
                ('suite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suite_results', to='dashboard.apitestsuite')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
