# Generated by Django 5.1.4 on 2025-09-11 17:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Grant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('sponsor', models.CharField(blank=True, max_length=255)),
                ('reference_code', models.CharField(blank=True, max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=16)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('grants', models.ManyToManyField(blank=True, related_name='projects', to='rnd.grant')),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('storage_url', models.URLField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('projects', models.ManyToManyField(blank=True, related_name='datasets', to='rnd.project')),
            ],
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_institution', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to='rnd.project')),
            ],
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('department', models.CharField(blank=True, max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('orcid', models.CharField(blank=True, max_length=50)),
                ('google_scholar_id', models.CharField(blank=True, max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('publication_type', models.CharField(choices=[('journal', 'Journal'), ('conference', 'Conference'), ('book', 'Book'), ('preprint', 'Preprint'), ('other', 'Other')], default='journal', max_length=20)),
                ('venue', models.CharField(blank=True, max_length=255)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('doi', models.CharField(blank=True, max_length=128)),
                ('open_access_url', models.URLField(blank=True)),
                ('projects', models.ManyToManyField(blank=True, related_name='publications', to='rnd.project')),
                ('authors', models.ManyToManyField(blank=True, related_name='publications', to='rnd.researcher')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='projects', to='rnd.researcher'),
        ),
        migrations.AddField(
            model_name='project',
            name='principal_investigator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='led_projects', to='rnd.researcher'),
        ),
        migrations.CreateModel(
            name='Patent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('application_number', models.CharField(blank=True, max_length=128)),
                ('grant_number', models.CharField(blank=True, max_length=128)),
                ('filing_date', models.DateField(blank=True, null=True)),
                ('grant_date', models.DateField(blank=True, null=True)),
                ('projects', models.ManyToManyField(blank=True, related_name='patents', to='rnd.project')),
                ('inventors', models.ManyToManyField(blank=True, related_name='patents', to='rnd.researcher')),
            ],
        ),
    ]
