# Generated by Django 5.1.4 on 2025-09-11 16:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('departments', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='e.g., 2024-2025', max_length=9, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='Caste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('label', models.CharField(max_length=200)),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('email', 'Email'), ('phone', 'Phone'), ('select', 'Select (Dropdown)'), ('multiselect', 'Multi-Select'), ('boolean', 'Yes/No'), ('textarea', 'Long Text'), ('file', 'File Upload'), ('url', 'URL')], max_length=20)),
                ('required', models.BooleanField(default=False)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('choices', models.JSONField(blank=True, help_text='For select/multiselect fields, provide options as JSON array', null=True)),
                ('validation_regex', models.CharField(blank=True, max_length=200, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Custom Field',
                'verbose_name_plural': 'Custom Fields',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Quota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Fall 2024, Spring 2025', max_length=50)),
                ('semester_type', models.CharField(choices=[('ODD', 'Odd Semester (Fall)'), ('EVEN', 'Even Semester (Spring)'), ('SUMMER', 'Summer Semester')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='students.academicyear')),
            ],
            options={
                'ordering': ['academic_year', 'semester_type'],
                'unique_together': {('academic_year', 'semester_type')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('roll_number', models.CharField(help_text='Unique roll number/student identifier', max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('section', models.CharField(blank=True, choices=[('A', 'Section A'), ('B', 'Section B'), ('C', 'Section C'), ('D', 'Section D'), ('E', 'Section E')], max_length=1, null=True)),
                ('academic_year', models.CharField(blank=True, help_text='e.g., 2023-2024', max_length=9, null=True)),
                ('year_of_study', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year'), ('5', '5th Year')], default='1', help_text='Current year of study (1st, 2nd, 3rd, 4th year)', max_length=1)),
                ('semester', models.CharField(choices=[('1', 'Semester 1'), ('2', 'Semester 2'), ('3', 'Semester 3'), ('4', 'Semester 4'), ('5', 'Semester 5'), ('6', 'Semester 6'), ('7', 'Semester 7'), ('8', 'Semester 8'), ('9', 'Semester 9'), ('10', 'Semester 10')], default='1', help_text='Current semester', max_length=2)),
                ('rank', models.IntegerField(blank=True, help_text='Academic or admission rank', null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('student_mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Student Mobile')),
                ('village', models.CharField(blank=True, max_length=200, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('aadhar_number', models.CharField(blank=True, help_text='12-digit Aadhar number', max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='Aadhar number must be exactly 12 digits.', regex='^\\d{12}$')])),
                ('subcaste', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=200, null=True)),
                ('father_mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Father Mobile')),
                ('mother_mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mother Mobile')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_graduation_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('GRADUATED', 'Graduated'), ('SUSPENDED', 'Suspended'), ('DROPPED', 'Dropped Out')], default='ACTIVE', max_length=20)),
                ('guardian_name', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('guardian_relationship', models.CharField(blank=True, help_text='e.g., Father, Mother, Guardian, etc.', max_length=50, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, null=True)),
                ('medical_conditions', models.TextField(blank=True, help_text='Any medical conditions or allergies', null=True)),
                ('medications', models.TextField(blank=True, help_text='Current medications', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the student', null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='student_profiles/')),
                ('academic_program', models.ForeignKey(blank=True, help_text="Student's academic program (B.Tech, MBA, MCA, etc.)", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='academics.academicprogram')),
                ('caste', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.caste')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_students', to=settings.AUTH_USER_MODEL)),
                ('current_academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_students', to='students.academicyear')),
                ('current_semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_students', to='students.semester')),
                ('department', models.ForeignKey(blank=True, help_text="Student's department", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='departments.department')),
                ('quota', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.quota')),
                ('religion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.religion')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_students', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address_type', models.CharField(choices=[('CURRENT', 'Current'), ('PERMANENT', 'Permanent'), ('MAILING', 'Mailing')], max_length=20)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('is_primary', models.BooleanField(default=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_of_study', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year'), ('5', '5th Year')], max_length=1)),
                ('section', models.CharField(choices=[('A', 'Section A'), ('B', 'Section B'), ('C', 'Section C'), ('D', 'Section D'), ('E', 'Section E')], max_length=1)),
                ('batch_name', models.CharField(help_text='e.g., CS-2024-1-A', max_length=100)),
                ('max_capacity', models.PositiveIntegerField(default=60)),
                ('current_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_batches', to='students.academicyear')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_batches', to='departments.department')),
            ],
            options={
                'ordering': ['department', 'academic_year', 'year_of_study', 'section'],
            },
        ),
        migrations.CreateModel(
            name='StudentContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_type', models.CharField(choices=[('SELF', 'Self'), ('FATHER', 'Father'), ('MOTHER', 'Mother'), ('GUARDIAN', 'Guardian'), ('EMERGENCY', 'Emergency')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('relationship', models.CharField(blank=True, max_length=50, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCustomFieldValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('file_value', models.FileField(blank=True, null=True, upload_to='student_custom_files/')),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_values', to='students.customfield')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_field_values', to='students.student')),
            ],
            options={
                'verbose_name': 'Student Custom Field Value',
                'verbose_name_plural': 'Student Custom Field Values',
            },
        ),
        migrations.CreateModel(
            name='StudentDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('BIRTH_CERT', 'Birth Certificate'), ('TRANSCRIPT', 'Academic Transcript'), ('MEDICAL', 'Medical Record'), ('IMMUNIZATION', 'Immunization Record'), ('PHOTO_ID', 'Photo ID'), ('OTHER', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('document_file', models.FileField(upload_to='student_documents/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='students.student')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Document',
                'verbose_name_plural': 'Student Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollmentHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year_of_study', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year'), ('5', '5th Year')], default='1', max_length=1)),
                ('semester', models.CharField(choices=[('1', 'Semester 1'), ('2', 'Semester 2'), ('3', 'Semester 3'), ('4', 'Semester 4'), ('5', 'Semester 5'), ('6', 'Semester 6'), ('7', 'Semester 7'), ('8', 'Semester 8'), ('9', 'Semester 9'), ('10', 'Semester 10')], default='1', max_length=2)),
                ('academic_year', models.CharField(help_text='e.g., 2023-2024', max_length=9)),
                ('enrollment_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('GRADUATED', 'Graduated'), ('SUSPENDED', 'Suspended'), ('DROPPED', 'Dropped Out')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_history', to='students.student')),
            ],
            options={
                'verbose_name': 'Student Enrollment History',
                'verbose_name_plural': 'Student Enrollment Histories',
                'ordering': ['-enrollment_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentIdentifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id_type', models.CharField(choices=[('AADHAR', 'Aadhar'), ('OTHER', 'Other')], max_length=20)),
                ('identifier', models.CharField(max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentImport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('total_rows', models.IntegerField(default=0)),
                ('success_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('warning_count', models.IntegerField(default=0)),
                ('skip_errors', models.BooleanField(default=False)),
                ('create_login', models.BooleanField(default=True)),
                ('update_existing', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('warnings', models.JSONField(blank=True, default=list)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_imports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Import',
                'verbose_name_plural': 'Student Imports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['department', 'year_of_study', 'section'], name='idx_student_dept_year_section'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['academic_program', 'year_of_study'], name='idx_student_program_year'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(condition=models.Q(('status', 'ACTIVE')), fields=['status'], name='idx_student_status_active'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['created_at'], name='students_st_created_78a19f_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['updated_at'], name='students_st_updated_69dec6_idx'),
        ),
        migrations.AddIndex(
            model_name='studentaddress',
            index=models.Index(fields=['student', 'address_type'], name='students_st_student_704649_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentaddress',
            unique_together={('student', 'address_type', 'is_primary')},
        ),
        migrations.AlterUniqueTogether(
            name='studentbatch',
            unique_together={('department', 'academic_year', 'year_of_study', 'section')},
        ),
        migrations.AddIndex(
            model_name='studentcontact',
            index=models.Index(fields=['student', 'contact_type'], name='students_st_student_5e110b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentcontact',
            unique_together={('student', 'contact_type', 'is_primary')},
        ),
        migrations.AlterUniqueTogether(
            name='studentcustomfieldvalue',
            unique_together={('student', 'custom_field')},
        ),
        migrations.AddIndex(
            model_name='studentdocument',
            index=models.Index(fields=['document_type', 'student'], name='students_st_documen_bafc7b_idx'),
        ),
        migrations.AddIndex(
            model_name='studentidentifier',
            index=models.Index(fields=['student', 'id_type', 'is_primary'], name='students_st_student_a8cf9f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentidentifier',
            unique_together={('id_type', 'identifier')},
        ),
    ]
