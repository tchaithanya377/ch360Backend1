# Generated by Django 5.1.4 on 2025-09-11 16:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('faculty', '0001_initial'),
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='courseenrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='students.student'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='academics.course'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_sections', to='faculty.faculty'),
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='course_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='academics.coursesection'),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_syllabi', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='course',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='academics.course'),
        ),
        migrations.AddField(
            model_name='syllabustopic',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='academics.syllabus'),
        ),
        migrations.AddField(
            model_name='timetable',
            name='course_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timetables', to='academics.coursesection'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['faculty', 'academic_year', 'semester'], name='academics_c_faculty_f36357_idx'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['is_active'], name='academics_c_is_acti_5d626e_idx'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['course', 'academic_year', 'semester'], name='idx_section_course_year_sem'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['academic_year', 'semester', 'is_active'], name='idx_section_year_sem_active'),
        ),
        migrations.AddConstraint(
            model_name='coursesection',
            constraint=models.CheckConstraint(condition=models.Q(('current_enrollment__gte', 0)), name='course_section_current_enrollment_nonnegative'),
        ),
        migrations.AddConstraint(
            model_name='coursesection',
            constraint=models.CheckConstraint(condition=models.Q(('current_enrollment__lte', models.F('max_students'))), name='course_section_enrollment_not_exceed_capacity'),
        ),
        migrations.AlterUniqueTogether(
            name='coursesection',
            unique_together={('course', 'section_number', 'academic_year', 'semester')},
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['student', 'status'], name='academics_c_student_ed6491_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['course_section', 'status'], name='academics_c_course__5e1d8e_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(condition=models.Q(('status', 'ENROLLED')), fields=['course_section'], name='idx_enroll_section_active'),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('student', 'course_section')},
        ),
        migrations.AlterUniqueTogether(
            name='syllabustopic',
            unique_together={('syllabus', 'week_number', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='timetable',
            unique_together={('course_section', 'day_of_week', 'start_time')},
        ),
    ]
