# Generated by Django 5.1.4 on 2025-09-19 09:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0002_initial'),
        ('departments', '0002_initial'),
        ('faculty', '0001_initial'),
        ('students', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='academicprogram',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_programs', to='departments.department'),
        ),
        migrations.AddField(
            model_name='batchcourseenrollment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batch_enrollments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batchcourseenrollment',
            name='student_batch',
            field=models.ForeignKey(help_text='Student batch to enroll', on_delete=django.db.models.deletion.CASCADE, related_name='batch_enrollments', to='students.studentbatch'),
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='departments.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, help_text='Prerequisite courses', to='academics.course'),
        ),
        migrations.AddField(
            model_name='course',
            name='programs',
            field=models.ManyToManyField(help_text='Programs this course belongs to', related_name='courses', to='academics.academicprogram'),
        ),
        migrations.AddField(
            model_name='batchcourseenrollment',
            name='course',
            field=models.ForeignKey(help_text='Course to enroll the batch in', on_delete=django.db.models.deletion.CASCADE, related_name='batch_enrollments', to='academics.course'),
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='students.student'),
        ),
        migrations.AddField(
            model_name='courseprerequisite',
            name='course',
            field=models.ForeignKey(help_text='Course that has prerequisites', on_delete=django.db.models.deletion.CASCADE, related_name='prerequisite_rules', to='academics.course'),
        ),
        migrations.AddField(
            model_name='courseprerequisite',
            name='prerequisite_course',
            field=models.ForeignKey(help_text='Prerequisite course', on_delete=django.db.models.deletion.CASCADE, related_name='required_for_courses', to='academics.course'),
        ),
        migrations.AddField(
            model_name='courseprerequisite',
            name='student_batch',
            field=models.ForeignKey(blank=True, help_text='Specific batch (null means applies to all batches)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_prerequisites', to='students.studentbatch'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='academics.course'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_sections', to='faculty.faculty'),
        ),
        migrations.AddField(
            model_name='coursesection',
            name='student_batch',
            field=models.ForeignKey(blank=True, help_text='Student batch assigned to this section', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_sections', to='students.studentbatch'),
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='course_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='academics.coursesection'),
        ),
        migrations.AddField(
            model_name='batchcourseenrollment',
            name='course_section',
            field=models.ForeignKey(blank=True, help_text='Specific course section (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_enrollments', to='academics.coursesection'),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_syllabi', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='course',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='academics.course'),
        ),
        migrations.AddField(
            model_name='syllabustopic',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='academics.syllabus'),
        ),
        migrations.AddField(
            model_name='timetable',
            name='course_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timetables', to='academics.coursesection'),
        ),
        migrations.AlterUniqueTogether(
            name='courseprerequisite',
            unique_together={('course', 'prerequisite_course', 'student_batch')},
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['faculty'], name='academics_c_faculty_2fe907_idx'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['is_active'], name='academics_c_is_acti_5d626e_idx'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['course', 'student_batch'], name='idx_section_course_batch'),
        ),
        migrations.AddIndex(
            model_name='coursesection',
            index=models.Index(fields=['student_batch'], name='idx_section_student_batch'),
        ),
        migrations.AddConstraint(
            model_name='coursesection',
            constraint=models.CheckConstraint(condition=models.Q(('current_enrollment__gte', 0)), name='course_section_current_enrollment_nonnegative'),
        ),
        migrations.AlterUniqueTogether(
            name='coursesection',
            unique_together={('course', 'student_batch')},
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['student', 'status'], name='academics_c_student_ed6491_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['course_section', 'status'], name='academics_c_course__5e1d8e_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(condition=models.Q(('status', 'ENROLLED')), fields=['course_section'], name='idx_enroll_section_active'),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('student', 'course_section')},
        ),
        migrations.AddIndex(
            model_name='batchcourseenrollment',
            index=models.Index(fields=['student_batch', 'status'], name='academics_b_student_e41e92_idx'),
        ),
        migrations.AddIndex(
            model_name='batchcourseenrollment',
            index=models.Index(fields=['course', 'status'], name='academics_b_course__cd5ff3_idx'),
        ),
        migrations.AddIndex(
            model_name='batchcourseenrollment',
            index=models.Index(fields=['academic_year', 'semester', 'status'], name='academics_b_academi_4336bf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='batchcourseenrollment',
            unique_together={('student_batch', 'course', 'academic_year', 'semester')},
        ),
        migrations.AlterUniqueTogether(
            name='syllabustopic',
            unique_together={('syllabus', 'week_number', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='timetable',
            unique_together={('course_section', 'day_of_week', 'start_time')},
        ),
    ]
