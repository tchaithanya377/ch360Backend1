# Generated by Django 5.1.4 on 2025-09-10 07:50

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('departments', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GraduateRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('total_credits_earned', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academics.academicprogram')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='graduate_record', to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human-friendly term name', max_length=100)),
                ('academic_year', models.CharField(help_text='e.g., 2024-2025', max_length=9)),
                ('semester', models.CharField(choices=[('FALL', 'Fall'), ('SPRING', 'Spring'), ('SUMMER', 'Summer'), ('WINTER', 'Winter')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_locked', models.BooleanField(default=False, help_text='Lock after results are finalized')),
            ],
            options={
                'ordering': ['-academic_year', 'semester'],
                'unique_together': {('academic_year', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=2)),
                ('min_score', models.DecimalField(decimal_places=2, help_text='Inclusive lower bound (0-100)', max_digits=5)),
                ('max_score', models.DecimalField(decimal_places=2, help_text='Inclusive upper bound (0-100)', max_digits=5)),
                ('grade_points', models.DecimalField(decimal_places=2, help_text='Grade points for the letter (e.g., 10, 9)', max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade_scales', to='departments.department')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade_scales', to='academics.academicprogram')),
            ],
            options={
                'ordering': ['-grade_points'],
                'unique_together': {('letter', 'department', 'program')},
            },
        ),
        migrations.CreateModel(
            name='CourseResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_marks', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('external_marks', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('total_marks', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('letter_grade', models.CharField(blank=True, max_length=2)),
                ('grade_points', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('passed', models.BooleanField(default=False)),
                ('evaluated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('course_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_results', to='academics.coursesection')),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_results', to='students.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_results', to='grads.term')),
            ],
            options={
                'ordering': ['student__roll_number', 'term__academic_year'],
                'unique_together': {('student', 'term', 'course_section')},
            },
        ),
        migrations.CreateModel(
            name='TermGPA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('total_credits', models.PositiveIntegerField(default=0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_gpas', to='students.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gpas', to='grads.term')),
            ],
            options={
                'ordering': ['-term__academic_year'],
                'unique_together': {('student', 'term')},
            },
        ),
    ]
