# Generated by Django 5.1.4 on 2025-09-11 16:23

import assignments.models
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('departments', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color_code', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Assignment Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('comment_type', models.CharField(choices=[('GENERAL', 'General Comment'), ('CLARIFICATION', 'Clarification'), ('FEEDBACK', 'Feedback'), ('QUESTION', 'Question'), ('ANNOUNCEMENT', 'Announcement')], default='GENERAL', max_length=15)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to=assignments.models.assignment_file_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'jpg', 'jpeg', 'png', 'gif', 'zip', 'rar'])])),
                ('file_type', models.CharField(choices=[('ASSIGNMENT', 'Assignment File'), ('SUBMISSION', 'Submission File')], max_length=15)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('grade_letter', models.CharField(blank=True, choices=[('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('F', 'F'), ('P', 'Pass'), ('NP', 'No Pass')], max_length=2, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-graded_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['group_name'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes from student', null=True)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('DRAFT', 'Draft'), ('LATE', 'Late Submission'), ('RESUBMITTED', 'Resubmitted')], default='SUBMITTED', max_length=15)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('is_late', models.BooleanField(default=False)),
                ('attachment_files', models.JSONField(blank=True, default=list, help_text='List of file information for submission attachments')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('max_marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('is_group_assignment', models.BooleanField(default=False)),
                ('max_group_size', models.PositiveIntegerField(default=1)),
                ('template_data', models.JSONField(default=dict, help_text='Additional template configuration data')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all faculty')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('max_marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('due_date', models.DateTimeField()),
                ('late_submission_allowed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('CLOSED', 'Closed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=15)),
                ('is_group_assignment', models.BooleanField(default=False)),
                ('max_group_size', models.PositiveIntegerField(default=1, help_text='Maximum group size for group assignments')),
                ('academic_year', models.CharField(blank=True, help_text='Academic year (e.g., 2024-2025)', max_length=9, null=True)),
                ('semester', models.CharField(blank=True, help_text='Semester (e.g., Fall, Spring)', max_length=20, null=True)),
                ('attachment_files', models.JSONField(blank=True, default=list, help_text='List of file information for assignment attachments')),
                ('assigned_to_course_sections', models.ManyToManyField(blank=True, help_text='Course sections this assignment is assigned to', related_name='assignments', to='academics.coursesection')),
                ('assigned_to_departments', models.ManyToManyField(blank=True, help_text='Departments this assignment is assigned to', related_name='assignments', to='departments.department')),
                ('assigned_to_programs', models.ManyToManyField(blank=True, help_text='Academic programs this assignment is assigned to', related_name='assignments', to='academics.academicprogram')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
