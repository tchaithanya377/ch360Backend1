# Generated by Django 5.1.4 on 2025-09-19 16:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('academics', '0006_merge_20250919_1505'),
        ('attendance', '0001_initial'),
        ('faculty', '0001_initial'),
        ('students', '0020_merge_0002_initial_0019_add_missing_fields_to_caste'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity_type', models.CharField(max_length=64)),
                ('entity_id', models.CharField(max_length=64)),
                ('action', models.CharField(max_length=32)),
                ('before', models.JSONField(blank=True, null=True)),
                ('after', models.JSONField(blank=True, null=True)),
                ('reason', models.TextField(blank=True)),
                ('source', models.CharField(default='system', max_length=32)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'attendance_audit_log',
            },
        ),
        migrations.CreateModel(
            name='AttendanceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'attendance_configuration',
            },
        ),
        migrations.CreateModel(
            name='AttendanceCorrectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_mark', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=16)),
                ('to_mark', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=16)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=16)),
                ('decided_at', models.DateTimeField(blank=True, null=True)),
                ('decision_note', models.TextField(blank=True)),
                ('supporting_document', models.FileField(blank=True, null=True, upload_to='attendance_corrections/')),
            ],
            options={
                'db_table': 'attendance_correction_request',
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mark', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=16)),
                ('marked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('source', models.CharField(choices=[('manual', 'Manual'), ('qr', 'QR'), ('biometric', 'Biometric'), ('rfid', 'RFID'), ('offline', 'Offline'), ('import', 'Import'), ('system', 'System')], default='manual', max_length=16)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('vendor_event_id', models.CharField(blank=True, db_index=True, max_length=128)),
                ('client_uuid', models.CharField(blank=True, db_index=True, max_length=64)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'attendance_record',
            },
        ),
        migrations.CreateModel(
            name='AttendanceSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_date', models.DateField(db_index=True)),
                ('start_datetime', models.DateTimeField(db_index=True)),
                ('end_datetime', models.DateTimeField(db_index=True)),
                ('room', models.CharField(blank=True, max_length=64)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('open', 'Open'), ('closed', 'Closed'), ('locked', 'Locked'), ('cancelled', 'Cancelled')], db_index=True, default='scheduled', max_length=16)),
                ('auto_opened', models.BooleanField(default=False)),
                ('auto_closed', models.BooleanField(default=False)),
                ('makeup', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('qr_token', models.CharField(blank=True, db_index=True, max_length=255)),
                ('qr_expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attendance_session',
            },
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leave_type', models.CharField(choices=[('medical', 'Medical'), ('maternity', 'Maternity'), ('on_duty', 'On Duty'), ('sport', 'Sport/Cultural'), ('personal', 'Personal'), ('other', 'Other')], max_length=32)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField(blank=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='leave_docs/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=16)),
                ('decided_at', models.DateTimeField(blank=True, null=True)),
                ('decision_note', models.TextField(blank=True)),
                ('affects_attendance', models.BooleanField(default=True, help_text='Whether this leave affects attendance calculation')),
            ],
            options={
                'db_table': 'attendance_leave_application',
            },
        ),
        migrations.CreateModel(
            name='StudentSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.CharField(help_text='Student roll number at time of session', max_length=20)),
                ('full_name', models.CharField(help_text='Student full name at time of session', max_length=255)),
            ],
            options={
                'db_table': 'attendance_student_snapshot',
            },
        ),
        migrations.CreateModel(
            name='TimetableSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Mon'), (1, 'Tue'), (2, 'Wed'), (3, 'Thu'), (4, 'Fri'), (5, 'Sat'), (6, 'Sun')], db_index=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(blank=True, max_length=64)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.CharField(help_text='Academic year (e.g., 2024-2025)', max_length=9)),
                ('semester', models.CharField(help_text='Semester (e.g., Fall, Spring)', max_length=20)),
            ],
            options={
                'db_table': 'attendance_timetable_slot',
            },
        ),
        migrations.AddField(
            model_name='attendanceauditlog',
            name='performed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendanceconfiguration',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendancecorrectionrequest',
            name='decided_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attendance_corrections_decided', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendancecorrectionrequest',
            name='requested_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_corrections_requested', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendancecorrectionrequest',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correction_requests', to='students.student'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='marked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marked_attendance', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='students.student'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='course_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_sessions', to='academics.coursesection'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_sessions', to='faculty.faculty'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='attendance.attendancesession'),
        ),
        migrations.AddField(
            model_name='attendancecorrectionrequest',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correction_requests', to='attendance.attendancesession'),
        ),
        migrations.AddField(
            model_name='leaveapplication',
            name='decided_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='leave_decided', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='leaveapplication',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_applications', to='students.student'),
        ),
        migrations.AddField(
            model_name='studentsnapshot',
            name='course_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='academics.coursesection'),
        ),
        migrations.AddField(
            model_name='studentsnapshot',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='attendance.attendancesession'),
        ),
        migrations.AddField(
            model_name='studentsnapshot',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_snapshots', to='students.student'),
        ),
        migrations.AddField(
            model_name='studentsnapshot',
            name='student_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='students.studentbatch'),
        ),
        migrations.AddField(
            model_name='timetableslot',
            name='course_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_slots', to='academics.coursesection'),
        ),
        migrations.AddField(
            model_name='timetableslot',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaching_slots', to='faculty.faculty'),
        ),
        migrations.AddField(
            model_name='attendancesession',
            name='timetable_slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='attendance.timetableslot'),
        ),
        migrations.AddIndex(
            model_name='attendanceauditlog',
            index=models.Index(fields=['entity_type', 'entity_id'], name='attendance__entity__27bb4f_idx'),
        ),
        migrations.AddIndex(
            model_name='attendanceauditlog',
            index=models.Index(fields=['created_at'], name='attendance__created_1c4bc9_idx'),
        ),
        migrations.AddIndex(
            model_name='attendanceauditlog',
            index=models.Index(fields=['performed_by', 'created_at'], name='attendance__perform_6b65f0_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['student', 'session'], name='attendance__student_b696ba_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['vendor_event_id'], name='attendance__vendor__4483f3_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['client_uuid'], name='attendance__client__ced9e3_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['marked_at'], name='attendance__marked__ba4e7e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancerecord',
            unique_together={('session', 'student')},
        ),
        migrations.AddIndex(
            model_name='attendancecorrectionrequest',
            index=models.Index(fields=['status'], name='attendance__status_43c851_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancecorrectionrequest',
            index=models.Index(fields=['student', 'session'], name='attendance__student_f20698_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancecorrectionrequest',
            index=models.Index(fields=['requested_by', 'status'], name='attendance__request_3d5d0c_idx'),
        ),
        migrations.AddIndex(
            model_name='leaveapplication',
            index=models.Index(fields=['student', 'start_date', 'end_date'], name='attendance__student_567aaa_idx'),
        ),
        migrations.AddIndex(
            model_name='leaveapplication',
            index=models.Index(fields=['status'], name='attendance__status_030f5d_idx'),
        ),
        migrations.AddIndex(
            model_name='leaveapplication',
            index=models.Index(fields=['leave_type', 'status'], name='attendance__leave_t_f608d8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsnapshot',
            unique_together={('session', 'student')},
        ),
        migrations.AddIndex(
            model_name='timetableslot',
            index=models.Index(fields=['course_section', 'day_of_week', 'start_time'], name='attendance__course__8e288b_idx'),
        ),
        migrations.AddIndex(
            model_name='timetableslot',
            index=models.Index(fields=['faculty', 'day_of_week'], name='attendance__faculty_955b60_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['course_section', 'scheduled_date'], name='attendance__course__e3f098_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['status'], name='attendance__status_08eac7_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancesession',
            index=models.Index(fields=['faculty', 'scheduled_date'], name='attendance__faculty_53e42f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancesession',
            unique_together={('timetable_slot', 'scheduled_date')},
        ),
    ]
