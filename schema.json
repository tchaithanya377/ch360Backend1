openapi: 3.0.3
info:
  title: CampsHub360 API
  version: 1.0.0
  description: OpenAPI schema for CampsHub360 backend
paths:
  /api/accounts/logout/:
    post:
      operationId: api_accounts_logout_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/me/:
    get:
      operationId: api_accounts_me_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_accounts_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_accounts_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/accounts/me/roles-permissions/:
    get:
      operationId: api_accounts_me_roles_permissions_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/me/session/active/:
    get:
      operationId: api_accounts_me_session_active_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/me/sessions/:
    get:
      operationId: api_accounts_me_sessions_retrieve
      description: Return recent login sessions for the current user, including IP,
        location, and timestamps.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/register/:
    post:
      operationId: api_accounts_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/accounts/roles/assign/:
    post:
      operationId: api_accounts_roles_assign_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/roles/catalog/:
    get:
      operationId: api_accounts_roles_catalog_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/roles/revoke/:
    post:
      operationId: api_accounts_roles_revoke_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/token/:
    post:
      operationId: api_accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollOrEmailToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RollOrEmailToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RollOrEmailToken'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollOrEmailToken'
          description: ''
  /api/accounts/token/refresh/:
    post:
      operationId: api_accounts_token_refresh_create
      description: |-
        Accept both 'refresh' and 'refresh_token' keys for compatibility.

        Some clients send payload as {"refresh_token": "..."} causing 400/401.
        Normalize input before delegating to parent view.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/accounts/users/:
    get:
      operationId: api_accounts_users_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/auth/token/:
    post:
      operationId: api_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollOrEmailToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RollOrEmailToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RollOrEmailToken'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollOrEmailToken'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Accept both 'refresh' and 'refresh_token' keys for compatibility.

        Some clients send payload as {"refresh_token": "..."} causing 400/401.
        Normalize input before delegating to parent view.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/academics/api/academic-calendar/:
    get:
      operationId: api_v1_academics_api_academic_calendar_list
      description: ViewSet for AcademicCalendar model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: event_type
        schema:
          type: string
          enum:
          - BREAK
          - DEADLINE
          - EVENT
          - EXAM
          - HOLIDAY
          - OTHER
        description: |-
          * `HOLIDAY` - Holiday
          * `EXAM` - Examination
          * `BREAK` - Break
          * `EVENT` - Special Event
          * `DEADLINE` - Deadline
          * `OTHER` - Other
      - in: query
        name: is_academic_day
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: semester
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcademicCalendarList'
          description: ''
    post:
      operationId: api_v1_academics_api_academic_calendar_create
      description: ViewSet for AcademicCalendar model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademicCalendarCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcademicCalendarCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcademicCalendarCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendarCreate'
          description: ''
  /api/v1/academics/api/academic-calendar/{id}/:
    get:
      operationId: api_v1_academics_api_academic_calendar_retrieve
      description: ViewSet for AcademicCalendar model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic calendar.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendar'
          description: ''
    put:
      operationId: api_v1_academics_api_academic_calendar_update
      description: ViewSet for AcademicCalendar model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic calendar.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademicCalendar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcademicCalendar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcademicCalendar'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendar'
          description: ''
    patch:
      operationId: api_v1_academics_api_academic_calendar_partial_update
      description: ViewSet for AcademicCalendar model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic calendar.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcademicCalendar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcademicCalendar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcademicCalendar'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendar'
          description: ''
    delete:
      operationId: api_v1_academics_api_academic_calendar_destroy
      description: ViewSet for AcademicCalendar model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this academic calendar.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/academic-calendar/academic_days/:
    get:
      operationId: api_v1_academics_api_academic_calendar_academic_days_retrieve
      description: Get academic days for a specific period
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendar'
          description: ''
  /api/v1/academics/api/academic-calendar/by_month/:
    get:
      operationId: api_v1_academics_api_academic_calendar_by_month_retrieve
      description: Get events for a specific month
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendar'
          description: ''
  /api/v1/academics/api/academic-calendar/upcoming_events/:
    get:
      operationId: api_v1_academics_api_academic_calendar_upcoming_events_retrieve
      description: Get upcoming events
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicCalendar'
          description: ''
  /api/v1/academics/api/batch-enrollments/:
    get:
      operationId: api_v1_academics_api_batch_enrollments_list
      description: ViewSet for BatchCourseEnrollment model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - in: query
        name: auto_enroll_new_students
        schema:
          type: boolean
      - in: query
        name: course
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: semester
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - CANCELLED
          - COMPLETED
          - INACTIVE
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `COMPLETED` - Completed
          * `CANCELLED` - Cancelled
      - in: query
        name: student_batch
        schema:
          type: integer
      - in: query
        name: student_batch__academic_program
        schema:
          type: integer
      - in: query
        name: student_batch__department
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchCourseEnrollmentList'
          description: ''
    post:
      operationId: api_v1_academics_api_batch_enrollments_create
      description: ViewSet for BatchCourseEnrollment model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollmentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollmentCreate'
          description: ''
  /api/v1/academics/api/batch-enrollments/{id}/:
    get:
      operationId: api_v1_academics_api_batch_enrollments_retrieve
      description: ViewSet for BatchCourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollmentDetail'
          description: ''
    put:
      operationId: api_v1_academics_api_batch_enrollments_update
      description: ViewSet for BatchCourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
    patch:
      operationId: api_v1_academics_api_batch_enrollments_partial_update
      description: ViewSet for BatchCourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBatchCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBatchCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBatchCourseEnrollment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
    delete:
      operationId: api_v1_academics_api_batch_enrollments_destroy
      description: ViewSet for BatchCourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/batch-enrollments/{id}/activate/:
    post:
      operationId: api_v1_academics_api_batch_enrollments_activate_create
      description: Activate batch enrollment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/{id}/deactivate/:
    post:
      operationId: api_v1_academics_api_batch_enrollments_deactivate_create
      description: Deactivate batch enrollment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/{id}/detail/:
    get:
      operationId: api_v1_academics_api_batch_enrollments_detail_retrieve
      description: Get detailed batch enrollment information including enrolled students
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/{id}/enroll_students/:
    post:
      operationId: api_v1_academics_api_batch_enrollments_enroll_students_create
      description: Manually enroll all students from the batch into the course
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Batch Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/bulk_enroll/:
    post:
      operationId: api_v1_academics_api_batch_enrollments_bulk_enroll_create
      description: Bulk enroll multiple batches to multiple courses
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/by_batch/:
    get:
      operationId: api_v1_academics_api_batch_enrollments_by_batch_retrieve
      description: Get batch enrollments for a specific student batch
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/by_course/:
    get:
      operationId: api_v1_academics_api_batch_enrollments_by_course_retrieve
      description: Get batch enrollments for a specific course
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/batch-enrollments/statistics/:
    get:
      operationId: api_v1_academics_api_batch_enrollments_statistics_retrieve
      description: Get batch enrollment statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCourseEnrollment'
          description: ''
  /api/v1/academics/api/course-prerequisites/:
    get:
      operationId: api_v1_academics_api_course_prerequisites_list
      description: ViewSet for CoursePrerequisite model
      parameters:
      - in: query
        name: course
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_mandatory
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: prerequisite_course
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student_batch
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCoursePrerequisiteList'
          description: ''
    post:
      operationId: api_v1_academics_api_course_prerequisites_create
      description: ViewSet for CoursePrerequisite model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursePrerequisiteCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoursePrerequisiteCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoursePrerequisiteCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisiteCreate'
          description: ''
  /api/v1/academics/api/course-prerequisites/{id}/:
    get:
      operationId: api_v1_academics_api_course_prerequisites_retrieve
      description: ViewSet for CoursePrerequisite model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Prerequisite.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisite'
          description: ''
    put:
      operationId: api_v1_academics_api_course_prerequisites_update
      description: ViewSet for CoursePrerequisite model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Prerequisite.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursePrerequisite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoursePrerequisite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoursePrerequisite'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisite'
          description: ''
    patch:
      operationId: api_v1_academics_api_course_prerequisites_partial_update
      description: ViewSet for CoursePrerequisite model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Prerequisite.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoursePrerequisite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoursePrerequisite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoursePrerequisite'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisite'
          description: ''
    delete:
      operationId: api_v1_academics_api_course_prerequisites_destroy
      description: ViewSet for CoursePrerequisite model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Prerequisite.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/course-prerequisites/by_batch/:
    get:
      operationId: api_v1_academics_api_course_prerequisites_by_batch_retrieve
      description: Get prerequisites for a specific student batch
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisite'
          description: ''
  /api/v1/academics/api/course-prerequisites/by_course/:
    get:
      operationId: api_v1_academics_api_course_prerequisites_by_course_retrieve
      description: Get prerequisites for a specific course
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisite'
          description: ''
  /api/v1/academics/api/course-prerequisites/check_prerequisites/:
    get:
      operationId: api_v1_academics_api_course_prerequisites_check_prerequisites_retrieve
      description: Check if a student/batch meets prerequisites for a course
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePrerequisite'
          description: ''
  /api/v1/academics/api/course-sections/:
    get:
      operationId: api_v1_academics_api_course_sections_list
      description: ViewSet for CourseSection model
      parameters:
      - in: query
        name: course
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: section_type
        schema:
          type: string
          enum:
          - LAB
          - LECTURE
          - SEMINAR
          - TUTORIAL
          - WORKSHOP
        description: |-
          * `LECTURE` - Lecture
          * `LAB` - Laboratory
          * `TUTORIAL` - Tutorial
          * `SEMINAR` - Seminar
          * `WORKSHOP` - Workshop
      - in: query
        name: student_batch
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseSectionList'
          description: ''
    post:
      operationId: api_v1_academics_api_course_sections_create
      description: ViewSet for CourseSection model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseSectionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseSectionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseSectionCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSectionCreate'
          description: ''
  /api/v1/academics/api/course-sections/{id}/:
    get:
      operationId: api_v1_academics_api_course_sections_retrieve
      description: ViewSet for CourseSection model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Section.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
    put:
      operationId: api_v1_academics_api_course_sections_update
      description: ViewSet for CourseSection model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Section.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseSection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
    patch:
      operationId: api_v1_academics_api_course_sections_partial_update
      description: ViewSet for CourseSection model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Section.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseSection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
    delete:
      operationId: api_v1_academics_api_course_sections_destroy
      description: ViewSet for CourseSection model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Section.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/course-sections/available_sections/:
    get:
      operationId: api_v1_academics_api_course_sections_available_sections_retrieve
      description: Get sections with available capacity
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
  /api/v1/academics/api/course-sections/by_batch/:
    get:
      operationId: api_v1_academics_api_course_sections_by_batch_retrieve
      description: Get sections for a specific student batch
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
  /api/v1/academics/api/course-sections/by_course/:
    get:
      operationId: api_v1_academics_api_course_sections_by_course_retrieve
      description: Get sections for a specific course
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
  /api/v1/academics/api/course-sections/by_faculty/:
    get:
      operationId: api_v1_academics_api_course_sections_by_faculty_retrieve
      description: Get sections for a specific faculty member
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSection'
          description: ''
  /api/v1/academics/api/courses/:
    get:
      operationId: api_v1_academics_api_courses_list
      description: ViewSet for Course model
      parameters:
      - in: query
        name: credits
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: level
        schema:
          type: string
          enum:
          - CERTIFICATE
          - DIPLOMA
          - PG
          - PHD
          - UG
        description: |-
          * `UG` - Undergraduate
          * `PG` - Postgraduate
          * `PHD` - Doctorate
          * `DIPLOMA` - Diploma
          * `CERTIFICATE` - Certificate
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: programs
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - ARCHIVED
          - DRAFT
          - INACTIVE
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `DRAFT` - Draft
          * `ARCHIVED` - Archived
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseList'
          description: ''
    post:
      operationId: api_v1_academics_api_courses_create
      description: ViewSet for Course model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseCreate'
          description: ''
  /api/v1/academics/api/courses/{id}/:
    get:
      operationId: api_v1_academics_api_courses_retrieve
      description: ViewSet for Course model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
    put:
      operationId: api_v1_academics_api_courses_update
      description: ViewSet for Course model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: api_v1_academics_api_courses_partial_update
      description: ViewSet for Course model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: api_v1_academics_api_courses_destroy
      description: ViewSet for Course model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/courses/{id}/detail/:
    get:
      operationId: api_v1_academics_api_courses_detail_retrieve
      description: |-
        bool(x) -> bool

        Returns True when the argument x is true, False otherwise.
        The builtins True and False are the only two instances of the class bool.
        The class bool is a subclass of the class int, and cannot be subclassed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
  /api/v1/academics/api/courses/by_faculty/:
    get:
      operationId: api_v1_academics_api_courses_by_faculty_retrieve
      description: Get courses by specific faculty member
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/v1/academics/api/courses/by_level/:
    get:
      operationId: api_v1_academics_api_courses_by_level_retrieve
      description: Get courses by level
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/v1/academics/api/courses/statistics/:
    get:
      operationId: api_v1_academics_api_courses_statistics_retrieve
      description: Get course statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/v1/academics/api/enrollments/:
    get:
      operationId: api_v1_academics_api_enrollments_list
      description: ViewSet for CourseEnrollment model
      parameters:
      - in: query
        name: course_section
        schema:
          type: integer
      - in: query
        name: course_section__course
        schema:
          type: integer
      - in: query
        name: course_section__student_batch
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: enrollment_type
        schema:
          type: string
          enum:
          - AUDIT
          - CREDIT_TRANSFER
          - REGULAR
          - REPEAT
        description: |-
          * `REGULAR` - Regular
          * `AUDIT` - Audit
          * `CREDIT_TRANSFER` - Credit Transfer
          * `REPEAT` - Repeat Course
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - COMPLETED
          - DROPPED
          - ENROLLED
          - PENDING
          - WAITLISTED
          - WITHDRAWN
        description: |-
          * `ENROLLED` - Enrolled
          * `DROPPED` - Dropped
          * `COMPLETED` - Completed
          * `WITHDRAWN` - Withdrawn
          * `WAITLISTED` - Waitlisted
          * `PENDING` - Pending Approval
      - in: query
        name: student
        schema:
          type: string
          format: uuid
      - in: query
        name: student__student_batch
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseEnrollmentList'
          description: ''
    post:
      operationId: api_v1_academics_api_enrollments_create
      description: ViewSet for CourseEnrollment model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEnrollmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseEnrollmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseEnrollmentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollmentCreate'
          description: ''
  /api/v1/academics/api/enrollments/{id}/:
    get:
      operationId: api_v1_academics_api_enrollments_retrieve
      description: ViewSet for CourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
    put:
      operationId: api_v1_academics_api_enrollments_update
      description: ViewSet for CourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
    patch:
      operationId: api_v1_academics_api_enrollments_partial_update
      description: ViewSet for CourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseEnrollment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
    delete:
      operationId: api_v1_academics_api_enrollments_destroy
      description: ViewSet for CourseEnrollment model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/enrollments/batch_enrollment_summary/:
    get:
      operationId: api_v1_academics_api_enrollments_batch_enrollment_summary_retrieve
      description: Get enrollment summary by student batch
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/v1/academics/api/enrollments/by_batch/:
    get:
      operationId: api_v1_academics_api_enrollments_by_batch_retrieve
      description: Get enrollments for students in a specific batch
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/v1/academics/api/enrollments/by_course/:
    get:
      operationId: api_v1_academics_api_enrollments_by_course_retrieve
      description: Get enrollments for a specific course
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/v1/academics/api/enrollments/by_course_section/:
    get:
      operationId: api_v1_academics_api_enrollments_by_course_section_retrieve
      description: Get enrollments for a specific course section
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/v1/academics/api/enrollments/by_student/:
    get:
      operationId: api_v1_academics_api_enrollments_by_student_retrieve
      description: Get enrollments for a specific student
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/v1/academics/api/enrollments/statistics/:
    get:
      operationId: api_v1_academics_api_enrollments_statistics_retrieve
      description: Get enrollment statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/v1/academics/api/syllabi/:
    get:
      operationId: api_v1_academics_api_syllabi_list
      description: ViewSet for Syllabus model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - in: query
        name: course
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: semester
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - APPROVED
          - ARCHIVED
          - DRAFT
          - REVIEW
        description: |-
          * `DRAFT` - Draft
          * `REVIEW` - Under Review
          * `APPROVED` - Approved
          * `ACTIVE` - Active
          * `ARCHIVED` - Archived
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyllabusList'
          description: ''
    post:
      operationId: api_v1_academics_api_syllabi_create
      description: ViewSet for Syllabus model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyllabusCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyllabusCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyllabusCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusCreate'
          description: ''
  /api/v1/academics/api/syllabi/{id}/:
    get:
      operationId: api_v1_academics_api_syllabi_retrieve
      description: ViewSet for Syllabus model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Syllabus.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusDetail'
          description: ''
    put:
      operationId: api_v1_academics_api_syllabi_update
      description: ViewSet for Syllabus model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Syllabus.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Syllabus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Syllabus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Syllabus'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
    patch:
      operationId: api_v1_academics_api_syllabi_partial_update
      description: ViewSet for Syllabus model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Syllabus.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSyllabus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSyllabus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSyllabus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
    delete:
      operationId: api_v1_academics_api_syllabi_destroy
      description: ViewSet for Syllabus model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Syllabus.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/syllabi/{id}/approve/:
    post:
      operationId: api_v1_academics_api_syllabi_approve_create
      description: Approve a syllabus
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Syllabus.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Syllabus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Syllabus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Syllabus'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
  /api/v1/academics/api/syllabi/{id}/detail/:
    get:
      operationId: api_v1_academics_api_syllabi_detail_retrieve
      description: |-
        bool(x) -> bool

        Returns True when the argument x is true, False otherwise.
        The builtins True and False are the only two instances of the class bool.
        The class bool is a subclass of the class int, and cannot be subclassed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Syllabus.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusDetail'
          description: ''
  /api/v1/academics/api/syllabi/by_academic_year/:
    get:
      operationId: api_v1_academics_api_syllabi_by_academic_year_retrieve
      description: Get syllabi by academic year
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Syllabus'
          description: ''
  /api/v1/academics/api/syllabus-topics/:
    get:
      operationId: api_v1_academics_api_syllabus_topics_list
      description: ViewSet for SyllabusTopic model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: syllabus
        schema:
          type: integer
      - in: query
        name: week_number
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyllabusTopicList'
          description: ''
    post:
      operationId: api_v1_academics_api_syllabus_topics_create
      description: ViewSet for SyllabusTopic model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyllabusTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyllabusTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyllabusTopic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusTopic'
          description: ''
  /api/v1/academics/api/syllabus-topics/{id}/:
    get:
      operationId: api_v1_academics_api_syllabus_topics_retrieve
      description: ViewSet for SyllabusTopic model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus topic.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusTopic'
          description: ''
    put:
      operationId: api_v1_academics_api_syllabus_topics_update
      description: ViewSet for SyllabusTopic model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus topic.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyllabusTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyllabusTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyllabusTopic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusTopic'
          description: ''
    patch:
      operationId: api_v1_academics_api_syllabus_topics_partial_update
      description: ViewSet for SyllabusTopic model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus topic.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSyllabusTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSyllabusTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSyllabusTopic'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyllabusTopic'
          description: ''
    delete:
      operationId: api_v1_academics_api_syllabus_topics_destroy
      description: ViewSet for SyllabusTopic model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this syllabus topic.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/timetables/:
    get:
      operationId: api_v1_academics_api_timetables_list
      description: ViewSet for Timetable model
      parameters:
      - in: query
        name: course_section
        schema:
          type: integer
      - in: query
        name: course_section__course
        schema:
          type: integer
      - in: query
        name: course_section__faculty
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: day_of_week
        schema:
          type: string
          enum:
          - FRI
          - MON
          - SAT
          - SUN
          - THU
          - TUE
          - WED
        description: |-
          * `MON` - Monday
          * `TUE` - Tuesday
          * `WED` - Wednesday
          * `THU` - Thursday
          * `FRI` - Friday
          * `SAT` - Saturday
          * `SUN` - Sunday
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: timetable_type
        schema:
          type: string
          enum:
          - EXAM
          - MAKEUP
          - REGULAR
          - SPECIAL
        description: |-
          * `REGULAR` - Regular Schedule
          * `EXAM` - Examination Schedule
          * `MAKEUP` - Make-up Classes
          * `SPECIAL` - Special Events
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimetableList'
          description: ''
    post:
      operationId: api_v1_academics_api_timetables_create
      description: ViewSet for Timetable model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimetableCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimetableCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimetableCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableCreate'
          description: ''
  /api/v1/academics/api/timetables/{id}/:
    get:
      operationId: api_v1_academics_api_timetables_retrieve
      description: ViewSet for Timetable model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this timetable.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableDetail'
          description: ''
    put:
      operationId: api_v1_academics_api_timetables_update
      description: ViewSet for Timetable model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this timetable.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timetable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Timetable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Timetable'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetable'
          description: ''
    patch:
      operationId: api_v1_academics_api_timetables_partial_update
      description: ViewSet for Timetable model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this timetable.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTimetable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTimetable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTimetable'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetable'
          description: ''
    delete:
      operationId: api_v1_academics_api_timetables_destroy
      description: ViewSet for Timetable model
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this timetable.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/api/timetables/{id}/detail/:
    get:
      operationId: api_v1_academics_api_timetables_detail_retrieve
      description: |-
        bool(x) -> bool

        Returns True when the argument x is true, False otherwise.
        The builtins True and False are the only two instances of the class bool.
        The class bool is a subclass of the class int, and cannot be subclassed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this timetable.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimetableDetail'
          description: ''
  /api/v1/academics/api/timetables/conflicts/:
    get:
      operationId: api_v1_academics_api_timetables_conflicts_retrieve
      description: Check for timetable conflicts
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetable'
          description: ''
  /api/v1/academics/api/timetables/weekly_schedule/:
    get:
      operationId: api_v1_academics_api_timetables_weekly_schedule_retrieve
      description: Get weekly schedule for a specific faculty or course
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetable'
          description: ''
  /api/v1/achievements/achievements/:
    get:
      operationId: api_v1_achievements_achievements_list
      description: Optimized list view with caching
      parameters:
      - in: query
        name: category
        schema:
          type: string
          enum:
          - AWARD
          - CERTIFICATION
          - OTHER
          - PATENT
          - PROJECT
          - PUBLICATION
          - SPORTS
          - VOLUNTEER
        description: |-
          * `AWARD` - Award
          * `CERTIFICATION` - Certification
          * `PUBLICATION` - Publication
          * `PROJECT` - Project
          * `PATENT` - Patent
          * `SPORTS` - Sports / Co-curricular
          * `VOLUNTEER` - Volunteer
          * `OTHER` - Other
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAchievementList'
          description: ''
    post:
      operationId: api_v1_achievements_achievements_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/achievements/{id}/:
    get:
      operationId: api_v1_achievements_achievements_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this achievement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
          description: ''
    put:
      operationId: api_v1_achievements_achievements_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this achievement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_achievements_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this achievement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_achievements_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this achievement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/achievements/education/:
    get:
      operationId: api_v1_achievements_education_list
      description: Optimized list view with caching
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEducationList'
          description: ''
    post:
      operationId: api_v1_achievements_education_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/education/{id}/:
    get:
      operationId: api_v1_achievements_education_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this education.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    put:
      operationId: api_v1_achievements_education_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this education.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_education_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this education.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_education_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this education.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/achievements/experiences/:
    get:
      operationId: api_v1_achievements_experiences_list
      description: Optimized list view with caching
      parameters:
      - in: query
        name: currently_working
        schema:
          type: boolean
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperienceList'
          description: ''
    post:
      operationId: api_v1_achievements_experiences_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/experiences/{id}/:
    get:
      operationId: api_v1_achievements_experiences_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experience.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    put:
      operationId: api_v1_achievements_experiences_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experience.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_experiences_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experience.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_experiences_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this experience.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/achievements/projects/:
    get:
      operationId: api_v1_achievements_projects_list
      description: Optimized list view with caching
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: api_v1_achievements_projects_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/projects/{id}/:
    get:
      operationId: api_v1_achievements_projects_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: api_v1_achievements_projects_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_projects_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_projects_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/achievements/publications/:
    get:
      operationId: api_v1_achievements_publications_list
      description: Optimized list view with caching
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: year
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
    post:
      operationId: api_v1_achievements_publications_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/publications/{id}/:
    get:
      operationId: api_v1_achievements_publications_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this publication.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    put:
      operationId: api_v1_achievements_publications_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this publication.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_publications_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this publication.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_publications_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this publication.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/achievements/resume-profiles/:
    get:
      operationId: api_v1_achievements_resume_profiles_list
      description: Optimized list view with caching
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResumeProfileList'
          description: ''
    post:
      operationId: api_v1_achievements_resume_profiles_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/resume-profiles/{id}/:
    get:
      operationId: api_v1_achievements_resume_profiles_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this resume profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeProfile'
          description: ''
    put:
      operationId: api_v1_achievements_resume_profiles_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this resume profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_resume_profiles_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this resume profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_resume_profiles_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this resume profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/achievements/skills/:
    get:
      operationId: api_v1_achievements_skills_list
      description: Optimized list view with caching
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_core
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_type
        schema:
          type: string
          enum:
          - departments.department
          - faculty.faculty
          - students.student
        description: |-
          * `students.student` - Student
          * `faculty.faculty` - Faculty
          * `departments.department` - Department
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkillList'
          description: ''
    post:
      operationId: api_v1_achievements_skills_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/achievements/skills/{id}/:
    get:
      operationId: api_v1_achievements_skills_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    put:
      operationId: api_v1_achievements_skills_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_achievements_skills_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_achievements_skills_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this skill.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/assignments/:
    get:
      operationId: api_v1_assignments_list
      description: View for listing and creating assignments
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
          description: ''
    post:
      operationId: api_v1_assignments_create
      description: View for listing and creating assignments
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCreate'
          description: ''
  /api/v1/assignments/{assignment_id}/analytics/:
    get:
      operationId: api_v1_assignments_analytics_retrieve
      description: Get comprehensive analytics dashboard for an assignment
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/assign-peer-reviews/:
    post:
      operationId: api_v1_assignments_assign_peer_reviews_create
      description: Assign peer reviews for an assignment
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/assign-section/:
    post:
      operationId: api_v1_assignments_assign_section_create
      description: |-
        Assign an existing assignment to a CourseSection and auto-link related entities.

        Body: {"course_section_id": "<uuid>", "include_students": true}
        - Sets canonical `course`, `course_section`, `department`.
        - Sets `academic_year` and `semester` from the section's `student_batch`.
        - Adds to M2M: `assigned_to_course_sections`, `assigned_to_courses`, `assigned_to_departments`.
        - Optionally adds all active students of the batch to `assigned_to_students`.
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/auto-groups/:
    post:
      operationId: api_v1_assignments_auto_groups_create
      description: |-
        Create assignment groups from a given StudentBatch.

        Body accepts either `group_size` or `num_groups` (prefer group_size).
        Example: {"student_batch_id": "...", "group_size": 10}
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/close/:
    post:
      operationId: api_v1_assignments_close_create
      description: Close an assignment
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/comments/:
    get:
      operationId: api_v1_assignments_comments_list
      description: View for listing and creating assignment comments
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssignmentCommentList'
          description: ''
    post:
      operationId: api_v1_assignments_comments_create
      description: View for listing and creating assignment comments
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentComment'
          description: ''
  /api/v1/assignments/{assignment_id}/learning-outcomes/:
    get:
      operationId: api_v1_assignments_learning_outcomes_list
      description: View for listing and creating learning outcomes
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentLearningOutcome'
          description: ''
    post:
      operationId: api_v1_assignments_learning_outcomes_create
      description: View for listing and creating learning outcomes
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentLearningOutcome'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentLearningOutcome'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentLearningOutcome'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentLearningOutcome'
          description: ''
  /api/v1/assignments/{assignment_id}/peer-reviews/:
    get:
      operationId: api_v1_assignments_peer_reviews_list
      description: View for listing and creating peer reviews
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentPeerReview'
          description: ''
    post:
      operationId: api_v1_assignments_peer_reviews_create
      description: View for listing and creating peer reviews
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentPeerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentPeerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentPeerReview'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentPeerReview'
          description: ''
  /api/v1/assignments/{assignment_id}/plagiarism-checks/:
    get:
      operationId: api_v1_assignments_plagiarism_checks_list
      description: View for listing and creating plagiarism checks
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentPlagiarismCheck'
          description: ''
    post:
      operationId: api_v1_assignments_plagiarism_checks_create
      description: View for listing and creating plagiarism checks
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentPlagiarismCheck'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentPlagiarismCheck'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentPlagiarismCheck'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentPlagiarismCheck'
          description: ''
  /api/v1/assignments/{assignment_id}/publish/:
    post:
      operationId: api_v1_assignments_publish_create
      description: Publish an assignment
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/submissions/:
    get:
      operationId: api_v1_assignments_submissions_retrieve_2
      description: Get all submissions for an assignment
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/{assignment_id}/submit/:
    get:
      operationId: api_v1_assignments_submit_list
      description: View for listing and creating assignment submissions
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssignmentSubmissionList'
          description: ''
    post:
      operationId: api_v1_assignments_submit_create
      description: View for listing and creating assignment submissions
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentSubmissionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentSubmissionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentSubmissionCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSubmissionCreate'
          description: ''
  /api/v1/assignments/{id}/:
    get:
      operationId: api_v1_assignments_retrieve
      description: View for retrieving, updating, and deleting assignments
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    put:
      operationId: api_v1_assignments_update
      description: View for retrieving, updating, and deleting assignments
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCreate'
          description: ''
    patch:
      operationId: api_v1_assignments_partial_update
      description: View for retrieving, updating, and deleting assignments
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentCreate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCreate'
          description: ''
    delete:
      operationId: api_v1_assignments_destroy
      description: View for retrieving, updating, and deleting assignments
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/assignments/categories/:
    get:
      operationId: api_v1_assignments_categories_list
      description: View for listing and creating assignment categories
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentCategory'
          description: ''
    post:
      operationId: api_v1_assignments_categories_create
      description: View for listing and creating assignment categories
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategory'
          description: ''
  /api/v1/assignments/categories/{id}/:
    get:
      operationId: api_v1_assignments_categories_retrieve
      description: View for retrieving, updating, and deleting assignment categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategory'
          description: ''
    put:
      operationId: api_v1_assignments_categories_update
      description: View for retrieving, updating, and deleting assignment categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategory'
          description: ''
    patch:
      operationId: api_v1_assignments_categories_partial_update
      description: View for retrieving, updating, and deleting assignment categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategory'
          description: ''
    delete:
      operationId: api_v1_assignments_categories_destroy
      description: View for retrieving, updating, and deleting assignment categories
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/assignments/files/upload/:
    post:
      operationId: api_v1_assignments_files_upload_create
      description: View for uploading assignment files
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentFile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentFile'
          description: ''
  /api/v1/assignments/my-assignments/:
    get:
      operationId: api_v1_assignments_my_assignments_retrieve
      description: Get assignments for the current user
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/notifications/:
    get:
      operationId: api_v1_assignments_notifications_list
      description: View for listing and creating assignment notifications
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentNotification'
          description: ''
    post:
      operationId: api_v1_assignments_notifications_create
      description: View for listing and creating assignment notifications
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentNotification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentNotification'
          description: ''
  /api/v1/assignments/notifications/{id}/:
    get:
      operationId: api_v1_assignments_notifications_retrieve
      description: View for retrieving and updating assignment notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentNotification'
          description: ''
    put:
      operationId: api_v1_assignments_notifications_update
      description: View for retrieving and updating assignment notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentNotification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentNotification'
          description: ''
    patch:
      operationId: api_v1_assignments_notifications_partial_update
      description: View for retrieving and updating assignment notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentNotification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentNotification'
          description: ''
  /api/v1/assignments/rubrics/:
    get:
      operationId: api_v1_assignments_rubrics_list
      description: View for listing and creating assignment rubrics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentRubric'
          description: ''
    post:
      operationId: api_v1_assignments_rubrics_create
      description: View for listing and creating assignment rubrics
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRubric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRubric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRubric'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubric'
          description: ''
  /api/v1/assignments/rubrics/{id}/:
    get:
      operationId: api_v1_assignments_rubrics_retrieve
      description: View for retrieving, updating, and deleting assignment rubrics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubric'
          description: ''
    put:
      operationId: api_v1_assignments_rubrics_update
      description: View for retrieving, updating, and deleting assignment rubrics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRubric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRubric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRubric'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubric'
          description: ''
    patch:
      operationId: api_v1_assignments_rubrics_partial_update
      description: View for retrieving, updating, and deleting assignment rubrics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRubric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRubric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRubric'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubric'
          description: ''
    delete:
      operationId: api_v1_assignments_rubrics_destroy
      description: View for retrieving, updating, and deleting assignment rubrics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/assignments/schedules/:
    get:
      operationId: api_v1_assignments_schedules_list
      description: View for listing and creating assignment schedules
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentSchedule'
          description: ''
    post:
      operationId: api_v1_assignments_schedules_create
      description: View for listing and creating assignment schedules
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSchedule'
          description: ''
  /api/v1/assignments/simple/:
    get:
      operationId: api_v1_assignments_simple_list
      description: Minimal assignment listing/creation with straightforward filters.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleAssignment'
          description: ''
    post:
      operationId: api_v1_assignments_simple_create
      description: Minimal assignment listing/creation with straightforward filters.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleAssignmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SimpleAssignmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimpleAssignmentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleAssignmentCreate'
          description: ''
  /api/v1/assignments/simple/{id}/:
    get:
      operationId: api_v1_assignments_simple_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleAssignment'
          description: ''
    put:
      operationId: api_v1_assignments_simple_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleAssignmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SimpleAssignmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimpleAssignmentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleAssignmentCreate'
          description: ''
    patch:
      operationId: api_v1_assignments_simple_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSimpleAssignmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSimpleAssignmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSimpleAssignmentCreate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleAssignmentCreate'
          description: ''
    delete:
      operationId: api_v1_assignments_simple_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/assignments/stats/:
    get:
      operationId: api_v1_assignments_stats_retrieve
      description: Get assignment statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/submissions/{id}/:
    get:
      operationId: api_v1_assignments_submissions_retrieve
      description: View for retrieving, updating, and deleting assignment submissions
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSubmission'
          description: ''
    put:
      operationId: api_v1_assignments_submissions_update
      description: View for retrieving, updating, and deleting assignment submissions
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentSubmission'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSubmission'
          description: ''
    patch:
      operationId: api_v1_assignments_submissions_partial_update
      description: View for retrieving, updating, and deleting assignment submissions
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentSubmission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentSubmission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentSubmission'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentSubmission'
          description: ''
    delete:
      operationId: api_v1_assignments_submissions_destroy
      description: View for retrieving, updating, and deleting assignment submissions
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/assignments/submissions/{submission_id}/grade/:
    post:
      operationId: api_v1_assignments_submissions_grade_create
      description: View for creating and updating assignment grades
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGrade'
          description: ''
    put:
      operationId: api_v1_assignments_submissions_grade_update
      description: View for creating and updating assignment grades
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGrade'
          description: ''
    patch:
      operationId: api_v1_assignments_submissions_grade_partial_update
      description: View for creating and updating assignment grades
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentGrade'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGrade'
          description: ''
  /api/v1/assignments/submissions/{submission_id}/rubric-grade/:
    post:
      operationId: api_v1_assignments_submissions_rubric_grade_create
      description: View for creating and updating rubric-based grades
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRubricGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRubricGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRubricGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubricGrade'
          description: ''
    put:
      operationId: api_v1_assignments_submissions_rubric_grade_update
      description: View for creating and updating rubric-based grades
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRubricGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentRubricGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentRubricGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubricGrade'
          description: ''
    patch:
      operationId: api_v1_assignments_submissions_rubric_grade_partial_update
      description: View for creating and updating rubric-based grades
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRubricGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRubricGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentRubricGrade'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentRubricGrade'
          description: ''
  /api/v1/assignments/submissions/{submission_id}/run-plagiarism-check/:
    post:
      operationId: api_v1_assignments_submissions_run_plagiarism_check_create
      description: Run plagiarism check on a submission
      parameters:
      - in: path
        name: submission_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/assignments/templates/:
    get:
      operationId: api_v1_assignments_templates_list
      description: View for listing and creating assignment templates
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssignmentTemplateList'
          description: ''
    post:
      operationId: api_v1_assignments_templates_create
      description: View for listing and creating assignment templates
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentTemplateCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentTemplateCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentTemplateCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentTemplateCreate'
          description: ''
  /api/v1/assignments/templates/{id}/:
    get:
      operationId: api_v1_assignments_templates_retrieve
      description: View for retrieving, updating, and deleting assignment templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentTemplate'
          description: ''
    put:
      operationId: api_v1_assignments_templates_update
      description: View for retrieving, updating, and deleting assignment templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignmentTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignmentTemplate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentTemplate'
          description: ''
    patch:
      operationId: api_v1_assignments_templates_partial_update
      description: View for retrieving, updating, and deleting assignment templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssignmentTemplate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentTemplate'
          description: ''
    delete:
      operationId: api_v1_assignments_templates_destroy
      description: View for retrieving, updating, and deleting assignment templates
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/attendance/attendance/records/:
    get:
      operationId: api_v1_attendance_attendance_records_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceRecordList'
          description: ''
    post:
      operationId: api_v1_attendance_attendance_records_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRecord'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceRecord'
          description: ''
  /api/v1/attendance/attendance/records/{id}/:
    get:
      operationId: api_v1_attendance_attendance_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceRecord'
          description: ''
    put:
      operationId: api_v1_attendance_attendance_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceRecord'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceRecord'
          description: ''
    patch:
      operationId: api_v1_attendance_attendance_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceRecord'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceRecord'
          description: ''
    delete:
      operationId: api_v1_attendance_attendance_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/attendance/attendance/sessions/:
    get:
      operationId: api_v1_attendance_attendance_sessions_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceSessionList'
          description: ''
    post:
      operationId: api_v1_attendance_attendance_sessions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSession'
          description: ''
  /api/v1/attendance/attendance/sessions/{id}/:
    get:
      operationId: api_v1_attendance_attendance_sessions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance session.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSession'
          description: ''
    put:
      operationId: api_v1_attendance_attendance_sessions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSession'
          description: ''
    patch:
      operationId: api_v1_attendance_attendance_sessions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendanceSession'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSession'
          description: ''
    delete:
      operationId: api_v1_attendance_attendance_sessions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance session.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/attendance/attendance/sessions/{id}/generate_records/:
    post:
      operationId: api_v1_attendance_attendance_sessions_generate_records_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attendance session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttendanceSession'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSession'
          description: ''
  /api/v1/departments/:
    get:
      operationId: api_v1_departments_list
      description: ViewSet for managing departments with comprehensive CRUD operations
      parameters:
      - in: query
        name: department_type
        schema:
          type: string
          enum:
          - ACADEMIC
          - ADMINISTRATIVE
          - RESEARCH
          - SERVICE
          - SUPPORT
        description: |-
          Type of department

          * `ACADEMIC` - Academic Department
          * `ADMINISTRATIVE` - Administrative Department
          * `RESEARCH` - Research Department
          * `SERVICE` - Service Department
          * `SUPPORT` - Support Department
      - in: query
        name: head_of_department
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - DISSOLVED
          - INACTIVE
          - MERGED
          - SUSPENDED
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `SUSPENDED` - Suspended
          * `MERGED` - Merged
          * `DISSOLVED` - Dissolved
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentListList'
          description: ''
    post:
      operationId: api_v1_departments_create
      description: ViewSet for managing departments with comprehensive CRUD operations
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/{id}/:
    get:
      operationId: api_v1_departments_retrieve
      description: ViewSet for managing departments with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDetail'
          description: ''
    put:
      operationId: api_v1_departments_update
      description: ViewSet for managing departments with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: api_v1_departments_partial_update
      description: ViewSet for managing departments with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: api_v1_departments_destroy
      description: ViewSet for managing departments with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/departments/{id}/announcements/:
    get:
      operationId: api_v1_departments_announcements_retrieve_2
      description: Get all announcements for a department
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/{id}/documents/:
    get:
      operationId: api_v1_departments_documents_retrieve_2
      description: Get all documents for a department
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/{id}/events/:
    get:
      operationId: api_v1_departments_events_retrieve_2
      description: Get all events for a department
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/{id}/resources/:
    get:
      operationId: api_v1_departments_resources_retrieve_2
      description: Get all resources for a department
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/{id}/update_counts/:
    post:
      operationId: api_v1_departments_update_counts_create
      description: Update faculty and student counts for a department
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9a-fA-F-]{36}$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/announcements/:
    get:
      operationId: api_v1_departments_announcements_list
      description: ViewSet for managing department announcements
      parameters:
      - in: query
        name: announcement_type
        schema:
          type: string
          enum:
          - ACADEMIC
          - DEADLINE
          - EMERGENCY
          - EVENT
          - GENERAL
          - MAINTENANCE
        description: |-
          * `GENERAL` - General
          * `ACADEMIC` - Academic
          * `EVENT` - Event
          * `DEADLINE` - Deadline
          * `EMERGENCY` - Emergency
          * `MAINTENANCE` - Maintenance
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: is_published
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: priority
        schema:
          type: string
          enum:
          - HIGH
          - LOW
          - MEDIUM
          - URGENT
        description: |-
          * `LOW` - Low
          * `MEDIUM` - Medium
          * `HIGH` - High
          * `URGENT` - Urgent
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: target_audience
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentAnnouncementList'
          description: ''
    post:
      operationId: api_v1_departments_announcements_create
      description: ViewSet for managing department announcements
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentAnnouncement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentAnnouncement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentAnnouncement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentAnnouncement'
          description: ''
  /api/v1/departments/announcements/{id}/:
    get:
      operationId: api_v1_departments_announcements_retrieve
      description: ViewSet for managing department announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Announcement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentAnnouncement'
          description: ''
    put:
      operationId: api_v1_departments_announcements_update
      description: ViewSet for managing department announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Announcement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentAnnouncement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentAnnouncement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentAnnouncement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentAnnouncement'
          description: ''
    patch:
      operationId: api_v1_departments_announcements_partial_update
      description: ViewSet for managing department announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Announcement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentAnnouncement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentAnnouncement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentAnnouncement'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentAnnouncement'
          description: ''
    delete:
      operationId: api_v1_departments_announcements_destroy
      description: ViewSet for managing department announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Announcement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/departments/documents/:
    get:
      operationId: api_v1_departments_documents_list
      description: ViewSet for managing department documents
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: document_type
        schema:
          type: string
          enum:
          - CERTIFICATE
          - FORM
          - GUIDELINE
          - MANUAL
          - OTHER
          - POLICY
          - PROCEDURE
          - REPORT
        description: |-
          * `POLICY` - Policy Document
          * `PROCEDURE` - Procedure Document
          * `FORM` - Form
          * `REPORT` - Report
          * `MANUAL` - Manual
          * `GUIDELINE` - Guideline
          * `CERTIFICATE` - Certificate
          * `OTHER` - Other
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: uploaded_by
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentDocumentList'
          description: ''
    post:
      operationId: api_v1_departments_documents_create
      description: ViewSet for managing department documents
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDocument'
          description: ''
  /api/v1/departments/documents/{id}/:
    get:
      operationId: api_v1_departments_documents_retrieve
      description: ViewSet for managing department documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDocument'
          description: ''
    put:
      operationId: api_v1_departments_documents_update
      description: ViewSet for managing department documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDocument'
          description: ''
    patch:
      operationId: api_v1_departments_documents_partial_update
      description: ViewSet for managing department documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDocument'
          description: ''
    delete:
      operationId: api_v1_departments_documents_destroy
      description: ViewSet for managing department documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/departments/events/:
    get:
      operationId: api_v1_departments_events_list
      description: ViewSet for managing department events
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: event_type
        schema:
          type: string
          enum:
          - CELEBRATION
          - COMPETITION
          - CONFERENCE
          - EXHIBITION
          - MEETING
          - OTHER
          - SEMINAR
          - WORKSHOP
        description: |-
          * `SEMINAR` - Seminar
          * `WORKSHOP` - Workshop
          * `CONFERENCE` - Conference
          * `MEETING` - Meeting
          * `CELEBRATION` - Celebration
          * `COMPETITION` - Competition
          * `EXHIBITION` - Exhibition
          * `OTHER` - Other
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: organizer
        schema:
          type: string
          format: uuid
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - COMPLETED
          - CONFIRMED
          - ONGOING
          - PLANNED
          - POSTPONED
        description: |-
          * `PLANNED` - Planned
          * `CONFIRMED` - Confirmed
          * `ONGOING` - Ongoing
          * `COMPLETED` - Completed
          * `CANCELLED` - Cancelled
          * `POSTPONED` - Postponed
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentEventList'
          description: ''
    post:
      operationId: api_v1_departments_events_create
      description: ViewSet for managing department events
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentEvent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentEvent'
          description: ''
  /api/v1/departments/events/{id}/:
    get:
      operationId: api_v1_departments_events_retrieve
      description: ViewSet for managing department events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Event.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentEvent'
          description: ''
    put:
      operationId: api_v1_departments_events_update
      description: ViewSet for managing department events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Event.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentEvent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentEvent'
          description: ''
    patch:
      operationId: api_v1_departments_events_partial_update
      description: ViewSet for managing department events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Event.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentEvent'
          description: ''
    delete:
      operationId: api_v1_departments_events_destroy
      description: ViewSet for managing department events
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Event.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/departments/resources/:
    get:
      operationId: api_v1_departments_resources_list
      description: ViewSet for managing department resources
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: resource_type
        schema:
          type: string
          enum:
          - EQUIPMENT
          - FACILITY
          - LABORATORY
          - LIBRARY
          - OTHER
          - SOFTWARE
          - VEHICLE
        description: |-
          * `LABORATORY` - Laboratory
          * `LIBRARY` - Library
          * `EQUIPMENT` - Equipment
          * `SOFTWARE` - Software
          * `FACILITY` - Facility
          * `VEHICLE` - Vehicle
          * `OTHER` - Other
      - in: query
        name: responsible_person
        schema:
          type: string
          format: uuid
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - AVAILABLE
          - IN_USE
          - MAINTENANCE
          - OUT_OF_ORDER
          - RETIRED
        description: |-
          * `AVAILABLE` - Available
          * `IN_USE` - In Use
          * `MAINTENANCE` - Under Maintenance
          * `OUT_OF_ORDER` - Out of Order
          * `RETIRED` - Retired
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentResourceList'
          description: ''
    post:
      operationId: api_v1_departments_resources_create
      description: ViewSet for managing department resources
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentResource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentResource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentResource'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResource'
          description: ''
  /api/v1/departments/resources/{id}/:
    get:
      operationId: api_v1_departments_resources_retrieve
      description: ViewSet for managing department resources
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Resource.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResource'
          description: ''
    put:
      operationId: api_v1_departments_resources_update
      description: ViewSet for managing department resources
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Resource.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentResource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepartmentResource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepartmentResource'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResource'
          description: ''
    patch:
      operationId: api_v1_departments_resources_partial_update
      description: ViewSet for managing department resources
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Resource.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentResource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentResource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartmentResource'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResource'
          description: ''
    delete:
      operationId: api_v1_departments_resources_destroy
      description: ViewSet for managing department resources
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Department Resource.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/departments/search/:
    post:
      operationId: api_v1_departments_search_create
      description: Advanced search for departments
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/departments/stats/:
    get:
      operationId: api_v1_departments_stats_retrieve
      description: Get department statistics
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/events/categories/:
    get:
      operationId: api_v1_events_categories_list
      description: Optimized list view with caching
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventCategoryList'
          description: ''
    post:
      operationId: api_v1_events_categories_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/events/categories/{id}/:
    get:
      operationId: api_v1_events_categories_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
          description: ''
    put:
      operationId: api_v1_events_categories_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_events_categories_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_events_categories_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/events/:
    get:
      operationId: api_v1_events_events_list
      description: Optimized list view with caching
      parameters:
      - in: query
        name: category
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - COMPLETED
          - DRAFT
          - PUBLISHED
        description: |-
          * `DRAFT` - Draft
          * `PUBLISHED` - Published
          * `CANCELLED` - Cancelled
          * `COMPLETED` - Completed
      - in: query
        name: venue
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: api_v1_events_events_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/events/events/{id}/:
    get:
      operationId: api_v1_events_events_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: api_v1_events_events_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_events_events_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_events_events_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/registrations/:
    get:
      operationId: api_v1_events_registrations_list
      description: Optimized list view with caching
      parameters:
      - in: query
        name: attendee_type
        schema:
          type: string
          enum:
          - ALUMNI
          - FACULTY
          - GUEST
          - STAFF
          - STUDENT
        description: |-
          * `STUDENT` - Student
          * `FACULTY` - Faculty
          * `STAFF` - Staff
          * `GUEST` - Guest
          * `ALUMNI` - Alumni
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: event
        schema:
          type: string
          format: uuid
      - in: query
        name: is_waitlisted
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventRegistrationList'
          description: ''
    post:
      operationId: api_v1_events_registrations_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/events/registrations/{id}/:
    get:
      operationId: api_v1_events_registrations_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRegistration'
          description: ''
    put:
      operationId: api_v1_events_registrations_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_events_registrations_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_events_registrations_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event registration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/venues/:
    get:
      operationId: api_v1_events_venues_list
      description: Optimized list view with caching
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVenueList'
          description: ''
    post:
      operationId: api_v1_events_venues_create
      description: High-performance ViewSet with caching and optimization
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/events/venues/{id}/:
    get:
      operationId: api_v1_events_venues_retrieve
      description: Optimized retrieve view with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this venue.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    put:
      operationId: api_v1_events_venues_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this venue.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_events_venues_partial_update
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this venue.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_events_venues_destroy
      description: High-performance ViewSet with caching and optimization
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this venue.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/bulk-operations/assign-rooms/:
    post:
      operationId: api_v1_exams_api_bulk_operations_assign_rooms_create
      description: Bulk assign rooms to exam schedules
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/exams/api/bulk-operations/assign-staff/:
    post:
      operationId: api_v1_exams_api_bulk_operations_assign_staff_create
      description: Bulk assign staff to exam schedules
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/exams/api/bulk-operations/generate-hall-tickets/:
    post:
      operationId: api_v1_exams_api_bulk_operations_generate_hall_tickets_create
      description: Bulk generate hall tickets for approved registrations
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/exams/api/dashboard/stats/:
    get:
      operationId: api_v1_exams_api_dashboard_stats_retrieve
      description: Dashboard statistics view
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/exams/api/exam-attendance/:
    get:
      operationId: api_v1_exams_api_exam_attendance_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_registration__exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: invigilator
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ABSENT
          - DISQUALIFIED
          - LATE
          - MEDICAL_LEAVE
          - PRESENT
        description: |-
          * `PRESENT` - Present
          * `ABSENT` - Absent
          * `LATE` - Late
          * `DISQUALIFIED` - Disqualified
          * `MEDICAL_LEAVE` - Medical Leave
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamAttendanceList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_attendance_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttendance'
          description: ''
  /api/v1/exams/api/exam-attendance/{id}/:
    get:
      operationId: api_v1_exams_api_exam_attendance_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Attendance.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttendance'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_attendance_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Attendance.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttendance'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_attendance_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Attendance.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamAttendance'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttendance'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_attendance_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Attendance.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-attendance/{id}/check_out/:
    post:
      operationId: api_v1_exams_api_exam_attendance_check_out_create
      description: Mark student check out from exam
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Attendance.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttendance'
          description: ''
  /api/v1/exams/api/exam-attendance/{id}/mark_attendance/:
    post:
      operationId: api_v1_exams_api_exam_attendance_mark_attendance_create
      description: Mark student attendance for exam
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Attendance.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAttendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttendance'
          description: ''
  /api/v1/exams/api/exam-registrations/:
    get:
      operationId: api_v1_exams_api_exam_registrations_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: exam_schedule__exam_session
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - APPROVED
          - CANCELLED
          - COMPLETED
          - PENDING
          - REJECTED
        description: |-
          * `PENDING` - Pending Approval
          * `APPROVED` - Approved
          * `REJECTED` - Rejected
          * `CANCELLED` - Cancelled
          * `COMPLETED` - Completed
      - in: query
        name: student
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamRegistrationList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_registrations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistration'
          description: ''
  /api/v1/exams/api/exam-registrations/{id}/:
    get:
      operationId: api_v1_exams_api_exam_registrations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Registration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistrationDetail'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_registrations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Registration.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistration'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_registrations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Registration.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamRegistration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistration'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_registrations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Registration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-registrations/{id}/approve_registration/:
    post:
      operationId: api_v1_exams_api_exam_registrations_approve_registration_create
      description: Approve a student's exam registration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Registration.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistration'
          description: ''
  /api/v1/exams/api/exam-registrations/{id}/reject_registration/:
    post:
      operationId: api_v1_exams_api_exam_registrations_reject_registration_create
      description: Reject a student's exam registration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Registration.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRegistration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistration'
          description: ''
  /api/v1/exams/api/exam-registrations/pending_approvals/:
    get:
      operationId: api_v1_exams_api_exam_registrations_pending_approvals_retrieve
      description: Get all pending registrations that need approval
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRegistration'
          description: ''
  /api/v1/exams/api/exam-results/:
    get:
      operationId: api_v1_exams_api_exam_results_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_registration__exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: is_pass
        schema:
          type: boolean
      - in: query
        name: is_published
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamResultList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_results_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamResult'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
  /api/v1/exams/api/exam-results/{id}/:
    get:
      operationId: api_v1_exams_api_exam_results_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Result.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_results_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Result.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamResult'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_results_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Result.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamResult'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_results_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Result.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-results/{id}/publish_result/:
    post:
      operationId: api_v1_exams_api_exam_results_publish_result_create
      description: Publish exam result to student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Result.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamResult'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
  /api/v1/exams/api/exam-results/exam_results/:
    get:
      operationId: api_v1_exams_api_exam_results_exam_results_retrieve
      description: Get results for a specific exam
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
  /api/v1/exams/api/exam-results/student_results/:
    get:
      operationId: api_v1_exams_api_exam_results_student_results_retrieve
      description: Get results for a specific student
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamResult'
          description: ''
  /api/v1/exams/api/exam-rooms/:
    get:
      operationId: api_v1_exams_api_exam_rooms_list
      parameters:
      - in: query
        name: building
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: floor
        schema:
          type: integer
      - in: query
        name: is_accessible
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: room_type
        schema:
          type: string
          enum:
          - AUDITORIUM
          - CLASSROOM
          - HALL
          - LAB
          - ONLINE
          - OUTDOOR
        description: |-
          * `CLASSROOM` - Classroom
          * `LAB` - Laboratory
          * `AUDITORIUM` - Auditorium
          * `HALL` - Examination Hall
          * `ONLINE` - Online Platform
          * `OUTDOOR` - Outdoor Venue
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamRoomList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_rooms_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRoom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoom'
          description: ''
  /api/v1/exams/api/exam-rooms/{id}/:
    get:
      operationId: api_v1_exams_api_exam_rooms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoom'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_rooms_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRoom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoom'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_rooms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamRoom'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoom'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_rooms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-rooms/{id}/availability/:
    get:
      operationId: api_v1_exams_api_exam_rooms_availability_retrieve
      description: Check room availability for a specific date range
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoom'
          description: ''
  /api/v1/exams/api/exam-rooms/{id}/exam_allocations/:
    get:
      operationId: api_v1_exams_api_exam_rooms_exam_allocations_retrieve
      description: Get all exam allocations for a specific room
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoom'
          description: ''
  /api/v1/exams/api/exam-schedules/:
    get:
      operationId: api_v1_exams_api_exam_schedules_list
      parameters:
      - in: query
        name: course
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_session
        schema:
          type: string
          format: uuid
      - in: query
        name: exam_type
        schema:
          type: string
          enum:
          - ASSIGNMENT
          - PRACTICAL
          - PROJECT
          - THEORY
          - VIVA
        description: |-
          * `THEORY` - Theory
          * `PRACTICAL` - Practical
          * `VIVA` - Viva Voce
          * `PROJECT` - Project Presentation
          * `ASSIGNMENT` - Assignment Submission
      - in: query
        name: is_online
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - COMPLETED
          - ONGOING
          - POSTPONED
          - SCHEDULED
        description: |-
          * `SCHEDULED` - Scheduled
          * `ONGOING` - Ongoing
          * `COMPLETED` - Completed
          * `CANCELLED` - Cancelled
          * `POSTPONED` - Postponed
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamScheduleList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_schedules_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/v1/exams/api/exam-schedules/{id}/:
    get:
      operationId: api_v1_exams_api_exam_schedules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamScheduleDetail'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_schedules_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_schedules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamSchedule'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_schedules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-schedules/{id}/end_exam/:
    post:
      operationId: api_v1_exams_api_exam_schedules_end_exam_create
      description: End an exam (change status to COMPLETED)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/v1/exams/api/exam-schedules/{id}/registrations/:
    get:
      operationId: api_v1_exams_api_exam_schedules_registrations_retrieve
      description: Get all registrations for a specific exam schedule
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/v1/exams/api/exam-schedules/{id}/room_allocations/:
    get:
      operationId: api_v1_exams_api_exam_schedules_room_allocations_retrieve
      description: Get room allocations for a specific exam schedule
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/v1/exams/api/exam-schedules/{id}/staff_assignments/:
    get:
      operationId: api_v1_exams_api_exam_schedules_staff_assignments_retrieve
      description: Get staff assignments for a specific exam schedule
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/v1/exams/api/exam-schedules/{id}/start_exam/:
    post:
      operationId: api_v1_exams_api_exam_schedules_start_exam_create
      description: Start an exam (change status to ONGOING)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSchedule'
          description: ''
  /api/v1/exams/api/exam-sessions/:
    get:
      operationId: api_v1_exams_api_exam_sessions_list
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: semester
        schema:
          type: integer
      - in: query
        name: session_type
        schema:
          type: string
          enum:
          - ASSIGNMENT
          - END_SEM
          - MID_SEM
          - PRACTICAL
          - PROJECT
          - QUIZ
          - THESIS
          - VIVA
        description: |-
          * `MID_SEM` - Mid Semester
          * `END_SEM` - End Semester
          * `QUIZ` - Quiz
          * `ASSIGNMENT` - Assignment
          * `PROJECT` - Project
          * `PRACTICAL` - Practical
          * `VIVA` - Viva Voce
          * `THESIS` - Thesis Defense
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - COMPLETED
          - DRAFT
          - ONGOING
          - PUBLISHED
        description: |-
          * `DRAFT` - Draft
          * `PUBLISHED` - Published
          * `ONGOING` - Ongoing
          * `COMPLETED` - Completed
          * `CANCELLED` - Cancelled
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamSessionSummaryList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_sessions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSession'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
  /api/v1/exams/api/exam-sessions/{id}/:
    get:
      operationId: api_v1_exams_api_exam_sessions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Session.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_sessions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamSession'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_sessions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamSession'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_sessions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Session.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-sessions/{id}/exam_schedules/:
    get:
      operationId: api_v1_exams_api_exam_sessions_exam_schedules_retrieve
      description: Get all exam schedules for a specific session
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Session.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
  /api/v1/exams/api/exam-sessions/{id}/statistics/:
    get:
      operationId: api_v1_exams_api_exam_sessions_statistics_retrieve
      description: Get statistics for a specific exam session
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Session.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
  /api/v1/exams/api/exam-sessions/active_sessions/:
    get:
      operationId: api_v1_exams_api_exam_sessions_active_sessions_retrieve
      description: Get all active exam sessions
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamSession'
          description: ''
  /api/v1/exams/api/exam-violations/:
    get:
      operationId: api_v1_exams_api_exam_violations_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_registration__exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: is_resolved
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - CRITICAL
          - MAJOR
          - MINOR
          - MODERATE
        description: |-
          * `MINOR` - Minor
          * `MODERATE` - Moderate
          * `MAJOR` - Major
          * `CRITICAL` - Critical
      - in: query
        name: violation_type
        schema:
          type: string
          enum:
          - CHEATING
          - COPYING
          - EARLY_DEPARTURE
          - LATE_ARRIVAL
          - LEAVING_SEAT
          - MOBILE_PHONE
          - OTHER
          - TALKING
          - UNAUTHORIZED_MATERIAL
        description: |-
          * `CHEATING` - Cheating
          * `COPYING` - Copying from others
          * `UNAUTHORIZED_MATERIAL` - Using unauthorized material
          * `MOBILE_PHONE` - Using mobile phone
          * `TALKING` - Talking during exam
          * `LEAVING_SEAT` - Leaving seat without permission
          * `LATE_ARRIVAL` - Late arrival
          * `EARLY_DEPARTURE` - Early departure
          * `OTHER` - Other violation
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamViolationList'
          description: ''
    post:
      operationId: api_v1_exams_api_exam_violations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamViolation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamViolation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamViolation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamViolation'
          description: ''
  /api/v1/exams/api/exam-violations/{id}/:
    get:
      operationId: api_v1_exams_api_exam_violations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Violation.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamViolation'
          description: ''
    put:
      operationId: api_v1_exams_api_exam_violations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Violation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamViolation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamViolation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamViolation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamViolation'
          description: ''
    patch:
      operationId: api_v1_exams_api_exam_violations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Violation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamViolation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamViolation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamViolation'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamViolation'
          description: ''
    delete:
      operationId: api_v1_exams_api_exam_violations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Violation.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/exam-violations/{id}/resolve_violation/:
    post:
      operationId: api_v1_exams_api_exam_violations_resolve_violation_create
      description: Resolve a violation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Violation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamViolation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamViolation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamViolation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamViolation'
          description: ''
  /api/v1/exams/api/hall-tickets/:
    get:
      operationId: api_v1_exams_api_hall_tickets_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_registration__exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: exam_room
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - DRAFT
          - EXPIRED
          - GENERATED
          - ISSUED
          - PRINTED
          - USED
        description: |-
          * `DRAFT` - Draft
          * `GENERATED` - Generated
          * `PRINTED` - Printed
          * `ISSUED` - Issued to Student
          * `USED` - Used in Exam
          * `EXPIRED` - Expired
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHallTicketList'
          description: ''
    post:
      operationId: api_v1_exams_api_hall_tickets_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HallTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HallTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HallTicket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicket'
          description: ''
  /api/v1/exams/api/hall-tickets/{id}/:
    get:
      operationId: api_v1_exams_api_hall_tickets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicketDetail'
          description: ''
    put:
      operationId: api_v1_exams_api_hall_tickets_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HallTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HallTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HallTicket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicket'
          description: ''
    patch:
      operationId: api_v1_exams_api_hall_tickets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHallTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHallTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHallTicket'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicket'
          description: ''
    delete:
      operationId: api_v1_exams_api_hall_tickets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/hall-tickets/{id}/download_pdf/:
    get:
      operationId: api_v1_exams_api_hall_tickets_download_pdf_retrieve
      description: Download hall ticket as PDF
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicket'
          description: ''
  /api/v1/exams/api/hall-tickets/{id}/issue_ticket/:
    post:
      operationId: api_v1_exams_api_hall_tickets_issue_ticket_create
      description: Issue hall ticket to student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HallTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HallTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HallTicket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicket'
          description: ''
  /api/v1/exams/api/hall-tickets/{id}/print_ticket/:
    post:
      operationId: api_v1_exams_api_hall_tickets_print_ticket_create
      description: Mark hall ticket as printed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Hall Ticket.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HallTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HallTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HallTicket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HallTicket'
          description: ''
  /api/v1/exams/api/reports/exam-summary/:
    get:
      operationId: api_v1_exams_api_reports_exam_summary_retrieve
      description: Generate exam summary report
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/exams/api/reports/student-performance/:
    get:
      operationId: api_v1_exams_api_reports_student_performance_retrieve
      description: Generate student performance report
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/exams/api/room-allocations/:
    get:
      operationId: api_v1_exams_api_room_allocations_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_room
        schema:
          type: string
          format: uuid
      - in: query
        name: exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: is_primary
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamRoomAllocationList'
          description: ''
    post:
      operationId: api_v1_exams_api_room_allocations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRoomAllocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRoomAllocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRoomAllocation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoomAllocation'
          description: ''
  /api/v1/exams/api/room-allocations/{id}/:
    get:
      operationId: api_v1_exams_api_room_allocations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room Allocation.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoomAllocation'
          description: ''
    put:
      operationId: api_v1_exams_api_room_allocations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room Allocation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRoomAllocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamRoomAllocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamRoomAllocation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoomAllocation'
          description: ''
    patch:
      operationId: api_v1_exams_api_room_allocations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room Allocation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamRoomAllocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamRoomAllocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamRoomAllocation'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRoomAllocation'
          description: ''
    delete:
      operationId: api_v1_exams_api_room_allocations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Room Allocation.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/staff-assignments/:
    get:
      operationId: api_v1_exams_api_staff_assignments_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: exam_room
        schema:
          type: string
          format: uuid
      - in: query
        name: exam_schedule
        schema:
          type: string
          format: uuid
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - in: query
        name: is_available
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: role
        schema:
          type: string
          enum:
          - CHIEF_INVIGILATOR
          - CLEANING
          - DEPUTY_CHIEF
          - INVIGILATOR
          - OBSERVER
          - SECURITY
          - TECHNICAL_SUPPORT
        description: |-
          * `INVIGILATOR` - Invigilator
          * `CHIEF_INVIGILATOR` - Chief Invigilator
          * `DEPUTY_CHIEF` - Deputy Chief Invigilator
          * `OBSERVER` - Observer
          * `TECHNICAL_SUPPORT` - Technical Support
          * `SECURITY` - Security Staff
          * `CLEANING` - Cleaning Staff
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExamStaffAssignmentList'
          description: ''
    post:
      operationId: api_v1_exams_api_staff_assignments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStaffAssignment'
          description: ''
  /api/v1/exams/api/staff-assignments/{id}/:
    get:
      operationId: api_v1_exams_api_staff_assignments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Staff Assignment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStaffAssignment'
          description: ''
    put:
      operationId: api_v1_exams_api_staff_assignments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Staff Assignment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStaffAssignment'
          description: ''
    patch:
      operationId: api_v1_exams_api_staff_assignments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Staff Assignment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamStaffAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamStaffAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamStaffAssignment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStaffAssignment'
          description: ''
    delete:
      operationId: api_v1_exams_api_staff_assignments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Staff Assignment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/staff-assignments/{id}/toggle_availability/:
    post:
      operationId: api_v1_exams_api_staff_assignments_toggle_availability_create
      description: Toggle staff availability for exam duty
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Exam Staff Assignment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamStaffAssignment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStaffAssignment'
          description: ''
  /api/v1/exams/api/student-dues/:
    get:
      operationId: api_v1_exams_api_student_dues_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: due_date
        schema:
          type: string
          format: date
      - in: query
        name: due_type
        schema:
          type: string
          enum:
          - EXAM
          - HOSTEL
          - LAB
          - LIBRARY
          - OTHER
          - TUITION
        description: |-
          * `TUITION` - Tuition Fee
          * `EXAM` - Examination Fee
          * `LIBRARY` - Library Fine
          * `LAB` - Laboratory Fee
          * `HOSTEL` - Hostel Fee
          * `OTHER` - Other Dues
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - OVERDUE
          - PAID
          - PARTIAL
          - PENDING
          - WAIVED
        description: |-
          * `PENDING` - Pending
          * `PAID` - Paid
          * `PARTIAL` - Partially Paid
          * `WAIVED` - Waived
          * `OVERDUE` - Overdue
      - in: query
        name: student
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentDueSummaryList'
          description: ''
    post:
      operationId: api_v1_exams_api_student_dues_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
  /api/v1/exams/api/student-dues/{id}/:
    get:
      operationId: api_v1_exams_api_student_dues_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Due.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
    put:
      operationId: api_v1_exams_api_student_dues_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Due.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
    patch:
      operationId: api_v1_exams_api_student_dues_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Due.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentDue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentDue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentDue'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
    delete:
      operationId: api_v1_exams_api_student_dues_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Due.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/exams/api/student-dues/{id}/update_payment/:
    post:
      operationId: api_v1_exams_api_student_dues_update_payment_create
      description: Update payment for a due
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Due.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
  /api/v1/exams/api/student-dues/overdue_dues/:
    get:
      operationId: api_v1_exams_api_student_dues_overdue_dues_retrieve
      description: Get all overdue dues
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
  /api/v1/exams/api/student-dues/student_dues/:
    get:
      operationId: api_v1_exams_api_student_dues_student_dues_retrieve
      description: Get dues for a specific student
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDue'
          description: ''
  /api/v1/faculty/api/custom-field-values/:
    get:
      operationId: api_v1_faculty_api_custom_field_values_list
      description: ViewSet for CustomFieldValue model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: custom_field
        schema:
          type: string
          format: uuid
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomFieldValueList'
          description: ''
    post:
      operationId: api_v1_faculty_api_custom_field_values_create
      description: ViewSet for CustomFieldValue model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldValueCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomFieldValueCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomFieldValueCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValueCreate'
          description: ''
  /api/v1/faculty/api/custom-field-values/{id}/:
    get:
      operationId: api_v1_faculty_api_custom_field_values_retrieve
      description: ViewSet for CustomFieldValue model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field value.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValue'
          description: ''
    put:
      operationId: api_v1_faculty_api_custom_field_values_update
      description: ViewSet for CustomFieldValue model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field value.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomFieldValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomFieldValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValue'
          description: ''
    patch:
      operationId: api_v1_faculty_api_custom_field_values_partial_update
      description: ViewSet for CustomFieldValue model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field value.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomFieldValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomFieldValue'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValue'
          description: ''
    delete:
      operationId: api_v1_faculty_api_custom_field_values_destroy
      description: ViewSet for CustomFieldValue model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field value.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/custom-field-values/by_faculty/:
    get:
      operationId: api_v1_faculty_api_custom_field_values_by_faculty_retrieve
      description: Get custom field values by faculty
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValue'
          description: ''
  /api/v1/faculty/api/custom-field-values/by_field/:
    get:
      operationId: api_v1_faculty_api_custom_field_values_by_field_retrieve
      description: Get custom field values by field
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValue'
          description: ''
  /api/v1/faculty/api/custom-fields/:
    get:
      operationId: api_v1_faculty_api_custom_fields_list
      description: ViewSet for CustomField model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: field_type
        schema:
          type: string
          enum:
          - BOOLEAN
          - CHAR
          - CHOICE
          - DATE
          - DATETIME
          - DECIMAL
          - EMAIL
          - INTEGER
          - PHONE
          - TEXT
          - URL
        description: |-
          * `CHAR` - Text
          * `TEXT` - Long Text
          * `INTEGER` - Number
          * `DECIMAL` - Decimal Number
          * `DATE` - Date
          * `DATETIME` - Date & Time
          * `BOOLEAN` - Yes/No
          * `EMAIL` - Email
          * `URL` - URL
          * `PHONE` - Phone Number
          * `CHOICE` - Choice Field
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: required
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomFieldList'
          description: ''
    post:
      operationId: api_v1_faculty_api_custom_fields_create
      description: ViewSet for CustomField model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomFieldCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomFieldCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldCreate'
          description: ''
  /api/v1/faculty/api/custom-fields/{id}/:
    get:
      operationId: api_v1_faculty_api_custom_fields_retrieve
      description: ViewSet for CustomField model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    put:
      operationId: api_v1_faculty_api_custom_fields_update
      description: ViewSet for CustomField model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomField'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    patch:
      operationId: api_v1_faculty_api_custom_fields_partial_update
      description: ViewSet for CustomField model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    delete:
      operationId: api_v1_faculty_api_custom_fields_destroy
      description: ViewSet for CustomField model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this custom field.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/custom-fields/active_fields/:
    get:
      operationId: api_v1_faculty_api_custom_fields_active_fields_retrieve
      description: Get all active custom fields
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
  /api/v1/faculty/api/custom-fields/by_type/:
    get:
      operationId: api_v1_faculty_api_custom_fields_by_type_retrieve
      description: Get custom fields by type
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
  /api/v1/faculty/api/documents/:
    get:
      operationId: api_v1_faculty_api_documents_list
      description: ViewSet for FacultyDocument model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: document_type
        schema:
          type: string
          enum:
          - AADHAR_CARD
          - ADDRESS_PROOF
          - DEGREE_CERTIFICATE
          - EXPERIENCE_CERTIFICATE
          - ID_PROOF
          - OTHER
          - PAN_CARD
          - PHOTO
          - RESUME
        description: |-
          * `RESUME` - Resume/CV
          * `DEGREE_CERTIFICATE` - Degree Certificate
          * `EXPERIENCE_CERTIFICATE` - Experience Certificate
          * `ID_PROOF` - ID Proof
          * `ADDRESS_PROOF` - Address Proof
          * `PHOTO` - Photograph
          * `PAN_CARD` - PAN Card
          * `AADHAR_CARD` - Aadhar Card
          * `OTHER` - Other
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - in: query
        name: is_verified
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: verified_by
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultyDocumentList'
          description: ''
    post:
      operationId: api_v1_faculty_api_documents_create
      description: ViewSet for FacultyDocument model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyDocumentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyDocumentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyDocumentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocumentCreate'
          description: ''
  /api/v1/faculty/api/documents/{id}/:
    get:
      operationId: api_v1_faculty_api_documents_retrieve
      description: ViewSet for FacultyDocument model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocument'
          description: ''
    put:
      operationId: api_v1_faculty_api_documents_update
      description: ViewSet for FacultyDocument model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocument'
          description: ''
    patch:
      operationId: api_v1_faculty_api_documents_partial_update
      description: ViewSet for FacultyDocument model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFacultyDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFacultyDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFacultyDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocument'
          description: ''
    delete:
      operationId: api_v1_faculty_api_documents_destroy
      description: ViewSet for FacultyDocument model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/documents/{id}/verify_document/:
    post:
      operationId: api_v1_faculty_api_documents_verify_document_create
      description: Verify a document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocument'
          description: ''
  /api/v1/faculty/api/documents/by_type/:
    get:
      operationId: api_v1_faculty_api_documents_by_type_retrieve
      description: Get documents by type
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocument'
          description: ''
  /api/v1/faculty/api/documents/unverified_documents/:
    get:
      operationId: api_v1_faculty_api_documents_unverified_documents_retrieve
      description: Get all unverified documents
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDocument'
          description: ''
  /api/v1/faculty/api/faculty/:
    get:
      operationId: api_v1_faculty_api_faculty_list
      description: ViewSet for Faculty model with comprehensive CRUD operations
      parameters:
      - in: query
        name: contractual_full_time_part_time
        schema:
          type: string
          nullable: true
          enum:
          - FULL_TIME
          - PART_TIME
        description: |-
          If contractual mention Full time or Part time

          * `FULL_TIME` - Full Time
          * `PART_TIME` - Part Time
      - in: query
        name: currently_associated
        schema:
          type: boolean
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          enum:
          - ADMINISTRATION
          - ARTS
          - BIOLOGY
          - CHEMISTRY
          - COMMERCE
          - COMPUTER_SCIENCE
          - ECONOMICS
          - ENGLISH
          - GEOGRAPHY
          - HISTORY
          - MATHEMATICS
          - MUSIC
          - OTHER
          - PHYSICAL_EDUCATION
          - PHYSICS
        description: |-
          * `COMPUTER_SCIENCE` - Computer Science
          * `MATHEMATICS` - Mathematics
          * `PHYSICS` - Physics
          * `CHEMISTRY` - Chemistry
          * `BIOLOGY` - Biology
          * `ENGLISH` - English
          * `HISTORY` - History
          * `GEOGRAPHY` - Geography
          * `ECONOMICS` - Economics
          * `COMMERCE` - Commerce
          * `PHYSICAL_EDUCATION` - Physical Education
          * `ARTS` - Arts
          * `MUSIC` - Music
          * `ADMINISTRATION` - Administration
          * `OTHER` - Other
      - in: query
        name: designation
        schema:
          type: string
          enum:
          - ASSISTANT_PROFESSOR
          - ASSOCIATE_PROFESSOR
          - DEAN
          - HEAD_OF_DEPARTMENT
          - INSTRUCTOR
          - LECTURER
          - PRINCIPAL
          - PROFESSOR
          - VICE_PRINCIPAL
        description: |-
          * `PROFESSOR` - Professor
          * `ASSOCIATE_PROFESSOR` - Associate Professor
          * `ASSISTANT_PROFESSOR` - Assistant Professor
          * `LECTURER` - Lecturer
          * `INSTRUCTOR` - Instructor
          * `HEAD_OF_DEPARTMENT` - Head of Department
          * `DEAN` - Dean
          * `PRINCIPAL` - Principal
          * `VICE_PRINCIPAL` - Vice Principal
      - in: query
        name: employment_type
        schema:
          type: string
          enum:
          - ADJUNCT
          - CONTRACT
          - FULL_TIME
          - PART_TIME
          - VISITING
        description: |-
          * `FULL_TIME` - Full Time
          * `PART_TIME` - Part Time
          * `CONTRACT` - Contract
          * `VISITING` - Visiting
          * `ADJUNCT` - Adjunct
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - F
          - M
          - O
        description: |-
          * `M` - Male
          * `F` - Female
          * `O` - Other
      - in: query
        name: is_head_of_department
        schema:
          type: boolean
      - in: query
        name: is_mentor
        schema:
          type: boolean
      - in: query
        name: nature_of_association
        schema:
          type: string
          enum:
          - AD_HOC
          - CONTRACT
          - REGULAR
        description: |-
          Nature of Association

          * `REGULAR` - Regular
          * `CONTRACT` - Contract
          * `AD_HOC` - Ad hoc
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
          - ON_LEAVE
          - RETIRED
          - TERMINATED
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `ON_LEAVE` - On Leave
          * `RETIRED` - Retired
          * `TERMINATED` - Terminated
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultyListList'
          description: ''
    post:
      operationId: api_v1_faculty_api_faculty_create
      description: ViewSet for Faculty model with comprehensive CRUD operations
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyCreate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyCreate'
          description: ''
  /api/v1/faculty/api/faculty/{id}/:
    get:
      operationId: api_v1_faculty_api_faculty_retrieve
      description: ViewSet for Faculty model with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyDetail'
          description: ''
    put:
      operationId: api_v1_faculty_api_faculty_update
      description: ViewSet for Faculty model with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyUpdate'
          description: ''
    patch:
      operationId: api_v1_faculty_api_faculty_partial_update
      description: ViewSet for Faculty model with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFacultyUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFacultyUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFacultyUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyUpdate'
          description: ''
    delete:
      operationId: api_v1_faculty_api_faculty_destroy
      description: ViewSet for Faculty model with comprehensive CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/faculty/{id}/custom_fields/:
    get:
      operationId: api_v1_faculty_api_faculty_custom_fields_retrieve
      description: Get faculty custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/{id}/leaves/:
    get:
      operationId: api_v1_faculty_api_faculty_leaves_retrieve
      description: Get faculty leave history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/{id}/performance/:
    get:
      operationId: api_v1_faculty_api_faculty_performance_retrieve
      description: Get faculty performance history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/{id}/reset_password/:
    post:
      operationId: api_v1_faculty_api_faculty_reset_password_create
      description: Reset faculty password to default
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Faculty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Faculty'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/{id}/schedule/:
    get:
      operationId: api_v1_faculty_api_faculty_schedule_retrieve
      description: Get faculty schedule
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/{id}/subjects/:
    get:
      operationId: api_v1_faculty_api_faculty_subjects_retrieve
      description: Get faculty subjects
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/active_faculty/:
    get:
      operationId: api_v1_faculty_api_faculty_active_faculty_retrieve
      description: Get all active faculty members
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/department_heads/:
    get:
      operationId: api_v1_faculty_api_faculty_department_heads_retrieve
      description: Get all department heads
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/mentors/:
    get:
      operationId: api_v1_faculty_api_faculty_mentors_retrieve
      description: Get all faculty mentors
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/faculty/statistics/:
    get:
      operationId: api_v1_faculty_api_faculty_statistics_retrieve
      description: Get faculty statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/v1/faculty/api/leaves/:
    get:
      operationId: api_v1_faculty_api_leaves_list
      description: ViewSet for FacultyLeave model
      parameters:
      - in: query
        name: approved_by
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - in: query
        name: leave_type
        schema:
          type: string
          enum:
          - ANNUAL
          - CASUAL
          - MATERNITY
          - OTHER
          - PATERNITY
          - SICK
          - STUDY
        description: |-
          * `CASUAL` - Casual Leave
          * `SICK` - Sick Leave
          * `ANNUAL` - Annual Leave
          * `MATERNITY` - Maternity Leave
          * `PATERNITY` - Paternity Leave
          * `STUDY` - Study Leave
          * `OTHER` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - APPROVED
          - CANCELLED
          - PENDING
          - REJECTED
        description: |-
          * `PENDING` - Pending
          * `APPROVED` - Approved
          * `REJECTED` - Rejected
          * `CANCELLED` - Cancelled
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultyLeaveList'
          description: ''
    post:
      operationId: api_v1_faculty_api_leaves_create
      description: ViewSet for FacultyLeave model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyLeaveCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyLeaveCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyLeaveCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeaveCreate'
          description: ''
  /api/v1/faculty/api/leaves/{id}/:
    get:
      operationId: api_v1_faculty_api_leaves_retrieve
      description: ViewSet for FacultyLeave model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty leave.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
    put:
      operationId: api_v1_faculty_api_leaves_update
      description: ViewSet for FacultyLeave model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty leave.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
    patch:
      operationId: api_v1_faculty_api_leaves_partial_update
      description: ViewSet for FacultyLeave model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty leave.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFacultyLeave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFacultyLeave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFacultyLeave'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
    delete:
      operationId: api_v1_faculty_api_leaves_destroy
      description: ViewSet for FacultyLeave model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty leave.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/leaves/{id}/approve_leave/:
    post:
      operationId: api_v1_faculty_api_leaves_approve_leave_create
      description: Approve a leave request
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty leave.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
  /api/v1/faculty/api/leaves/{id}/reject_leave/:
    post:
      operationId: api_v1_faculty_api_leaves_reject_leave_create
      description: Reject a leave request
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty leave.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyLeave'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
  /api/v1/faculty/api/leaves/approved_leaves/:
    get:
      operationId: api_v1_faculty_api_leaves_approved_leaves_retrieve
      description: Get all approved leaves
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
  /api/v1/faculty/api/leaves/current_leaves/:
    get:
      operationId: api_v1_faculty_api_leaves_current_leaves_retrieve
      description: Get currently active leaves
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
  /api/v1/faculty/api/leaves/pending_approvals/:
    get:
      operationId: api_v1_faculty_api_leaves_pending_approvals_retrieve
      description: Get all pending leave approvals
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyLeave'
          description: ''
  /api/v1/faculty/api/performance/:
    get:
      operationId: api_v1_faculty_api_performance_list
      description: ViewSet for FacultyPerformance model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: evaluated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: evaluation_period
        schema:
          type: string
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultyPerformanceList'
          description: ''
    post:
      operationId: api_v1_faculty_api_performance_create
      description: ViewSet for FacultyPerformance model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyPerformanceCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyPerformanceCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyPerformanceCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformanceCreate'
          description: ''
  /api/v1/faculty/api/performance/{id}/:
    get:
      operationId: api_v1_faculty_api_performance_retrieve
      description: ViewSet for FacultyPerformance model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty performance.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformance'
          description: ''
    put:
      operationId: api_v1_faculty_api_performance_update
      description: ViewSet for FacultyPerformance model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty performance.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyPerformance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyPerformance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyPerformance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformance'
          description: ''
    patch:
      operationId: api_v1_faculty_api_performance_partial_update
      description: ViewSet for FacultyPerformance model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty performance.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFacultyPerformance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFacultyPerformance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFacultyPerformance'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformance'
          description: ''
    delete:
      operationId: api_v1_faculty_api_performance_destroy
      description: ViewSet for FacultyPerformance model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty performance.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/performance/{id}/performance_history/:
    get:
      operationId: api_v1_faculty_api_performance_performance_history_retrieve
      description: Get performance history for a specific faculty member
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty performance.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformance'
          description: ''
  /api/v1/faculty/api/performance/performance_summary/:
    get:
      operationId: api_v1_faculty_api_performance_performance_summary_retrieve
      description: Get performance summary statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformance'
          description: ''
  /api/v1/faculty/api/performance/top_performers/:
    get:
      operationId: api_v1_faculty_api_performance_top_performers_retrieve
      description: Get top performing faculty members
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyPerformance'
          description: ''
  /api/v1/faculty/api/schedules/:
    get:
      operationId: api_v1_faculty_api_schedules_list
      description: ViewSet for FacultySchedule model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: day_of_week
        schema:
          type: string
          enum:
          - FRIDAY
          - MONDAY
          - SATURDAY
          - SUNDAY
          - THURSDAY
          - TUESDAY
          - WEDNESDAY
        description: |-
          * `MONDAY` - Monday
          * `TUESDAY` - Tuesday
          * `WEDNESDAY` - Wednesday
          * `THURSDAY` - Thursday
          * `FRIDAY` - Friday
          * `SATURDAY` - Saturday
          * `SUNDAY` - Sunday
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - in: query
        name: grade_level
        schema:
          type: string
      - in: query
        name: is_online
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultyScheduleList'
          description: ''
    post:
      operationId: api_v1_faculty_api_schedules_create
      description: ViewSet for FacultySchedule model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyScheduleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultyScheduleCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultyScheduleCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyScheduleCreate'
          description: ''
  /api/v1/faculty/api/schedules/{id}/:
    get:
      operationId: api_v1_faculty_api_schedules_retrieve
      description: ViewSet for FacultySchedule model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySchedule'
          description: ''
    put:
      operationId: api_v1_faculty_api_schedules_update
      description: ViewSet for FacultySchedule model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultySchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultySchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultySchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySchedule'
          description: ''
    patch:
      operationId: api_v1_faculty_api_schedules_partial_update
      description: ViewSet for FacultySchedule model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFacultySchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFacultySchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFacultySchedule'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySchedule'
          description: ''
    delete:
      operationId: api_v1_faculty_api_schedules_destroy
      description: ViewSet for FacultySchedule model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/schedules/faculty_schedule/:
    get:
      operationId: api_v1_faculty_api_schedules_faculty_schedule_retrieve
      description: Get schedule for a specific faculty member
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySchedule'
          description: ''
  /api/v1/faculty/api/schedules/room_schedule/:
    get:
      operationId: api_v1_faculty_api_schedules_room_schedule_retrieve
      description: Get schedule for a specific room
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySchedule'
          description: ''
  /api/v1/faculty/api/schedules/today_schedule/:
    get:
      operationId: api_v1_faculty_api_schedules_today_schedule_retrieve
      description: Get today's schedule for all faculty
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySchedule'
          description: ''
  /api/v1/faculty/api/subjects/:
    get:
      operationId: api_v1_faculty_api_subjects_list
      description: ViewSet for FacultySubject model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - in: query
        name: grade_level
        schema:
          type: string
      - in: query
        name: is_primary_subject
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultySubjectList'
          description: ''
    post:
      operationId: api_v1_faculty_api_subjects_create
      description: ViewSet for FacultySubject model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultySubjectCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultySubjectCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultySubjectCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySubjectCreate'
          description: ''
  /api/v1/faculty/api/subjects/{id}/:
    get:
      operationId: api_v1_faculty_api_subjects_retrieve
      description: ViewSet for FacultySubject model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty subject.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySubject'
          description: ''
    put:
      operationId: api_v1_faculty_api_subjects_update
      description: ViewSet for FacultySubject model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty subject.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultySubject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacultySubject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacultySubject'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySubject'
          description: ''
    patch:
      operationId: api_v1_faculty_api_subjects_partial_update
      description: ViewSet for FacultySubject model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty subject.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFacultySubject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFacultySubject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFacultySubject'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySubject'
          description: ''
    delete:
      operationId: api_v1_faculty_api_subjects_destroy
      description: ViewSet for FacultySubject model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this faculty subject.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/faculty/api/subjects/by_grade/:
    get:
      operationId: api_v1_faculty_api_subjects_by_grade_retrieve
      description: Get all subjects for a specific grade level
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySubject'
          description: ''
  /api/v1/faculty/api/subjects/by_subject/:
    get:
      operationId: api_v1_faculty_api_subjects_by_subject_retrieve
      description: Get all faculty teaching a specific subject
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultySubject'
          description: ''
  /api/v1/feedback/attachments/:
    get:
      operationId: api_v1_feedback_attachments_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: feedback
        schema:
          type: integer
      - in: query
        name: uploaded_by
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackAttachmentList'
          description: ''
    post:
      operationId: api_v1_feedback_attachments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackAttachment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackAttachment'
          description: ''
  /api/v1/feedback/attachments/{id}/:
    get:
      operationId: api_v1_feedback_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback attachment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackAttachment'
          description: ''
    put:
      operationId: api_v1_feedback_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback attachment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackAttachment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackAttachment'
          description: ''
    patch:
      operationId: api_v1_feedback_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback attachment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackAttachment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackAttachment'
          description: ''
    delete:
      operationId: api_v1_feedback_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback attachment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/feedback/categories/:
    get:
      operationId: api_v1_feedback_categories_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackCategoryList'
          description: ''
    post:
      operationId: api_v1_feedback_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackCategory'
          description: ''
  /api/v1/feedback/categories/{id}/:
    get:
      operationId: api_v1_feedback_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackCategory'
          description: ''
    put:
      operationId: api_v1_feedback_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackCategory'
          description: ''
    patch:
      operationId: api_v1_feedback_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackCategory'
          description: ''
    delete:
      operationId: api_v1_feedback_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/feedback/comments/:
    get:
      operationId: api_v1_feedback_comments_list
      parameters:
      - in: query
        name: commented_by
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: feedback
        schema:
          type: integer
      - in: query
        name: is_internal
        schema:
          type: boolean
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackCommentList'
          description: ''
    post:
      operationId: api_v1_feedback_comments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackComment'
          description: ''
  /api/v1/feedback/comments/{id}/:
    get:
      operationId: api_v1_feedback_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback comment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackComment'
          description: ''
    put:
      operationId: api_v1_feedback_comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback comment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackComment'
          description: ''
    patch:
      operationId: api_v1_feedback_comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback comment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackComment'
          description: ''
    delete:
      operationId: api_v1_feedback_comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback comment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/feedback/items/:
    get:
      operationId: api_v1_feedback_items_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: course
        schema:
          type: integer
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: faculty
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: priority
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: section
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - closed
          - in_review
          - open
          - resolved
        description: |-
          * `open` - Open
          * `in_review` - In Review
          * `resolved` - Resolved
          * `closed` - Closed
      - in: query
        name: syllabus
        schema:
          type: integer
      - in: query
        name: target_id
        schema:
          type: string
      - in: query
        name: target_type
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackList'
          description: ''
    post:
      operationId: api_v1_feedback_items_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
  /api/v1/feedback/items/{id}/:
    get:
      operationId: api_v1_feedback_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    put:
      operationId: api_v1_feedback_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    patch:
      operationId: api_v1_feedback_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    delete:
      operationId: api_v1_feedback_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/feedback/tags/:
    get:
      operationId: api_v1_feedback_tags_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackTagList'
          description: ''
    post:
      operationId: api_v1_feedback_tags_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackTag'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackTag'
          description: ''
  /api/v1/feedback/tags/{id}/:
    get:
      operationId: api_v1_feedback_tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback tag.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackTag'
          description: ''
    put:
      operationId: api_v1_feedback_tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackTag'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackTag'
          description: ''
    patch:
      operationId: api_v1_feedback_tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackTag'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackTag'
          description: ''
    delete:
      operationId: api_v1_feedback_tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback tag.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/feedback/votes/:
    get:
      operationId: api_v1_feedback_votes_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: feedback
        schema:
          type: integer
      - in: query
        name: is_upvote
        schema:
          type: boolean
      - in: query
        name: voted_by
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackVoteList'
          description: ''
    post:
      operationId: api_v1_feedback_votes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackVote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackVote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackVote'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackVote'
          description: ''
  /api/v1/feedback/votes/{id}/:
    get:
      operationId: api_v1_feedback_votes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback vote.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackVote'
          description: ''
    put:
      operationId: api_v1_feedback_votes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback vote.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackVote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackVote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackVote'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackVote'
          description: ''
    patch:
      operationId: api_v1_feedback_votes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback vote.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackVote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackVote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedbackVote'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackVote'
          description: ''
    delete:
      operationId: api_v1_feedback_votes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feedback vote.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/categories/:
    get:
      operationId: api_v1_fees_api_categories_list
      description: ViewSet for FeeCategory model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeCategoryList'
          description: ''
    post:
      operationId: api_v1_fees_api_categories_create
      description: ViewSet for FeeCategory model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeCategory'
          description: ''
  /api/v1/fees/api/categories/{id}/:
    get:
      operationId: api_v1_fees_api_categories_retrieve
      description: ViewSet for FeeCategory model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeCategory'
          description: ''
    put:
      operationId: api_v1_fees_api_categories_update
      description: ViewSet for FeeCategory model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeCategory'
          description: ''
    patch:
      operationId: api_v1_fees_api_categories_partial_update
      description: ViewSet for FeeCategory model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeCategory'
          description: ''
    delete:
      operationId: api_v1_fees_api_categories_destroy
      description: ViewSet for FeeCategory model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/categories/active/:
    get:
      operationId: api_v1_fees_api_categories_active_retrieve
      description: Get only active fee categories
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeCategory'
          description: ''
  /api/v1/fees/api/discounts/:
    get:
      operationId: api_v1_fees_api_discounts_list
      description: ViewSet for FeeDiscount model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: discount_type
        schema:
          type: string
          enum:
          - BULK_PAYMENT
          - EARLY_PAYMENT
          - LOYALTY
          - OTHER
          - SIBLING
          - STAFF_CHILD
        description: |-
          * `EARLY_PAYMENT` - Early Payment
          * `SIBLING` - Sibling Discount
          * `STAFF_CHILD` - Staff Child
          * `BULK_PAYMENT` - Bulk Payment
          * `LOYALTY` - Loyalty Discount
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeDiscountList'
          description: ''
    post:
      operationId: api_v1_fees_api_discounts_create
      description: ViewSet for FeeDiscount model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeDiscount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeDiscount'
          description: ''
  /api/v1/fees/api/discounts/{id}/:
    get:
      operationId: api_v1_fees_api_discounts_retrieve
      description: ViewSet for FeeDiscount model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee discount.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeDiscount'
          description: ''
    put:
      operationId: api_v1_fees_api_discounts_update
      description: ViewSet for FeeDiscount model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee discount.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeDiscount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeDiscount'
          description: ''
    patch:
      operationId: api_v1_fees_api_discounts_partial_update
      description: ViewSet for FeeDiscount model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee discount.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeDiscount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeDiscount'
          description: ''
    delete:
      operationId: api_v1_fees_api_discounts_destroy
      description: ViewSet for FeeDiscount model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee discount.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/discounts/active/:
    get:
      operationId: api_v1_fees_api_discounts_active_retrieve
      description: Get only active discounts
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeDiscount'
          description: ''
  /api/v1/fees/api/discounts/valid/:
    get:
      operationId: api_v1_fees_api_discounts_valid_retrieve
      description: Get valid discounts (not expired)
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeDiscount'
          description: ''
  /api/v1/fees/api/payments/:
    get:
      operationId: api_v1_fees_api_payments_list
      description: ViewSet for Payment model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: payment_method
        schema:
          type: string
          enum:
          - BANK_TRANSFER
          - CARD
          - CASH
          - CHEQUE
          - ONLINE
          - OTHER
          - UPI
        description: |-
          * `CASH` - Cash
          * `CHEQUE` - Cheque
          * `BANK_TRANSFER` - Bank Transfer
          * `ONLINE` - Online Payment
          * `CARD` - Credit/Debit Card
          * `UPI` - UPI
          * `OTHER` - Other
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - COMPLETED
          - FAILED
          - PENDING
          - REFUNDED
        description: |-
          * `PENDING` - Pending
          * `COMPLETED` - Completed
          * `FAILED` - Failed
          * `CANCELLED` - Cancelled
          * `REFUNDED` - Refunded
      - in: query
        name: student_fee__academic_year
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: api_v1_fees_api_payments_create
      description: ViewSet for Payment model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/fees/api/payments/{id}/:
    get:
      operationId: api_v1_fees_api_payments_retrieve
      description: ViewSet for Payment model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNested'
          description: ''
    put:
      operationId: api_v1_fees_api_payments_update
      description: ViewSet for Payment model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: api_v1_fees_api_payments_partial_update
      description: ViewSet for Payment model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: api_v1_fees_api_payments_destroy
      description: ViewSet for Payment model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/payments/{id}/mark_completed/:
    post:
      operationId: api_v1_fees_api_payments_mark_completed_create
      description: Mark payment as completed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/fees/api/payments/by_date_range/:
    get:
      operationId: api_v1_fees_api_payments_by_date_range_retrieve
      description: Get payments within a date range
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/fees/api/payments/by_method/:
    get:
      operationId: api_v1_fees_api_payments_by_method_retrieve
      description: Get payments by payment method
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/v1/fees/api/receipts/:
    get:
      operationId: api_v1_fees_api_receipts_list
      description: ViewSet for FeeReceipt model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: generated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: is_printed
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeReceiptList'
          description: ''
    post:
      operationId: api_v1_fees_api_receipts_create
      description: ViewSet for FeeReceipt model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
  /api/v1/fees/api/receipts/{id}/:
    get:
      operationId: api_v1_fees_api_receipts_retrieve
      description: ViewSet for FeeReceipt model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee receipt.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
    put:
      operationId: api_v1_fees_api_receipts_update
      description: ViewSet for FeeReceipt model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee receipt.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
    patch:
      operationId: api_v1_fees_api_receipts_partial_update
      description: ViewSet for FeeReceipt model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee receipt.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeReceipt'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
    delete:
      operationId: api_v1_fees_api_receipts_destroy
      description: ViewSet for FeeReceipt model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee receipt.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/receipts/{id}/download/:
    get:
      operationId: api_v1_fees_api_receipts_download_retrieve
      description: Download receipt (placeholder for PDF generation)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee receipt.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
  /api/v1/fees/api/receipts/{id}/mark_printed/:
    post:
      operationId: api_v1_fees_api_receipts_mark_printed_create
      description: Mark receipt as printed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee receipt.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeReceipt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
  /api/v1/fees/api/receipts/unprinted/:
    get:
      operationId: api_v1_fees_api_receipts_unprinted_retrieve
      description: Get unprinted receipts
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeReceipt'
          description: ''
  /api/v1/fees/api/structure-details/:
    get:
      operationId: api_v1_fees_api_structure_details_list
      description: ViewSet for FeeStructureDetail model
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: fee_category
        schema:
          type: string
          format: uuid
      - in: query
        name: fee_structure
        schema:
          type: string
          format: uuid
      - in: query
        name: frequency
        schema:
          type: string
          enum:
          - ANNUAL
          - MONTHLY
          - ONE_TIME
          - QUARTERLY
          - SEMESTER
        description: |-
          * `MONTHLY` - Monthly
          * `QUARTERLY` - Quarterly
          * `SEMESTER` - Semester
          * `ANNUAL` - Annual
          * `ONE_TIME` - One Time
      - in: query
        name: is_optional
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeStructureDetailList'
          description: ''
    post:
      operationId: api_v1_fees_api_structure_details_create
      description: ViewSet for FeeStructureDetail model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeStructureDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeStructureDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeStructureDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructureDetail'
          description: ''
  /api/v1/fees/api/structure-details/{id}/:
    get:
      operationId: api_v1_fees_api_structure_details_retrieve
      description: ViewSet for FeeStructureDetail model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure detail.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructureDetailNested'
          description: ''
    put:
      operationId: api_v1_fees_api_structure_details_update
      description: ViewSet for FeeStructureDetail model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure detail.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeStructureDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeStructureDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeStructureDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructureDetail'
          description: ''
    patch:
      operationId: api_v1_fees_api_structure_details_partial_update
      description: ViewSet for FeeStructureDetail model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure detail.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeStructureDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeStructureDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeStructureDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructureDetail'
          description: ''
    delete:
      operationId: api_v1_fees_api_structure_details_destroy
      description: ViewSet for FeeStructureDetail model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure detail.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/structures/:
    get:
      operationId: api_v1_fees_api_structures_list
      description: ViewSet for FeeStructure model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
          enum:
          - 2023-2024
          - 2024-2025
          - 2025-2026
          - 2026-2027
        description: |-
          * `2023-2024` - 2023-2024
          * `2024-2025` - 2024-2025
          * `2025-2026` - 2025-2026
          * `2026-2027` - 2026-2027
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: grade_level
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '11'
          - '12'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          * `1` - Grade 1
          * `2` - Grade 2
          * `3` - Grade 3
          * `4` - Grade 4
          * `5` - Grade 5
          * `6` - Grade 6
          * `7` - Grade 7
          * `8` - Grade 8
          * `9` - Grade 9
          * `10` - Grade 10
          * `11` - Grade 11
          * `12` - Grade 12
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeStructureList'
          description: ''
    post:
      operationId: api_v1_fees_api_structures_create
      description: ViewSet for FeeStructure model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeStructure'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
  /api/v1/fees/api/structures/{id}/:
    get:
      operationId: api_v1_fees_api_structures_retrieve
      description: ViewSet for FeeStructure model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
    put:
      operationId: api_v1_fees_api_structures_update
      description: ViewSet for FeeStructure model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeStructure'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
    patch:
      operationId: api_v1_fees_api_structures_partial_update
      description: ViewSet for FeeStructure model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeStructure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeStructure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeStructure'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
    delete:
      operationId: api_v1_fees_api_structures_destroy
      description: ViewSet for FeeStructure model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/structures/{id}/details/:
    get:
      operationId: api_v1_fees_api_structures_details_retrieve
      description: Get fee structure with all its details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee structure.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
  /api/v1/fees/api/structures/active/:
    get:
      operationId: api_v1_fees_api_structures_active_retrieve
      description: Get only active fee structures
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
  /api/v1/fees/api/structures/by_academic_year/:
    get:
      operationId: api_v1_fees_api_structures_by_academic_year_retrieve
      description: Get fee structures grouped by academic year
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
          description: ''
  /api/v1/fees/api/student-fees/:
    get:
      operationId: api_v1_fees_api_student_fees_list
      description: ViewSet for StudentFee model
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: fee_structure_detail__fee_structure__grade_level
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '11'
          - '12'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          * `1` - Grade 1
          * `2` - Grade 2
          * `3` - Grade 3
          * `4` - Grade 4
          * `5` - Grade 5
          * `6` - Grade 6
          * `7` - Grade 7
          * `8` - Grade 8
          * `9` - Grade 9
          * `10` - Grade 10
          * `11` - Grade 11
          * `12` - Grade 12
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELLED
          - OVERDUE
          - PAID
          - PARTIAL
          - PENDING
          - WAIVED
        description: |-
          * `PENDING` - Pending
          * `PAID` - Paid
          * `PARTIAL` - Partially Paid
          * `OVERDUE` - Overdue
          * `WAIVED` - Waived
          * `CANCELLED` - Cancelled
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentFeeList'
          description: ''
    post:
      operationId: api_v1_fees_api_student_fees_create
      description: ViewSet for StudentFee model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentFee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
  /api/v1/fees/api/student-fees/{id}/:
    get:
      operationId: api_v1_fees_api_student_fees_retrieve
      description: ViewSet for StudentFee model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this student fee.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFeeNested'
          description: ''
    put:
      operationId: api_v1_fees_api_student_fees_update
      description: ViewSet for StudentFee model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this student fee.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentFee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
    patch:
      operationId: api_v1_fees_api_student_fees_partial_update
      description: ViewSet for StudentFee model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this student fee.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentFee'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
    delete:
      operationId: api_v1_fees_api_student_fees_destroy
      description: ViewSet for StudentFee model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this student fee.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/student-fees/by_student/:
    get:
      operationId: api_v1_fees_api_student_fees_by_student_retrieve
      description: Get fees for a specific student
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
  /api/v1/fees/api/student-fees/overdue/:
    get:
      operationId: api_v1_fees_api_student_fees_overdue_retrieve
      description: Get overdue fees
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
  /api/v1/fees/api/student-fees/student_summary/:
    get:
      operationId: api_v1_fees_api_student_fees_student_summary_retrieve
      description: Get fee summary for all students
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
  /api/v1/fees/api/student-fees/summary/:
    get:
      operationId: api_v1_fees_api_student_fees_summary_retrieve
      description: Get fee summary statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFee'
          description: ''
  /api/v1/fees/api/waivers/:
    get:
      operationId: api_v1_fees_api_waivers_list
      description: ViewSet for FeeWaiver model
      parameters:
      - in: query
        name: approved_by
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: waiver_type
        schema:
          type: string
          enum:
          - DISABILITY
          - FINANCIAL_AID
          - MERIT
          - OTHER
          - SCHOLARSHIP
          - SPORTS
        description: |-
          * `SCHOLARSHIP` - Scholarship
          * `FINANCIAL_AID` - Financial Aid
          * `MERIT` - Merit Based
          * `SPORTS` - Sports Quota
          * `DISABILITY` - Disability
          * `OTHER` - Other
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeWaiverList'
          description: ''
    post:
      operationId: api_v1_fees_api_waivers_create
      description: ViewSet for FeeWaiver model
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWaiver'
          description: ''
  /api/v1/fees/api/waivers/{id}/:
    get:
      operationId: api_v1_fees_api_waivers_retrieve
      description: ViewSet for FeeWaiver model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee waiver.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWaiver'
          description: ''
    put:
      operationId: api_v1_fees_api_waivers_update
      description: ViewSet for FeeWaiver model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee waiver.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWaiver'
          description: ''
    patch:
      operationId: api_v1_fees_api_waivers_partial_update
      description: ViewSet for FeeWaiver model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee waiver.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeeWaiver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeeWaiver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeeWaiver'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWaiver'
          description: ''
    delete:
      operationId: api_v1_fees_api_waivers_destroy
      description: ViewSet for FeeWaiver model
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee waiver.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/fees/api/waivers/{id}/approve/:
    post:
      operationId: api_v1_fees_api_waivers_approve_create
      description: Approve a waiver
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this fee waiver.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeeWaiver'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWaiver'
          description: ''
  /api/v1/fees/api/waivers/active/:
    get:
      operationId: api_v1_fees_api_waivers_active_retrieve
      description: Get only active waivers
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWaiver'
          description: ''
  /api/v1/grads/cumulative-gpas/:
    get:
      operationId: api_v1_grads_cumulative_gpas_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCumulativeGPAList'
          description: ''
  /api/v1/grads/cumulative-gpas/{id}/:
    get:
      operationId: api_v1_grads_cumulative_gpas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cumulative GPA (CGPA).
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CumulativeGPA'
          description: ''
  /api/v1/grads/cumulative-gpas/academic_transcript/:
    get:
      operationId: api_v1_grads_cumulative_gpas_academic_transcript_retrieve
      description: Generate comprehensive academic transcript for a student.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CumulativeGPA'
          description: ''
  /api/v1/grads/cumulative-gpas/by_student/:
    get:
      operationId: api_v1_grads_cumulative_gpas_by_student_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CumulativeGPA'
          description: ''
  /api/v1/grads/grade-scales/:
    get:
      operationId: api_v1_grads_grade_scales_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeScaleList'
          description: ''
    post:
      operationId: api_v1_grads_grade_scales_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeScale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeScale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeScale'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeScale'
          description: ''
  /api/v1/grads/grade-scales/{id}/:
    get:
      operationId: api_v1_grads_grade_scales_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade scale.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeScale'
          description: ''
    put:
      operationId: api_v1_grads_grade_scales_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade scale.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeScale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeScale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeScale'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeScale'
          description: ''
    patch:
      operationId: api_v1_grads_grade_scales_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade scale.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeScale'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeScale'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeScale'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeScale'
          description: ''
    delete:
      operationId: api_v1_grads_grade_scales_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grade scale.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/grads/midterm-grades/:
    get:
      operationId: api_v1_grads_midterm_grades_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMidTermGradeList'
          description: ''
    post:
      operationId: api_v1_grads_midterm_grades_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidTermGrade'
          description: ''
  /api/v1/grads/midterm-grades/{id}/:
    get:
      operationId: api_v1_grads_midterm_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mid term grade.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidTermGrade'
          description: ''
    put:
      operationId: api_v1_grads_midterm_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mid term grade.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidTermGrade'
          description: ''
    patch:
      operationId: api_v1_grads_midterm_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mid term grade.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMidTermGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMidTermGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMidTermGrade'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidTermGrade'
          description: ''
    delete:
      operationId: api_v1_grads_midterm_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mid term grade.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/grads/midterm-grades/bulk_upsert/:
    post:
      operationId: api_v1_grads_midterm_grades_bulk_upsert_create
      description: Bulk create or update mid-term grades.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MidTermGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidTermGrade'
          description: ''
  /api/v1/grads/midterm-grades/by_student/:
    get:
      operationId: api_v1_grads_midterm_grades_by_student_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MidTermGrade'
          description: ''
  /api/v1/grads/semester-gpas/:
    get:
      operationId: api_v1_grads_semester_gpas_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSemesterGPAList'
          description: ''
  /api/v1/grads/semester-gpas/{id}/:
    get:
      operationId: api_v1_grads_semester_gpas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Semester GPA (SGPA).
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGPA'
          description: ''
  /api/v1/grads/semester-gpas/by_student/:
    get:
      operationId: api_v1_grads_semester_gpas_by_student_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGPA'
          description: ''
  /api/v1/grads/semester-grades/:
    get:
      operationId: api_v1_grads_semester_grades_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSemesterGradeList'
          description: ''
    post:
      operationId: api_v1_grads_semester_grades_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGrade'
          description: ''
  /api/v1/grads/semester-grades/{id}/:
    get:
      operationId: api_v1_grads_semester_grades_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester grade.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGrade'
          description: ''
    put:
      operationId: api_v1_grads_semester_grades_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester grade.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGrade'
          description: ''
    patch:
      operationId: api_v1_grads_semester_grades_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester grade.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSemesterGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSemesterGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSemesterGrade'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGrade'
          description: ''
    delete:
      operationId: api_v1_grads_semester_grades_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester grade.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/grads/semester-grades/bulk_upsert/:
    post:
      operationId: api_v1_grads_semester_grades_bulk_upsert_create
      description: Bulk create or update semester grades.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemesterGrade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGrade'
          description: ''
  /api/v1/grads/semester-grades/by_student/:
    get:
      operationId: api_v1_grads_semester_grades_by_student_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemesterGrade'
          description: ''
  /api/v1/mentoring/action-items/:
    get:
      operationId: api_v1_mentoring_action_items_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionItemList'
          description: ''
    post:
      operationId: api_v1_mentoring_action_items_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionItem'
          description: ''
  /api/v1/mentoring/action-items/{id}/:
    get:
      operationId: api_v1_mentoring_action_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionItem'
          description: ''
    put:
      operationId: api_v1_mentoring_action_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionItem'
          description: ''
    patch:
      operationId: api_v1_mentoring_action_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionItem'
          description: ''
    delete:
      operationId: api_v1_mentoring_action_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this action item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mentoring/feedback/:
    get:
      operationId: api_v1_mentoring_feedback_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackList'
          description: ''
    post:
      operationId: api_v1_mentoring_feedback_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
  /api/v1/mentoring/feedback/{id}/:
    get:
      operationId: api_v1_mentoring_feedback_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feedback.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    put:
      operationId: api_v1_mentoring_feedback_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feedback.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    patch:
      operationId: api_v1_mentoring_feedback_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feedback.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    delete:
      operationId: api_v1_mentoring_feedback_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feedback.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mentoring/meetings/:
    get:
      operationId: api_v1_mentoring_meetings_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeetingList'
          description: ''
    post:
      operationId: api_v1_mentoring_meetings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
  /api/v1/mentoring/meetings/{id}/:
    get:
      operationId: api_v1_mentoring_meetings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this meeting.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
    put:
      operationId: api_v1_mentoring_meetings_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this meeting.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
    patch:
      operationId: api_v1_mentoring_meetings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this meeting.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeeting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeeting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeeting'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
          description: ''
    delete:
      operationId: api_v1_mentoring_meetings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this meeting.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mentoring/mentorships/:
    get:
      operationId: api_v1_mentoring_mentorships_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMentorshipList'
          description: ''
    post:
      operationId: api_v1_mentoring_mentorships_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mentorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mentorship'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
  /api/v1/mentoring/mentorships/{id}/:
    get:
      operationId: api_v1_mentoring_mentorships_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this mentorship.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
    put:
      operationId: api_v1_mentoring_mentorships_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this mentorship.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mentorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mentorship'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
    patch:
      operationId: api_v1_mentoring_mentorships_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this mentorship.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMentorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMentorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMentorship'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
    delete:
      operationId: api_v1_mentoring_mentorships_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this mentorship.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mentoring/mentorships/{id}/compute-risk/:
    post:
      operationId: api_v1_mentoring_mentorships_compute_risk_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this mentorship.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mentorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mentorship'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
  /api/v1/mentoring/mentorships/analytics/summary/:
    get:
      operationId: api_v1_mentoring_mentorships_analytics_summary_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
  /api/v1/mentoring/mentorships/auto-assign/:
    post:
      operationId: api_v1_mentoring_mentorships_auto_assign_create
      description: Bulk auto-assign mentors to students by department/year/section
        with simple round-robin.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mentorship'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Mentorship'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mentorship'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentorship'
          description: ''
  /api/v1/mentoring/projects/:
    get:
      operationId: api_v1_mentoring_projects_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: api_v1_mentoring_projects_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/mentoring/projects/{id}/:
    get:
      operationId: api_v1_mentoring_projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: api_v1_mentoring_projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: api_v1_mentoring_projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: api_v1_mentoring_projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/alumni/:
    get:
      operationId: api_v1_placements_api_alumni_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlumniPlacementList'
          description: ''
    post:
      operationId: api_v1_placements_api_alumni_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlumniPlacement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlumniPlacement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlumniPlacement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlumniPlacement'
          description: ''
  /api/v1/placements/api/alumni/{id}/:
    get:
      operationId: api_v1_placements_api_alumni_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alumni placement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlumniPlacement'
          description: ''
    put:
      operationId: api_v1_placements_api_alumni_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alumni placement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlumniPlacement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlumniPlacement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlumniPlacement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlumniPlacement'
          description: ''
    patch:
      operationId: api_v1_placements_api_alumni_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alumni placement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlumniPlacement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlumniPlacement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlumniPlacement'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlumniPlacement'
          description: ''
    delete:
      operationId: api_v1_placements_api_alumni_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alumni placement.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/alumni/alumni-network/:
    get:
      operationId: api_v1_placements_api_alumni_alumni_network_retrieve
      description: Get alumni network statistics and willing mentors/recruiters.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlumniPlacement'
          description: ''
  /api/v1/placements/api/analytics/nirf-report/:
    get:
      operationId: api_v1_placements_api_analytics_nirf_report_retrieve
      description: Generate NIRF compliance report for placements.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/placements/api/analytics/trends/:
    get:
      operationId: api_v1_placements_api_analytics_trends_retrieve
      description: Get placement trends over the years.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/placements/api/applications/:
    get:
      operationId: api_v1_placements_api_applications_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationList'
          description: ''
    post:
      operationId: api_v1_placements_api_applications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /api/v1/placements/api/applications/{id}/:
    get:
      operationId: api_v1_placements_api_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    put:
      operationId: api_v1_placements_api_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    patch:
      operationId: api_v1_placements_api_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    delete:
      operationId: api_v1_placements_api_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/companies/:
    get:
      operationId: api_v1_placements_api_companies_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
          description: ''
    post:
      operationId: api_v1_placements_api_companies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/v1/placements/api/companies/{id}/:
    get:
      operationId: api_v1_placements_api_companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: api_v1_placements_api_companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: api_v1_placements_api_companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: api_v1_placements_api_companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/companies/{id}/statistics/:
    get:
      operationId: api_v1_placements_api_companies_statistics_retrieve
      description: Get detailed statistics for a company.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/v1/placements/api/documents/:
    get:
      operationId: api_v1_placements_api_documents_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlacementDocumentList'
          description: ''
    post:
      operationId: api_v1_placements_api_documents_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlacementDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlacementDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDocument'
          description: ''
  /api/v1/placements/api/documents/{id}/:
    get:
      operationId: api_v1_placements_api_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDocument'
          description: ''
    put:
      operationId: api_v1_placements_api_documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlacementDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlacementDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDocument'
          description: ''
    patch:
      operationId: api_v1_placements_api_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlacementDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlacementDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlacementDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDocument'
          description: ''
    delete:
      operationId: api_v1_placements_api_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/drives/:
    get:
      operationId: api_v1_placements_api_drives_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlacementDriveList'
          description: ''
    post:
      operationId: api_v1_placements_api_drives_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementDrive'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlacementDrive'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlacementDrive'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDrive'
          description: ''
  /api/v1/placements/api/drives/{id}/:
    get:
      operationId: api_v1_placements_api_drives_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement drive.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDrive'
          description: ''
    put:
      operationId: api_v1_placements_api_drives_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement drive.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementDrive'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlacementDrive'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlacementDrive'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDrive'
          description: ''
    patch:
      operationId: api_v1_placements_api_drives_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement drive.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlacementDrive'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlacementDrive'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlacementDrive'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementDrive'
          description: ''
    delete:
      operationId: api_v1_placements_api_drives_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement drive.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/feedbacks/:
    get:
      operationId: api_v1_placements_api_feedbacks_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyFeedbackList'
          description: ''
    post:
      operationId: api_v1_placements_api_feedbacks_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyFeedback'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyFeedback'
          description: ''
  /api/v1/placements/api/feedbacks/{id}/:
    get:
      operationId: api_v1_placements_api_feedbacks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company feedback.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyFeedback'
          description: ''
    put:
      operationId: api_v1_placements_api_feedbacks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company feedback.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyFeedback'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyFeedback'
          description: ''
    patch:
      operationId: api_v1_placements_api_feedbacks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company feedback.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyFeedback'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyFeedback'
          description: ''
    delete:
      operationId: api_v1_placements_api_feedbacks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company feedback.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/jobs/:
    get:
      operationId: api_v1_placements_api_jobs_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobPostingList'
          description: ''
    post:
      operationId: api_v1_placements_api_jobs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobPosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobPosting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
          description: ''
  /api/v1/placements/api/jobs/{id}/:
    get:
      operationId: api_v1_placements_api_jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job posting.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
          description: ''
    put:
      operationId: api_v1_placements_api_jobs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job posting.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobPosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobPosting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
          description: ''
    patch:
      operationId: api_v1_placements_api_jobs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job posting.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobPosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobPosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobPosting'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
          description: ''
    delete:
      operationId: api_v1_placements_api_jobs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job posting.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/jobs/{id}/applications/:
    get:
      operationId: api_v1_placements_api_jobs_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job posting.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
          description: ''
  /api/v1/placements/api/offers/:
    get:
      operationId: api_v1_placements_api_offers_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOfferList'
          description: ''
    post:
      operationId: api_v1_placements_api_offers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Offer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Offer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: ''
  /api/v1/placements/api/offers/{id}/:
    get:
      operationId: api_v1_placements_api_offers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this offer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: ''
    put:
      operationId: api_v1_placements_api_offers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this offer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Offer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Offer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: ''
    patch:
      operationId: api_v1_placements_api_offers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this offer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOffer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOffer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOffer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: ''
    delete:
      operationId: api_v1_placements_api_offers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this offer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/rounds/:
    get:
      operationId: api_v1_placements_api_rounds_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInterviewRoundList'
          description: ''
    post:
      operationId: api_v1_placements_api_rounds_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterviewRound'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterviewRound'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterviewRound'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRound'
          description: ''
  /api/v1/placements/api/rounds/{id}/:
    get:
      operationId: api_v1_placements_api_rounds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview round.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRound'
          description: ''
    put:
      operationId: api_v1_placements_api_rounds_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview round.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterviewRound'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterviewRound'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterviewRound'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRound'
          description: ''
    patch:
      operationId: api_v1_placements_api_rounds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview round.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterviewRound'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterviewRound'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterviewRound'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRound'
          description: ''
    delete:
      operationId: api_v1_placements_api_rounds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview round.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/statistics/:
    get:
      operationId: api_v1_placements_api_statistics_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlacementStatisticsList'
          description: ''
    post:
      operationId: api_v1_placements_api_statistics_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementStatistics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlacementStatistics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlacementStatistics'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStatistics'
          description: ''
  /api/v1/placements/api/statistics/{id}/:
    get:
      operationId: api_v1_placements_api_statistics_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement statistics.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStatistics'
          description: ''
    put:
      operationId: api_v1_placements_api_statistics_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement statistics.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementStatistics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlacementStatistics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlacementStatistics'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStatistics'
          description: ''
    patch:
      operationId: api_v1_placements_api_statistics_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement statistics.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlacementStatistics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlacementStatistics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlacementStatistics'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStatistics'
          description: ''
    delete:
      operationId: api_v1_placements_api_statistics_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this placement statistics.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/placements/api/statistics/overview/:
    get:
      operationId: api_v1_placements_api_statistics_overview_retrieve
      description: Get overall placement statistics for the institution.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStatistics'
          description: ''
  /api/v1/rnd/collaborations/:
    get:
      operationId: api_v1_rnd_collaborations_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollaborationList'
          description: ''
    post:
      operationId: api_v1_rnd_collaborations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collaboration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
  /api/v1/rnd/collaborations/{id}/:
    get:
      operationId: api_v1_rnd_collaborations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collaboration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    put:
      operationId: api_v1_rnd_collaborations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collaboration.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collaboration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    patch:
      operationId: api_v1_rnd_collaborations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collaboration.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    delete:
      operationId: api_v1_rnd_collaborations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collaboration.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/collaborations/stats/:
    get:
      operationId: api_v1_rnd_collaborations_stats_retrieve
      description: Get collaboration statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
  /api/v1/rnd/datasets/:
    get:
      operationId: api_v1_rnd_datasets_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetList'
          description: ''
    post:
      operationId: api_v1_rnd_datasets_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v1/rnd/datasets/{id}/:
    get:
      operationId: api_v1_rnd_datasets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: api_v1_rnd_datasets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: api_v1_rnd_datasets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: api_v1_rnd_datasets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/datasets/stats/:
    get:
      operationId: api_v1_rnd_datasets_stats_retrieve
      description: Get dataset statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v1/rnd/grants/:
    get:
      operationId: api_v1_rnd_grants_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGrantList'
          description: ''
    post:
      operationId: api_v1_rnd_grants_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
          description: ''
  /api/v1/rnd/grants/{id}/:
    get:
      operationId: api_v1_rnd_grants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grant.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
          description: ''
    put:
      operationId: api_v1_rnd_grants_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grant.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
          description: ''
    patch:
      operationId: api_v1_rnd_grants_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grant.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGrant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGrant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGrant'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
          description: ''
    delete:
      operationId: api_v1_rnd_grants_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grant.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/grants/stats/:
    get:
      operationId: api_v1_rnd_grants_stats_retrieve
      description: Get grant statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
          description: ''
  /api/v1/rnd/patents/:
    get:
      operationId: api_v1_rnd_patents_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: filing_date
        schema:
          type: string
          format: date
      - in: query
        name: grant_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatentList'
          description: ''
    post:
      operationId: api_v1_rnd_patents_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patent'
          description: ''
  /api/v1/rnd/patents/{id}/:
    get:
      operationId: api_v1_rnd_patents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patent.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patent'
          description: ''
    put:
      operationId: api_v1_rnd_patents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patent.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patent'
          description: ''
    patch:
      operationId: api_v1_rnd_patents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patent.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPatent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPatent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patent'
          description: ''
    delete:
      operationId: api_v1_rnd_patents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patent.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/patents/stats/:
    get:
      operationId: api_v1_rnd_patents_stats_retrieve
      description: Get patent statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patent'
          description: ''
  /api/v1/rnd/projects/:
    get:
      operationId: api_v1_rnd_projects_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - cancelled
          - completed
          - draft
          - paused
        description: |-
          * `draft` - Draft
          * `active` - Active
          * `paused` - Paused
          * `completed` - Completed
          * `cancelled` - Cancelled
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: api_v1_rnd_projects_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/rnd/projects/{id}/:
    get:
      operationId: api_v1_rnd_projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
    put:
      operationId: api_v1_rnd_projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: api_v1_rnd_projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: api_v1_rnd_projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/projects/search/:
    get:
      operationId: api_v1_rnd_projects_search_retrieve
      description: Advanced search for projects
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/rnd/projects/stats/:
    get:
      operationId: api_v1_rnd_projects_stats_retrieve
      description: Get project statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/rnd/publications/:
    get:
      operationId: api_v1_rnd_publications_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: publication_type
        schema:
          type: string
          enum:
          - book
          - conference
          - journal
          - other
          - preprint
        description: |-
          * `journal` - Journal
          * `conference` - Conference
          * `book` - Book
          * `preprint` - Preprint
          * `other` - Other
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: year
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
    post:
      operationId: api_v1_rnd_publications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Publication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
  /api/v1/rnd/publications/{id}/:
    get:
      operationId: api_v1_rnd_publications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publication.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    put:
      operationId: api_v1_rnd_publications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publication.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Publication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    patch:
      operationId: api_v1_rnd_publications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publication.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublication'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    delete:
      operationId: api_v1_rnd_publications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this publication.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/publications/search/:
    get:
      operationId: api_v1_rnd_publications_search_retrieve
      description: Advanced search for publications
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
  /api/v1/rnd/publications/stats/:
    get:
      operationId: api_v1_rnd_publications_stats_retrieve
      description: Get publication statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
  /api/v1/rnd/researchers/:
    get:
      operationId: api_v1_rnd_researchers_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResearcherList'
          description: ''
    post:
      operationId: api_v1_rnd_researchers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Researcher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Researcher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Researcher'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Researcher'
          description: ''
  /api/v1/rnd/researchers/{id}/:
    get:
      operationId: api_v1_rnd_researchers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this researcher.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherDetail'
          description: ''
    put:
      operationId: api_v1_rnd_researchers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this researcher.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Researcher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Researcher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Researcher'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Researcher'
          description: ''
    patch:
      operationId: api_v1_rnd_researchers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this researcher.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResearcher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResearcher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResearcher'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Researcher'
          description: ''
    delete:
      operationId: api_v1_rnd_researchers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this researcher.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/rnd/researchers/search/:
    get:
      operationId: api_v1_rnd_researchers_search_retrieve
      description: Advanced search for researchers
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Researcher'
          description: ''
  /api/v1/rnd/researchers/stats/:
    get:
      operationId: api_v1_rnd_researchers_stats_retrieve
      description: Get researcher statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Researcher'
          description: ''
  /api/v1/students/custom-field-values/:
    get:
      operationId: api_v1_students_custom_field_values_list
      description: API endpoint for managing student custom field values
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: custom_field
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentCustomFieldValueList'
          description: ''
    post:
      operationId: api_v1_students_custom_field_values_create
      description: API endpoint for managing student custom field values
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
  /api/v1/students/custom-field-values/{id}/:
    get:
      operationId: api_v1_students_custom_field_values_retrieve
      description: API endpoint for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
    put:
      operationId: api_v1_students_custom_field_values_update
      description: API endpoint for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
    patch:
      operationId: api_v1_students_custom_field_values_partial_update
      description: API endpoint for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentCustomFieldValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentCustomFieldValue'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
    delete:
      operationId: api_v1_students_custom_field_values_destroy
      description: API endpoint for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/custom-field-values/by-field/:
    get:
      operationId: api_v1_students_custom_field_values_by_field_retrieve
      description: Get values for a specific custom field
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
  /api/v1/students/custom-field-values/by-student/:
    get:
      operationId: api_v1_students_custom_field_values_by_student_retrieve
      description: Get custom field values for a specific student
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
  /api/v1/students/custom-field-values/by_field/:
    get:
      operationId: api_v1_students_custom_field_values_by_field_retrieve_2
      description: Get values for a specific custom field
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
  /api/v1/students/custom-field-values/by_student/:
    get:
      operationId: api_v1_students_custom_field_values_by_student_retrieve_2
      description: Get custom field values for a specific student
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
  /api/v1/students/custom-fields/:
    get:
      operationId: api_v1_students_custom_fields_list
      description: API endpoint for managing custom fields
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: field_type
        schema:
          type: string
          enum:
          - boolean
          - date
          - email
          - file
          - multiselect
          - number
          - phone
          - select
          - text
          - textarea
          - url
        description: |-
          * `text` - Text
          * `number` - Number
          * `date` - Date
          * `email` - Email
          * `phone` - Phone
          * `select` - Select (Dropdown)
          * `multiselect` - Multi-Select
          * `boolean` - Yes/No
          * `textarea` - Long Text
          * `file` - File Upload
          * `url` - URL
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: required
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomFieldList'
          description: ''
    post:
      operationId: api_v1_students_custom_fields_create
      description: API endpoint for managing custom fields
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomField'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
  /api/v1/students/custom-fields/{id}/:
    get:
      operationId: api_v1_students_custom_fields_retrieve
      description: API endpoint for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    put:
      operationId: api_v1_students_custom_fields_update
      description: API endpoint for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomField'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    patch:
      operationId: api_v1_students_custom_fields_partial_update
      description: API endpoint for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    delete:
      operationId: api_v1_students_custom_fields_destroy
      description: API endpoint for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/custom-fields/stats/:
    get:
      operationId: api_v1_students_custom_fields_stats_retrieve
      description: Get custom field statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
  /api/v1/students/custom-fields/types/:
    get:
      operationId: api_v1_students_custom_fields_types_retrieve
      description: Get available field types
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
  /api/v1/students/documents/:
    get:
      operationId: api_v1_students_documents_list
      description: API endpoint for managing student documents
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: document_type
        schema:
          type: string
          enum:
          - BIRTH_CERT
          - IMMUNIZATION
          - MEDICAL
          - OTHER
          - PHOTO_ID
          - TRANSCRIPT
        description: |-
          * `BIRTH_CERT` - Birth Certificate
          * `TRANSCRIPT` - Academic Transcript
          * `MEDICAL` - Medical Record
          * `IMMUNIZATION` - Immunization Record
          * `PHOTO_ID` - Photo ID
          * `OTHER` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: student
        schema:
          type: string
          format: uuid
      - in: query
        name: uploaded_by
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentDocumentList'
          description: ''
    post:
      operationId: api_v1_students_documents_create
      description: API endpoint for managing student documents
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
  /api/v1/students/documents/{id}/:
    get:
      operationId: api_v1_students_documents_retrieve
      description: API endpoint for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
    put:
      operationId: api_v1_students_documents_update
      description: API endpoint for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
    patch:
      operationId: api_v1_students_documents_partial_update
      description: API endpoint for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
    delete:
      operationId: api_v1_students_documents_destroy
      description: API endpoint for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/enrollment-history/:
    get:
      operationId: api_v1_students_enrollment_history_list
      description: API endpoint for managing student enrollment history
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - DROPPED
          - GRADUATED
          - INACTIVE
          - SUSPENDED
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `GRADUATED` - Graduated
          * `SUSPENDED` - Suspended
          * `DROPPED` - Dropped Out
      - in: query
        name: student
        schema:
          type: string
          format: uuid
      - in: query
        name: year_of_study
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
        description: |-
          * `1` - 1st Year
          * `2` - 2nd Year
          * `3` - 3rd Year
          * `4` - 4th Year
          * `5` - 5th Year
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentEnrollmentHistoryList'
          description: ''
    post:
      operationId: api_v1_students_enrollment_history_create
      description: API endpoint for managing student enrollment history
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
  /api/v1/students/enrollment-history/{id}/:
    get:
      operationId: api_v1_students_enrollment_history_retrieve
      description: API endpoint for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
    put:
      operationId: api_v1_students_enrollment_history_update
      description: API endpoint for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
    patch:
      operationId: api_v1_students_enrollment_history_partial_update
      description: API endpoint for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollmentHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollmentHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollmentHistory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
    delete:
      operationId: api_v1_students_enrollment_history_destroy
      description: API endpoint for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/imports/:
    get:
      operationId: api_v1_students_imports_list
      description: API endpoint for viewing student import history
      parameters:
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - COMPLETED
          - FAILED
          - PENDING
          - PROCESSING
        description: |-
          * `PENDING` - Pending
          * `PROCESSING` - Processing
          * `COMPLETED` - Completed
          * `FAILED` - Failed
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentImportList'
          description: ''
  /api/v1/students/imports/{id}/:
    get:
      operationId: api_v1_students_imports_retrieve
      description: API endpoint for viewing student import history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Import.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentImport'
          description: ''
  /api/v1/students/imports/stats/:
    get:
      operationId: api_v1_students_imports_stats_retrieve
      description: Get import statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentImport'
          description: ''
  /api/v1/students/stats/:
    get:
      operationId: api_v1_students_stats_retrieve
      description: Get student statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/student-batches/:
    get:
      operationId: api_v1_students_student_batches_list
      description: |-
        API v1 endpoint for listing student batches used by the enrollment UI.

        Optimized for high read throughput:
        - select_related for FK fields
        - ordering and search fields indexed/cheap
        - optional caching via cache_page
      parameters:
      - in: query
        name: academic_program
        schema:
          type: integer
      - in: query
        name: academic_year
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: section
        schema:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T
        description: |-
          * `A` - Section A
          * `B` - Section B
          * `C` - Section C
          * `D` - Section D
          * `E` - Section E
          * `F` - Section F
          * `G` - Section G
          * `H` - Section H
          * `I` - Section I
          * `J` - Section J
          * `K` - Section K
          * `L` - Section L
          * `M` - Section M
          * `N` - Section N
          * `O` - Section O
          * `P` - Section P
          * `Q` - Section Q
          * `R` - Section R
          * `S` - Section S
          * `T` - Section T
      - in: query
        name: semester
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          * `1` - Semester 1
          * `2` - Semester 2
          * `3` - Semester 3
          * `4` - Semester 4
          * `5` - Semester 5
          * `6` - Semester 6
          * `7` - Semester 7
          * `8` - Semester 8
          * `9` - Semester 9
          * `10` - Semester 10
      - in: query
        name: year_of_study
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
        description: |-
          * `1` - 1st Year
          * `2` - 2nd Year
          * `3` - 3rd Year
          * `4` - 4th Year
          * `5` - 5th Year
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentBatchList'
          description: ''
  /api/v1/students/student-batches/{id}/:
    get:
      operationId: api_v1_students_student_batches_retrieve
      description: |-
        API v1 endpoint for listing student batches used by the enrollment UI.

        Optimized for high read throughput:
        - select_related for FK fields
        - ordering and search fields indexed/cheap
        - optional caching via cache_page
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Batch.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
  /api/v1/students/students/:
    get:
      operationId: api_v1_students_students_list
      description: API endpoint for managing students
      parameters:
      - in: query
        name: academic_program
        schema:
          type: integer
      - in: query
        name: academic_year
        schema:
          type: integer
      - in: query
        name: age_max
        schema:
          type: number
        description: Maximum Age
      - in: query
        name: age_min
        schema:
          type: number
        description: Minimum Age
      - in: query
        name: caste
        schema:
          type: integer
      - in: query
        name: caste__name__icontains
        schema:
          type: string
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: city__icontains
        schema:
          type: string
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: date_of_birth_after
        schema:
          type: string
          format: date
      - in: query
        name: date_of_birth_before
        schema:
          type: string
          format: date
      - in: query
        name: department
        schema:
          type: string
          format: uuid
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: email__icontains
        schema:
          type: string
      - in: query
        name: father_mobile
        schema:
          type: string
      - in: query
        name: father_mobile__icontains
        schema:
          type: string
      - in: query
        name: father_name
        schema:
          type: string
      - in: query
        name: father_name__icontains
        schema:
          type: string
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: first_name__icontains
        schema:
          type: string
      - in: query
        name: first_name__startswith
        schema:
          type: string
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - F
          - M
          - O
        description: |-
          * `M` - Male
          * `F` - Female
          * `O` - Other
      - in: query
        name: has_email
        schema:
          type: boolean
        description: Has Email
      - in: query
        name: has_login
        schema:
          type: boolean
        description: Has Login Account
      - in: query
        name: has_mobile
        schema:
          type: boolean
        description: Has Mobile
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: last_name__icontains
        schema:
          type: string
      - in: query
        name: last_name__startswith
        schema:
          type: string
      - in: query
        name: mother_mobile
        schema:
          type: string
      - in: query
        name: mother_mobile__icontains
        schema:
          type: string
      - in: query
        name: mother_name
        schema:
          type: string
      - in: query
        name: mother_name__icontains
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
        description: Name
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent_name
        schema:
          type: string
        description: Parent Name
      - in: query
        name: quota
        schema:
          type: integer
      - in: query
        name: rank_max
        schema:
          type: integer
      - in: query
        name: rank_min
        schema:
          type: integer
      - in: query
        name: religion
        schema:
          type: integer
      - in: query
        name: religion__name__icontains
        schema:
          type: string
      - in: query
        name: roll_number
        schema:
          type: string
      - in: query
        name: roll_number__icontains
        schema:
          type: string
      - in: query
        name: roll_number__startswith
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: section
        schema:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T
        description: |-
          * `A` - Section A
          * `B` - Section B
          * `C` - Section C
          * `D` - Section D
          * `E` - Section E
          * `F` - Section F
          * `G` - Section G
          * `H` - Section H
          * `I` - Section I
          * `J` - Section J
          * `K` - Section K
          * `L` - Section L
          * `M` - Section M
          * `N` - Section N
          * `O` - Section O
          * `P` - Section P
          * `Q` - Section Q
          * `R` - Section R
          * `S` - Section S
          * `T` - Section T
      - in: query
        name: semester
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          * `1` - Semester 1
          * `2` - Semester 2
          * `3` - Semester 3
          * `4` - Semester 4
          * `5` - Semester 5
          * `6` - Semester 6
          * `7` - Semester 7
          * `8` - Semester 8
          * `9` - Semester 9
          * `10` - Semester 10
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: state__icontains
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - DROPPED
          - GRADUATED
          - INACTIVE
          - SUSPENDED
        description: |-
          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `GRADUATED` - Graduated
          * `SUSPENDED` - Suspended
          * `DROPPED` - Dropped Out
      - in: query
        name: student_batch
        schema:
          type: integer
      - in: query
        name: student_batch__academic_program
        schema:
          type: integer
      - in: query
        name: student_batch__academic_program__code
        schema:
          type: string
      - in: query
        name: student_batch__academic_program__code__icontains
        schema:
          type: string
      - in: query
        name: student_batch__academic_program__name__icontains
        schema:
          type: string
      - in: query
        name: student_batch__academic_year
        schema:
          type: integer
      - in: query
        name: student_batch__academic_year__year
        schema:
          type: string
      - in: query
        name: student_batch__academic_year__year__icontains
        schema:
          type: string
      - in: query
        name: student_batch__department
        schema:
          type: string
          format: uuid
      - in: query
        name: student_batch__department__code
        schema:
          type: string
      - in: query
        name: student_batch__department__code__icontains
        schema:
          type: string
      - in: query
        name: student_batch__department__name__icontains
        schema:
          type: string
      - in: query
        name: student_batch__section
        schema:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T
        description: |-
          * `A` - Section A
          * `B` - Section B
          * `C` - Section C
          * `D` - Section D
          * `E` - Section E
          * `F` - Section F
          * `G` - Section G
          * `H` - Section H
          * `I` - Section I
          * `J` - Section J
          * `K` - Section K
          * `L` - Section L
          * `M` - Section M
          * `N` - Section N
          * `O` - Section O
          * `P` - Section P
          * `Q` - Section Q
          * `R` - Section R
          * `S` - Section S
          * `T` - Section T
      - in: query
        name: student_batch__semester
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          * `1` - Semester 1
          * `2` - Semester 2
          * `3` - Semester 3
          * `4` - Semester 4
          * `5` - Semester 5
          * `6` - Semester 6
          * `7` - Semester 7
          * `8` - Semester 8
          * `9` - Semester 9
          * `10` - Semester 10
      - in: query
        name: student_batch__year_of_study
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
        description: |-
          * `1` - 1st Year
          * `2` - 2nd Year
          * `3` - 3rd Year
          * `4` - 4th Year
          * `5` - 5th Year
      - in: query
        name: student_mobile
        schema:
          type: string
      - in: query
        name: student_mobile__icontains
        schema:
          type: string
      - in: query
        name: subcaste
        schema:
          type: string
      - in: query
        name: subcaste__icontains
        schema:
          type: string
      - in: query
        name: village
        schema:
          type: string
      - in: query
        name: village__icontains
        schema:
          type: string
      - in: query
        name: year_of_study
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
        description: |-
          * `1` - 1st Year
          * `2` - 2nd Year
          * `3` - 3rd Year
          * `4` - 4th Year
          * `5` - 5th Year
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentList'
          description: ''
    post:
      operationId: api_v1_students_students_create
      description: API endpoint for managing students
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/:
    get:
      operationId: api_v1_students_students_retrieve
      description: API endpoint for managing students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetail'
          description: ''
    put:
      operationId: api_v1_students_students_update
      description: API endpoint for managing students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    patch:
      operationId: api_v1_students_students_partial_update
      description: API endpoint for managing students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    delete:
      operationId: api_v1_students_students_destroy
      description: API endpoint for managing students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/students/{id}/create-login/:
    post:
      operationId: api_v1_students_students_create_login_create
      description: Manually create login account for student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/create_login/:
    post:
      operationId: api_v1_students_students_create_login_create_2
      description: Manually create login account for student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/custom-fields/:
    get:
      operationId: api_v1_students_students_custom_fields_retrieve
      description: Get student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/custom_fields/:
    get:
      operationId: api_v1_students_students_custom_fields_retrieve_2
      description: Get student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/documents/:
    get:
      operationId: api_v1_students_students_documents_retrieve
      description: Get student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/enrollment-history/:
    get:
      operationId: api_v1_students_students_enrollment_history_retrieve
      description: Get student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/{id}/enrollment_history/:
    get:
      operationId: api_v1_students_students_enrollment_history_retrieve_2
      description: Get student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/bulk-create/:
    post:
      operationId: api_v1_students_students_bulk_create_create
      description: Bulk create students
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/bulk-delete/:
    delete:
      operationId: api_v1_students_students_bulk_delete_destroy
      description: Bulk delete students
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/students/bulk-update/:
    post:
      operationId: api_v1_students_students_bulk_update_create
      description: Bulk update students
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/bulk_create/:
    post:
      operationId: api_v1_students_students_bulk_create_create_2
      description: Bulk create students
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/bulk_delete/:
    delete:
      operationId: api_v1_students_students_bulk_delete_destroy_2
      description: Bulk delete students
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/students/students/bulk_update/:
    post:
      operationId: api_v1_students_students_bulk_update_create_2
      description: Bulk update students
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/division-statistics/:
    get:
      operationId: api_v1_students_students_division_statistics_retrieve
      description: Aggregated statistics grouped by department/year/semester/section
        (API v1).
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/division_statistics/:
    get:
      operationId: api_v1_students_students_division_statistics_retrieve_2
      description: Aggregated statistics grouped by department/year/semester/section
        (API v1).
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/divisions/:
    get:
      operationId: api_v1_students_students_divisions_retrieve
      description: Compact divisions listing with counts (API v1).
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/search/:
    get:
      operationId: api_v1_students_students_search_retrieve
      description: Advanced search endpoint
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/students/students/stats/:
    get:
      operationId: api_v1_students_students_stats_retrieve
      description: Get student statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/transport/assignments/:
    get:
      operationId: api_v1_transport_assignments_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: driver
        schema:
          type: integer
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: route
        schema:
          type: integer
      - in: query
        name: vehicle
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleAssignmentList'
          description: ''
    post:
      operationId: api_v1_transport_assignments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleAssignment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleAssignment'
          description: ''
  /api/v1/transport/assignments/{id}/:
    get:
      operationId: api_v1_transport_assignments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle assignment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleAssignment'
          description: ''
    put:
      operationId: api_v1_transport_assignments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle assignment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleAssignment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleAssignment'
          description: ''
    patch:
      operationId: api_v1_transport_assignments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle assignment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicleAssignment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleAssignment'
          description: ''
    delete:
      operationId: api_v1_transport_assignments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle assignment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/drivers/:
    get:
      operationId: api_v1_transport_drivers_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDriverList'
          description: ''
    post:
      operationId: api_v1_transport_drivers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Driver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
  /api/v1/transport/drivers/{id}/:
    get:
      operationId: api_v1_transport_drivers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
    put:
      operationId: api_v1_transport_drivers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Driver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
    patch:
      operationId: api_v1_transport_drivers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDriver'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDriver'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDriver'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
          description: ''
    delete:
      operationId: api_v1_transport_drivers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/passes/:
    get:
      operationId: api_v1_transport_passes_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pass_type
        schema:
          type: string
          enum:
          - STAFF
          - STUDENT
        description: |-
          * `STUDENT` - Student
          * `STAFF` - Staff
      - in: query
        name: route
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransportPassList'
          description: ''
    post:
      operationId: api_v1_transport_passes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransportPass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransportPass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransportPass'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportPass'
          description: ''
  /api/v1/transport/passes/{id}/:
    get:
      operationId: api_v1_transport_passes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transport pass.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportPass'
          description: ''
    put:
      operationId: api_v1_transport_passes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transport pass.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransportPass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransportPass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransportPass'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportPass'
          description: ''
    patch:
      operationId: api_v1_transport_passes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transport pass.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransportPass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransportPass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransportPass'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportPass'
          description: ''
    delete:
      operationId: api_v1_transport_passes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transport pass.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/passes/bulk-assign-faculty/:
    post:
      operationId: api_v1_transport_passes_bulk_assign_faculty_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransportPass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransportPass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransportPass'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportPass'
          description: ''
  /api/v1/transport/passes/bulk-assign-students/:
    post:
      operationId: api_v1_transport_passes_bulk_assign_students_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransportPass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransportPass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransportPass'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportPass'
          description: ''
  /api/v1/transport/route-stops/:
    get:
      operationId: api_v1_transport_route_stops_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: route
        schema:
          type: integer
      - in: query
        name: stop
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRouteStopList'
          description: ''
    post:
      operationId: api_v1_transport_route_stops_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RouteStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RouteStop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteStop'
          description: ''
  /api/v1/transport/route-stops/{id}/:
    get:
      operationId: api_v1_transport_route_stops_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route stop.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteStop'
          description: ''
    put:
      operationId: api_v1_transport_route_stops_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route stop.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RouteStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RouteStop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteStop'
          description: ''
    patch:
      operationId: api_v1_transport_route_stops_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route stop.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRouteStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRouteStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRouteStop'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteStop'
          description: ''
    delete:
      operationId: api_v1_transport_route_stops_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route stop.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/routes/:
    get:
      operationId: api_v1_transport_routes_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRouteList'
          description: ''
    post:
      operationId: api_v1_transport_routes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Route'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
  /api/v1/transport/routes/{id}/:
    get:
      operationId: api_v1_transport_routes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
    put:
      operationId: api_v1_transport_routes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Route'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
    patch:
      operationId: api_v1_transport_routes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoute'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
    delete:
      operationId: api_v1_transport_routes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this route.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/schedules/:
    get:
      operationId: api_v1_transport_schedules_list
      parameters:
      - in: query
        name: assignment
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: day_of_week
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          * `0` - Monday
          * `1` - Tuesday
          * `2` - Wednesday
          * `3` - Thursday
          * `4` - Friday
          * `5` - Saturday
          * `6` - Sunday
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTripScheduleList'
          description: ''
    post:
      operationId: api_v1_transport_schedules_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TripSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TripSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripSchedule'
          description: ''
  /api/v1/transport/schedules/{id}/:
    get:
      operationId: api_v1_transport_schedules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripSchedule'
          description: ''
    put:
      operationId: api_v1_transport_schedules_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TripSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TripSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripSchedule'
          description: ''
    patch:
      operationId: api_v1_transport_schedules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip schedule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTripSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTripSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTripSchedule'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripSchedule'
          description: ''
    delete:
      operationId: api_v1_transport_schedules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trip schedule.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/stops/:
    get:
      operationId: api_v1_transport_stops_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStopList'
          description: ''
    post:
      operationId: api_v1_transport_stops_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: ''
  /api/v1/transport/stops/{id}/:
    get:
      operationId: api_v1_transport_stops_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stop.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: ''
    put:
      operationId: api_v1_transport_stops_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stop.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: ''
    patch:
      operationId: api_v1_transport_stops_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stop.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStop'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
          description: ''
    delete:
      operationId: api_v1_transport_stops_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stop.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/transport/vehicles/:
    get:
      operationId: api_v1_transport_vehicles_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleList'
          description: ''
    post:
      operationId: api_v1_transport_vehicles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
  /api/v1/transport/vehicles/{id}/:
    get:
      operationId: api_v1_transport_vehicles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    put:
      operationId: api_v1_transport_vehicles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    patch:
      operationId: api_v1_transport_vehicles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    delete:
      operationId: api_v1_transport_vehicles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /dashboard/api/students/bulk-assign/:
    post:
      operationId: dashboard_api_students_bulk_assign_create
      description: API endpoint for bulk student assignment
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /students/api/bulk-assignments/:
    get:
      operationId: students_api_bulk_assignments_list
      description: ViewSet for viewing bulk assignment operations
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBulkAssignmentList'
          description: ''
  /students/api/bulk-assignments/{id}/:
    get:
      operationId: students_api_bulk_assignments_retrieve
      description: ViewSet for viewing bulk assignment operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Bulk Assignment.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAssignment'
          description: ''
  /students/api/bulk-assignments/{id}/details/:
    get:
      operationId: students_api_bulk_assignments_details_retrieve
      description: Get detailed information about a bulk assignment operation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Bulk Assignment.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAssignment'
          description: ''
  /students/api/custom-field-values/:
    get:
      operationId: students_api_custom_field_values_list
      description: ViewSet for managing student custom field values
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentCustomFieldValueList'
          description: ''
    post:
      operationId: students_api_custom_field_values_create
      description: ViewSet for managing student custom field values
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
  /students/api/custom-field-values/{id}/:
    get:
      operationId: students_api_custom_field_values_retrieve
      description: ViewSet for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
    put:
      operationId: students_api_custom_field_values_update
      description: ViewSet for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentCustomFieldValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
    patch:
      operationId: students_api_custom_field_values_partial_update
      description: ViewSet for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentCustomFieldValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentCustomFieldValue'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCustomFieldValue'
          description: ''
    delete:
      operationId: students_api_custom_field_values_destroy
      description: ViewSet for managing student custom field values
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Custom Field Value.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /students/api/custom-fields/:
    get:
      operationId: students_api_custom_fields_list
      description: ViewSet for managing custom fields
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomFieldList'
          description: ''
    post:
      operationId: students_api_custom_fields_create
      description: ViewSet for managing custom fields
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomField'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
  /students/api/custom-fields/{id}/:
    get:
      operationId: students_api_custom_fields_retrieve
      description: ViewSet for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    put:
      operationId: students_api_custom_fields_update
      description: ViewSet for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomField'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    patch:
      operationId: students_api_custom_fields_partial_update
      description: ViewSet for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomField'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: ''
    delete:
      operationId: students_api_custom_fields_destroy
      description: ViewSet for managing custom fields
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Custom Field.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /students/api/documents/:
    get:
      operationId: students_api_documents_list
      description: ViewSet for managing student documents
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentDocumentList'
          description: ''
    post:
      operationId: students_api_documents_create
      description: ViewSet for managing student documents
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
  /students/api/documents/{id}/:
    get:
      operationId: students_api_documents_retrieve
      description: ViewSet for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
    put:
      operationId: students_api_documents_update
      description: ViewSet for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
    patch:
      operationId: students_api_documents_partial_update
      description: ViewSet for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDocument'
          description: ''
    delete:
      operationId: students_api_documents_destroy
      description: ViewSet for managing student documents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Document.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /students/api/enrollment-history/:
    get:
      operationId: students_api_enrollment_history_list
      description: ViewSet for managing student enrollment history
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentEnrollmentHistoryList'
          description: ''
    post:
      operationId: students_api_enrollment_history_create
      description: ViewSet for managing student enrollment history
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
  /students/api/enrollment-history/{id}/:
    get:
      operationId: students_api_enrollment_history_retrieve
      description: ViewSet for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
    put:
      operationId: students_api_enrollment_history_update
      description: ViewSet for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentEnrollmentHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
    patch:
      operationId: students_api_enrollment_history_partial_update
      description: ViewSet for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollmentHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollmentHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollmentHistory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollmentHistory'
          description: ''
    delete:
      operationId: students_api_enrollment_history_destroy
      description: ViewSet for managing student enrollment history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student Enrollment History.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /students/api/student-batches/:
    get:
      operationId: students_api_student_batches_list
      description: ViewSet for managing student batches
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentBatchList'
          description: ''
    post:
      operationId: students_api_student_batches_create
      description: ViewSet for managing student batches
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentBatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentBatch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
  /students/api/student-batches/{id}/:
    get:
      operationId: students_api_student_batches_retrieve
      description: ViewSet for managing student batches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Batch.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
    put:
      operationId: students_api_student_batches_update
      description: ViewSet for managing student batches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Batch.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentBatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentBatch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
    patch:
      operationId: students_api_student_batches_partial_update
      description: ViewSet for managing student batches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Batch.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentBatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentBatch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
    delete:
      operationId: students_api_student_batches_destroy
      description: ViewSet for managing student batches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Batch.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /students/api/student-batches/{id}/update_student_count/:
    post:
      operationId: students_api_student_batches_update_student_count_create
      description: Update the student count for this batch
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Student Batch.
        required: true
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentBatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentBatch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
  /students/api/student-batches/capacity_report/:
    get:
      operationId: students_api_student_batches_capacity_report_retrieve
      description: Get capacity report for all batches
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBatch'
          description: ''
  /students/api/students/:
    get:
      operationId: students_api_students_list
      description: |-
        ViewSet for managing students
        Provides CRUD operations for students
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentListList'
          description: ''
    post:
      operationId: students_api_students_create
      description: |-
        ViewSet for managing students
        Provides CRUD operations for students
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCreate'
          description: ''
  /students/api/students/{id}/:
    get:
      operationId: students_api_students_retrieve
      description: |-
        ViewSet for managing students
        Provides CRUD operations for students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetail'
          description: ''
    put:
      operationId: students_api_students_update
      description: |-
        ViewSet for managing students
        Provides CRUD operations for students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentUpdate'
          description: ''
    patch:
      operationId: students_api_students_partial_update
      description: |-
        ViewSet for managing students
        Provides CRUD operations for students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentUpdate'
          description: ''
    delete:
      operationId: students_api_students_destroy
      description: |-
        ViewSet for managing students
        Provides CRUD operations for students
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /students/api/students/{id}/add_enrollment/:
    post:
      operationId: students_api_students_add_enrollment_create
      description: Add enrollment history entry for a student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/{id}/change_status/:
    patch:
      operationId: students_api_students_change_status_partial_update
      description: Change student status
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/{id}/custom_fields/:
    get:
      operationId: students_api_students_custom_fields_retrieve
      description: Get custom field values for a specific student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/{id}/documents/:
    get:
      operationId: students_api_students_documents_retrieve
      description: Get documents for a specific student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/{id}/enrollment_history/:
    get:
      operationId: students_api_students_enrollment_history_retrieve
      description: Get enrollment history for a specific student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/{id}/set_custom_field/:
    post:
      operationId: students_api_students_set_custom_field_create
      description: Set a custom field value for a student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/{id}/upload_document/:
    post:
      operationId: students_api_students_upload_document_create
      description: Upload a document for a student
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Student.
        required: true
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/assign/:
    post:
      operationId: students_api_students_assign_create
      description: Assign multiple students to department, program, year, semester,
        and section
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/assign_students/:
    post:
      operationId: students_api_students_assign_students_create
      description: Assign multiple students to department, program, year, semester,
        and section
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/available_custom_fields/:
    get:
      operationId: students_api_students_available_custom_fields_retrieve
      description: Get all available custom fields
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/bulk-assign/:
    post:
      operationId: students_api_students_bulk_assign_create
      description: Enhanced bulk assign students based on criteria
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/bulk_assign_by_criteria/:
    post:
      operationId: students_api_students_bulk_assign_by_criteria_create
      description: Enhanced bulk assign students based on criteria
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/division-statistics/:
    get:
      operationId: students_api_students_division_statistics_retrieve
      description: Get statistics for student divisions
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/division_statistics/:
    get:
      operationId: students_api_students_division_statistics_retrieve_2
      description: Get statistics for student divisions
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/divisions/:
    get:
      operationId: students_api_students_divisions_retrieve
      description: Get students grouped by department, program, year, semester, and
        section
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/smart-bulk-assign/:
    post:
      operationId: students_api_students_smart_bulk_assign_create
      description: Smart bulk assignment with automatic section management
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/smart_bulk_assign/:
    post:
      operationId: students_api_students_smart_bulk_assign_create_2
      description: Smart bulk assignment with automatic section management
      tags:
      - students
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /students/api/students/statistics/:
    get:
      operationId: students_api_students_statistics_retrieve
      description: Get student statistics
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
components:
  schemas:
    AcademicCalendar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        event_type:
          $ref: '#/components/schemas/EventType430Enum'
        event_type_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          description: Event start date
        end_date:
          type: string
          format: date
          description: Event end date
        description:
          type: string
          description: Event description
        academic_year:
          type: string
          description: Academic year
          maxLength: 9
        semester:
          type: string
          description: Semester (if applicable)
          maxLength: 20
        is_academic_day:
          type: boolean
          description: Whether this is an academic day
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - created_at
      - description
      - end_date
      - event_type
      - event_type_display
      - id
      - semester
      - start_date
      - title
      - updated_at
    AcademicCalendarCreate:
      type: object
      properties:
        title:
          type: string
          description: Event title
          maxLength: 200
        event_type:
          $ref: '#/components/schemas/EventType430Enum'
        start_date:
          type: string
          format: date
          description: Event start date
        end_date:
          type: string
          format: date
          description: Event end date
        description:
          type: string
          description: Event description
        academic_year:
          type: string
          description: Academic year
          maxLength: 9
        semester:
          type: string
          description: Semester (if applicable)
          maxLength: 20
        is_academic_day:
          type: boolean
          description: Whether this is an academic day
      required:
      - academic_year
      - description
      - end_date
      - event_type
      - semester
      - start_date
      - title
    AcademicStandingEnum:
      enum:
      - EXCELLENT
      - VERY_GOOD
      - GOOD
      - SATISFACTORY
      - PASS
      - PROBATION
      type: string
      description: |-
        * `EXCELLENT` - Excellent (SGPA ≥ 8.0)
        * `VERY_GOOD` - Very Good (SGPA ≥ 7.0)
        * `GOOD` - Good (SGPA ≥ 6.0)
        * `SATISFACTORY` - Satisfactory (SGPA ≥ 5.0)
        * `PASS` - Pass (SGPA ≥ 4.0)
        * `PROBATION` - Academic Probation (SGPA < 4.0)
    AcademicYearEnum:
      enum:
      - 2023-2024
      - 2024-2025
      - 2025-2026
      - 2026-2027
      type: string
      description: |-
        * `2023-2024` - 2023-2024
        * `2024-2025` - 2024-2025
        * `2025-2026` - 2025-2026
        * `2026-2027` - 2026-2027
    Achievement:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        title:
          type: string
          maxLength: 255
        category:
          $ref: '#/components/schemas/CategoryEnum'
        description:
          type: string
          nullable: true
        issuer_or_organizer:
          type: string
          nullable: true
          maxLength: 255
        location:
          type: string
          nullable: true
          maxLength: 255
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        achieved_on:
          type: string
          format: date
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        certificate_file:
          type: string
          format: uri
          nullable: true
        metadata: {}
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - category
      - created_at
      - id
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - title
      - updated_at
    ActionItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        priority:
          $ref: '#/components/schemas/Priority1baEnum'
        status:
          $ref: '#/components/schemas/ActionItemStatusEnum'
        mentorship:
          type: string
          format: uuid
        meeting:
          type: string
          format: uuid
          nullable: true
        assigned_to_user:
          type: string
          format: uuid
          nullable: true
        created_by:
          type: string
          format: uuid
          nullable: true
      required:
      - created_at
      - id
      - mentorship
      - title
      - updated_at
    ActionItemStatusEnum:
      enum:
      - OPEN
      - IN_PROGRESS
      - BLOCKED
      - DONE
      - CANCELLED
      type: string
      description: |-
        * `OPEN` - Open
        * `IN_PROGRESS` - In Progress
        * `BLOCKED` - Blocked
        * `DONE` - Done
        * `CANCELLED` - Cancelled
    AlumniPlacement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        student_id:
          type: string
          format: uuid
          writeOnly: true
        current_company:
          type: string
          maxLength: 255
        current_designation:
          type: string
          maxLength: 255
        current_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        current_location:
          type: string
          maxLength: 255
        total_experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        job_changes:
          type: integer
          maximum: 2147483647
          minimum: 0
        pursuing_higher_studies:
          type: boolean
        higher_studies_institution:
          type: string
          maxLength: 255
        higher_studies_program:
          type: string
          maxLength: 255
        is_entrepreneur:
          type: boolean
        startup_name:
          type: string
          maxLength: 255
        startup_description:
          type: string
        linkedin_profile:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 30
        willing_to_mentor:
          type: boolean
        willing_to_recruit:
          type: boolean
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - last_updated
      - student
      - student_id
    AnnouncementTypeEnum:
      enum:
      - GENERAL
      - ACADEMIC
      - EVENT
      - DEADLINE
      - EMERGENCY
      - MAINTENANCE
      type: string
      description: |-
        * `GENERAL` - General
        * `ACADEMIC` - Academic
        * `EVENT` - Event
        * `DEADLINE` - Deadline
        * `EMERGENCY` - Emergency
        * `MAINTENANCE` - Maintenance
    Application:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        student_id:
          type: string
          format: uuid
          writeOnly: true
        job:
          allOf:
          - $ref: '#/components/schemas/JobPosting'
          readOnly: true
        job_id:
          type: integer
          writeOnly: true
        drive_id:
          type: integer
          writeOnly: true
          nullable: true
        resume:
          type: string
          format: uri
          nullable: true
        cover_letter:
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        applied_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
      required:
      - applied_at
      - id
      - job
      - job_id
      - student
      - student_id
      - updated_at
    ApplicationStatusEnum:
      enum:
      - APPLIED
      - UNDER_REVIEW
      - INTERVIEW
      - OFFERED
      - REJECTED
      - WITHDRAWN
      - HIRED
      type: string
      description: |-
        * `APPLIED` - Applied
        * `UNDER_REVIEW` - Under Review
        * `INTERVIEW` - Interview
        * `OFFERED` - Offered
        * `REJECTED` - Rejected
        * `WITHDRAWN` - Withdrawn
        * `HIRED` - Hired
    Assignment:
      type: object
      description: Serializer for Assignment model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        instructions:
          type: string
          nullable: true
        category:
          type: string
          format: uuid
          nullable: true
        category_name:
          type: string
          readOnly: true
        faculty:
          type: string
          format: uuid
        faculty_name:
          type: string
          readOnly: true
        faculty_id:
          type: string
          readOnly: true
        assignment_type:
          $ref: '#/components/schemas/AssignmentTypeEnum'
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date-time
        late_submission_allowed:
          type: boolean
        late_penalty_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Percentage penalty for late submissions (0-100)
        status:
          $ref: '#/components/schemas/StatusD19Enum'
        is_group_assignment:
          type: boolean
        max_group_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum group size for group assignments
        is_apaar_compliant:
          type: boolean
          description: Compliant with AP Academic Assessment and Accreditation Requirements
        requires_plagiarism_check:
          type: boolean
          description: Requires plagiarism detection check
        plagiarism_threshold:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Maximum allowed similarity percentage (0-100)
        rubric:
          type: string
          format: uuid
          nullable: true
          description: Grading rubric for this assignment
        rubric_name:
          type: string
          readOnly: true
        enable_peer_review:
          type: boolean
          description: Enable peer review for this assignment
        peer_review_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Weight of peer review in final grade (0-100)
        learning_objectives:
          type: string
          nullable: true
          description: Learning objectives for this assignment
        estimated_time_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Estimated time to complete in hours
        submission_reminder_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days before due date to send reminder
        academic_year:
          type: integer
          nullable: true
          description: Academic year for this assignment
        academic_year_name:
          type: string
          readOnly: true
        semester:
          type: integer
          nullable: true
          description: Semester for this assignment
        semester_name:
          type: string
          readOnly: true
        assigned_to_programs:
          type: array
          items:
            type: integer
          description: Academic programs this assignment is assigned to
        assigned_to_programs_names:
          type: array
          items:
            type: string
          readOnly: true
        assigned_to_departments:
          type: array
          items:
            type: string
            format: uuid
          description: Departments this assignment is assigned to
        assigned_to_departments_names:
          type: array
          items:
            type: string
          readOnly: true
        assigned_to_courses:
          type: array
          items:
            type: integer
          description: Courses this assignment is assigned to
        assigned_to_courses_names:
          type: array
          items:
            type: string
          readOnly: true
        assigned_to_course_sections:
          type: array
          items:
            type: integer
          description: Course sections this assignment is assigned to
        assigned_to_course_sections_names:
          type: array
          items:
            type: string
          readOnly: true
        assigned_to_students:
          type: array
          items:
            type: string
            format: uuid
          description: Specific students this assignment is assigned to
        assigned_to_students_names:
          type: array
          items:
            type: string
          readOnly: true
        attachment_files:
          description: List of file information for assignment attachments
        files:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentFile'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentComment'
          readOnly: true
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentSubmission'
          readOnly: true
        submission_count:
          type: integer
          readOnly: true
        graded_count:
          type: integer
          readOnly: true
        is_overdue:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year_name
      - assigned_to_course_sections_names
      - assigned_to_courses_names
      - assigned_to_departments_names
      - assigned_to_programs_names
      - assigned_to_students_names
      - category_name
      - comments
      - created_at
      - description
      - due_date
      - faculty
      - faculty_id
      - faculty_name
      - files
      - graded_count
      - id
      - is_overdue
      - max_marks
      - rubric_name
      - semester_name
      - submission_count
      - submissions
      - title
      - updated_at
    AssignmentCategory:
      type: object
      description: Serializer for AssignmentCategory model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        color_code:
          type: string
          description: Hex color code
          maxLength: 7
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    AssignmentComment:
      type: object
      description: Serializer for AssignmentComment model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        author:
          type: string
          format: uuid
          readOnly: true
        author_name:
          type: string
          readOnly: true
        content:
          type: string
        comment_type:
          $ref: '#/components/schemas/CommentTypeEnum'
        parent_comment:
          type: string
          format: uuid
          nullable: true
        replies:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - author
      - author_name
      - content
      - created_at
      - id
      - replies
      - updated_at
    AssignmentCreate:
      type: object
      description: Serializer for creating Assignment
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        instructions:
          type: string
          nullable: true
        category:
          type: string
          format: uuid
          nullable: true
        assignment_type:
          $ref: '#/components/schemas/AssignmentTypeEnum'
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date-time
        late_submission_allowed:
          type: boolean
        late_penalty_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Percentage penalty for late submissions (0-100)
        is_group_assignment:
          type: boolean
        max_group_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum group size for group assignments
        is_apaar_compliant:
          type: boolean
          description: Compliant with AP Academic Assessment and Accreditation Requirements
        requires_plagiarism_check:
          type: boolean
          description: Requires plagiarism detection check
        plagiarism_threshold:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Maximum allowed similarity percentage (0-100)
        rubric:
          type: string
          format: uuid
          nullable: true
          description: Grading rubric for this assignment
        enable_peer_review:
          type: boolean
          description: Enable peer review for this assignment
        peer_review_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Weight of peer review in final grade (0-100)
        learning_objectives:
          type: string
          nullable: true
          description: Learning objectives for this assignment
        estimated_time_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Estimated time to complete in hours
        submission_reminder_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days before due date to send reminder
        academic_year:
          type: integer
          nullable: true
          description: Academic year for this assignment
        semester:
          type: integer
          nullable: true
          description: Semester for this assignment
        assigned_to_programs:
          type: array
          items:
            type: integer
          description: Academic programs this assignment is assigned to
        assigned_to_departments:
          type: array
          items:
            type: string
            format: uuid
          description: Departments this assignment is assigned to
        assigned_to_courses:
          type: array
          items:
            type: integer
          description: Courses this assignment is assigned to
        assigned_to_course_sections:
          type: array
          items:
            type: integer
          description: Course sections this assignment is assigned to
        assigned_to_students:
          type: array
          items:
            type: string
            format: uuid
          description: Specific students this assignment is assigned to
        attachment_files:
          description: List of file information for assignment attachments
      required:
      - description
      - due_date
      - max_marks
      - title
    AssignmentFile:
      type: object
      description: Serializer for AssignmentFile model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file_name:
          type: string
          maxLength: 255
        file_path:
          type: string
          format: uri
          pattern: (?:pdf|doc|docx|txt|jpg|jpeg|png|gif|zip|rar)$
        file_url:
          type: string
          readOnly: true
        file_type:
          $ref: '#/components/schemas/FileTypeEnum'
        file_size:
          type: integer
          readOnly: true
          description: File size in bytes
        file_size_mb:
          type: string
          readOnly: true
        mime_type:
          type: string
          nullable: true
          maxLength: 100
        uploaded_by:
          type: string
          format: uuid
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - file_name
      - file_path
      - file_size
      - file_size_mb
      - file_type
      - file_url
      - id
      - updated_at
      - uploaded_at
      - uploaded_by
    AssignmentGrade:
      type: object
      description: Serializer for AssignmentGrade model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        marks_obtained:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        out_of_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
        percentage:
          type: string
          readOnly: true
        grade_letter:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GradeLetterEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        feedback:
          type: string
          nullable: true
        graded_by:
          type: string
          format: uuid
        graded_by_name:
          type: string
          readOnly: true
        graded_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - graded_at
      - graded_by
      - graded_by_name
      - id
      - marks_obtained
      - out_of_marks
      - percentage
      - updated_at
    AssignmentLearningOutcome:
      type: object
      description: Serializer for AssignmentLearningOutcome model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        assignment_title:
          type: string
          readOnly: true
        outcome_code:
          type: string
          description: Learning outcome code (e.g., LO1, LO2)
          maxLength: 20
        description:
          type: string
          description: Description of the learning outcome
        bloom_level:
          $ref: '#/components/schemas/BloomLevelEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Weight of this outcome in the assignment (0-100)
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - assignment_title
      - bloom_level
      - created_at
      - description
      - id
      - outcome_code
      - updated_at
    AssignmentNotification:
      type: object
      description: Serializer for AssignmentNotification model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        assignment_title:
          type: string
          readOnly: true
        recipient:
          type: string
          format: uuid
        recipient_name:
          type: string
          readOnly: true
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        title:
          type: string
          maxLength: 200
        message:
          type: string
        is_read:
          type: boolean
        read_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        context_data:
          description: Additional context data for the notification
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - assignment_title
      - created_at
      - id
      - message
      - notification_type
      - read_at
      - recipient
      - recipient_name
      - title
      - updated_at
    AssignmentPeerReview:
      type: object
      description: Serializer for AssignmentPeerReview model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        assignment_title:
          type: string
          readOnly: true
        reviewer:
          type: string
          format: uuid
        reviewer_name:
          type: string
          readOnly: true
        reviewee:
          type: string
          format: uuid
        reviewee_name:
          type: string
          readOnly: true
        submission:
          type: string
          format: uuid
        content_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Rating for content quality (1-5)
        clarity_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Rating for clarity (1-5)
        creativity_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Rating for creativity (1-5)
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Overall rating (1-5)
        strengths:
          type: string
          description: What the student did well
        improvements:
          type: string
          description: Areas for improvement
        additional_comments:
          type: string
          nullable: true
        is_completed:
          type: boolean
        submitted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - assignment_title
      - clarity_rating
      - content_rating
      - created_at
      - creativity_rating
      - id
      - improvements
      - overall_rating
      - reviewee
      - reviewee_name
      - reviewer
      - reviewer_name
      - strengths
      - submission
      - submitted_at
      - updated_at
    AssignmentPlagiarismCheck:
      type: object
      description: Serializer for AssignmentPlagiarismCheck model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        submission:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        assignment_title:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/AssignmentPlagiarismCheckStatusEnum'
        similarity_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Percentage of similarity detected
        sources:
          description: List of potential sources with similarity percentages
        checked_at:
          type: string
          format: date-time
          readOnly: true
        checked_by:
          type: string
          format: uuid
          nullable: true
        checked_by_name:
          type: string
          readOnly: true
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment_title
      - checked_at
      - checked_by_name
      - created_at
      - id
      - student_name
      - submission
      - updated_at
    AssignmentPlagiarismCheckStatusEnum:
      enum:
      - PENDING
      - CLEAN
      - SUSPICIOUS
      - PLAGIARIZED
      type: string
      description: |-
        * `PENDING` - Pending
        * `CLEAN` - No Plagiarism Detected
        * `SUSPICIOUS` - Suspicious Content
        * `PLAGIARIZED` - Plagiarism Detected
    AssignmentRubric:
      type: object
      description: Serializer for AssignmentRubric model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        rubric_type:
          $ref: '#/components/schemas/RubricTypeEnum'
        criteria:
          description: List of rubric criteria with descriptions and point values
        total_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        created_by:
          type: string
          format: uuid
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Available to all faculty
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - created_by_name
      - description
      - id
      - name
      - total_points
      - updated_at
    AssignmentRubricGrade:
      type: object
      description: Serializer for AssignmentRubricGrade model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        submission:
          type: string
          format: uuid
        rubric:
          type: string
          format: uuid
        criteria_scores:
          description: Scores for each rubric criterion
        total_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        feedback:
          type: string
          nullable: true
        graded_by:
          type: string
          format: uuid
        graded_by_name:
          type: string
          readOnly: true
        graded_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - graded_at
      - graded_by
      - graded_by_name
      - id
      - rubric
      - submission
      - total_score
      - updated_at
    AssignmentSchedule:
      type: object
      description: Serializer for AssignmentSchedule model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        template:
          type: string
          format: uuid
        template_name:
          type: string
          readOnly: true
        schedule_type:
          $ref: '#/components/schemas/ScheduleTypeEnum'
        interval_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Interval in days for custom schedules
        target_programs:
          type: array
          items:
            type: integer
        target_departments:
          type: array
          items:
            type: string
            format: uuid
        target_courses:
          type: array
          items:
            type: integer
        is_active:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
        last_run:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        next_run:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - created_by_name
      - id
      - last_run
      - name
      - next_run
      - schedule_type
      - start_date
      - template
      - template_name
      - updated_at
    AssignmentSubmission:
      type: object
      description: Serializer for AssignmentSubmission model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_id:
          type: string
          readOnly: true
        content:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          description: Additional notes from student
        status:
          $ref: '#/components/schemas/AssignmentSubmissionStatusEnum'
        submission_date:
          type: string
          format: date-time
          readOnly: true
        is_late:
          type: boolean
          readOnly: true
        attachment_files:
          description: List of file information for submission attachments
        files:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentFile'
          readOnly: true
        grade:
          allOf:
          - $ref: '#/components/schemas/AssignmentGrade'
          readOnly: true
        feedback:
          type: string
          nullable: true
        graded_by:
          type: string
          format: uuid
          nullable: true
        graded_by_name:
          type: string
          readOnly: true
        graded_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - created_at
      - files
      - grade
      - graded_at
      - graded_by_name
      - id
      - is_late
      - student
      - student_id
      - student_name
      - submission_date
      - updated_at
    AssignmentSubmissionCreate:
      type: object
      description: Serializer for creating AssignmentSubmission
      properties:
        assignment:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          description: Additional notes from student
        attachment_files:
          description: List of file information for submission attachments
      required:
      - assignment
    AssignmentSubmissionStatusEnum:
      enum:
      - SUBMITTED
      - DRAFT
      - LATE
      - RESUBMITTED
      type: string
      description: |-
        * `SUBMITTED` - Submitted
        * `DRAFT` - Draft
        * `LATE` - Late Submission
        * `RESUBMITTED` - Resubmitted
    AssignmentTemplate:
      type: object
      description: Serializer for AssignmentTemplate model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        instructions:
          type: string
          nullable: true
        category:
          type: string
          format: uuid
          nullable: true
        category_name:
          type: string
          readOnly: true
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        is_group_assignment:
          type: boolean
        max_group_size:
          type: integer
          maximum: 2147483647
          minimum: 0
        template_data:
          description: Additional template configuration data
        created_by:
          type: string
          format: uuid
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Available to all faculty
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category_name
      - created_at
      - created_by
      - created_by_name
      - description
      - id
      - max_marks
      - name
      - updated_at
    AssignmentTemplateCreate:
      type: object
      description: Serializer for creating AssignmentTemplate
      properties:
        name:
          type: string
          maxLength: 200
        description:
          type: string
        instructions:
          type: string
          nullable: true
        category:
          type: string
          format: uuid
          nullable: true
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        is_group_assignment:
          type: boolean
        max_group_size:
          type: integer
          maximum: 2147483647
          minimum: 0
        template_data:
          description: Additional template configuration data
        is_public:
          type: boolean
          description: Available to all faculty
      required:
      - description
      - max_marks
      - name
    AssignmentTypeEnum:
      enum:
      - HOMEWORK
      - PROJECT
      - LAB_ASSIGNMENT
      - RESEARCH_PAPER
      - PRESENTATION
      - QUIZ
      - EXAM
      - PEER_REVIEW
      - PORTFOLIO
      - FIELD_WORK
      type: string
      description: |-
        * `HOMEWORK` - Homework
        * `PROJECT` - Project
        * `LAB_ASSIGNMENT` - Lab Assignment
        * `RESEARCH_PAPER` - Research Paper
        * `PRESENTATION` - Presentation
        * `QUIZ` - Quiz
        * `EXAM` - Exam
        * `PEER_REVIEW` - Peer Review
        * `PORTFOLIO` - Portfolio
        * `FIELD_WORK` - Field Work
    AttendanceRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        session:
          type: integer
        student:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/AttendanceRecordStatusEnum'
        check_in_time:
          type: string
          format: date-time
          nullable: true
        remarks:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - session
      - student
      - updated_at
    AttendanceRecordStatusEnum:
      enum:
      - PRESENT
      - ABSENT
      - LATE
      - EXCUSED
      type: string
      description: |-
        * `PRESENT` - Present
        * `ABSENT` - Absent
        * `LATE` - Late
        * `EXCUSED` - Excused
    AttendanceSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_section:
          type: integer
        timetable:
          type: integer
          nullable: true
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        room:
          type: string
          maxLength: 50
        is_cancelled:
          type: boolean
        notes:
          type: string
        records:
          type: array
          items:
            $ref: '#/components/schemas/AttendanceRecord'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course_section
      - created_at
      - date
      - end_time
      - id
      - records
      - start_time
      - updated_at
    AttendeeTypeEnum:
      enum:
      - STUDENT
      - FACULTY
      - STAFF
      - GUEST
      - ALUMNI
      type: string
      description: |-
        * `STUDENT` - Student
        * `FACULTY` - Faculty
        * `STAFF` - Staff
        * `GUEST` - Guest
        * `ALUMNI` - Alumni
    BatchCourseEnrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_section:
          type: string
          readOnly: true
        academic_year:
          type: string
          description: Academic year for enrollment
          maxLength: 9
        semester:
          type: string
          description: Semester for enrollment
          maxLength: 20
        enrollment_date:
          type: string
          format: date
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusA19Enum'
        auto_enroll_new_students:
          type: boolean
          description: Automatically enroll new students added to this batch
        notes:
          type: string
          description: Additional notes
        enrolled_students_count:
          type: string
          readOnly: true
        batch_students_count:
          type: string
          readOnly: true
        enrollment_percentage:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - batch_students_count
      - course
      - course_section
      - created_at
      - created_by
      - enrolled_students_count
      - enrollment_date
      - enrollment_percentage
      - id
      - semester
      - student_batch
      - updated_at
    BatchCourseEnrollmentCreate:
      type: object
      properties:
        student_batch:
          type: integer
          description: Student batch to enroll
        course:
          type: integer
          description: Course to enroll the batch in
        course_section:
          type: integer
          nullable: true
          description: Specific course section (optional)
        academic_year:
          type: string
          nullable: true
        semester:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusA19Enum'
        auto_enroll_new_students:
          type: boolean
          description: Automatically enroll new students added to this batch
        notes:
          type: string
          description: Additional notes
      required:
      - course
      - student_batch
    BatchCourseEnrollmentDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_section:
          type: string
          readOnly: true
        academic_year:
          type: string
          description: Academic year for enrollment
          maxLength: 9
        semester:
          type: string
          description: Semester for enrollment
          maxLength: 20
        enrollment_date:
          type: string
          format: date
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusA19Enum'
        auto_enroll_new_students:
          type: boolean
          description: Automatically enroll new students added to this batch
        notes:
          type: string
          description: Additional notes
        enrolled_students_count:
          type: string
          readOnly: true
        batch_students_count:
          type: string
          readOnly: true
        enrollment_percentage:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        enrolled_students:
          type: string
          readOnly: true
      required:
      - academic_year
      - batch_students_count
      - course
      - course_section
      - created_at
      - created_by
      - enrolled_students
      - enrolled_students_count
      - enrollment_date
      - enrollment_percentage
      - id
      - semester
      - student_batch
      - updated_at
    BlankEnum:
      enum:
      - ''
    BloomLevelEnum:
      enum:
      - REMEMBER
      - UNDERSTAND
      - APPLY
      - ANALYZE
      - EVALUATE
      - CREATE
      type: string
      description: |-
        * `REMEMBER` - Remember
        * `UNDERSTAND` - Understand
        * `APPLY` - Apply
        * `ANALYZE` - Analyze
        * `EVALUATE` - Evaluate
        * `CREATE` - Create
    BulkAssignment:
      type: object
      description: Serializer for Bulk Assignment operations
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        operation_type:
          $ref: '#/components/schemas/OperationTypeEnum'
        title:
          type: string
          description: Operation title
          maxLength: 200
        description:
          type: string
          nullable: true
          description: Operation description
        criteria:
          description: Selection criteria
        assignment_data:
          description: Assignment data
        total_students_found:
          type: integer
          readOnly: true
        students_updated:
          type: integer
          readOnly: true
        students_failed:
          type: integer
          readOnly: true
        errors:
          readOnly: true
        warnings:
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/BulkAssignmentStatusEnum'
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        success_rate:
          type: string
          readOnly: true
        duration:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - completed_at
      - created_at
      - created_by_name
      - duration
      - errors
      - id
      - operation_type
      - started_at
      - status
      - students_failed
      - students_updated
      - success_rate
      - title
      - total_students_found
      - updated_at
      - warnings
    BulkAssignmentStatusEnum:
      enum:
      - PENDING
      - PROCESSING
      - COMPLETED
      - FAILED
      - PARTIAL
      type: string
      description: |-
        * `PENDING` - Pending
        * `PROCESSING` - Processing
        * `COMPLETED` - Completed
        * `FAILED` - Failed
        * `PARTIAL` - Partially Completed
    CategoryEnum:
      enum:
      - AWARD
      - CERTIFICATION
      - PUBLICATION
      - PROJECT
      - PATENT
      - SPORTS
      - VOLUNTEER
      - OTHER
      type: string
      description: |-
        * `AWARD` - Award
        * `CERTIFICATION` - Certification
        * `PUBLICATION` - Publication
        * `PROJECT` - Project
        * `PATENT` - Patent
        * `SPORTS` - Sports / Co-curricular
        * `VOLUNTEER` - Volunteer
        * `OTHER` - Other
    ClassificationEnum:
      enum:
      - FIRST_CLASS_DISTINCTION
      - FIRST_CLASS
      - SECOND_CLASS
      - PASS_CLASS
      - FAIL
      type: string
      description: |-
        * `FIRST_CLASS_DISTINCTION` - First Class with Distinction (CGPA ≥ 8.0)
        * `FIRST_CLASS` - First Class (CGPA ≥ 7.0)
        * `SECOND_CLASS` - Second Class (CGPA ≥ 6.0)
        * `PASS_CLASS` - Pass Class (CGPA ≥ 4.0)
        * `FAIL` - Fail (CGPA < 4.0)
    Collaboration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          allOf:
          - $ref: '#/components/schemas/Project'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
        partner_institution:
          type: string
          maxLength: 255
        contact_person:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
      required:
      - id
      - partner_institution
      - project
      - project_id
    CommentTypeEnum:
      enum:
      - GENERAL
      - CLARIFICATION
      - FEEDBACK
      - QUESTION
      - ANNOUNCEMENT
      type: string
      description: |-
        * `GENERAL` - General Comment
        * `CLARIFICATION` - Clarification
        * `FEEDBACK` - Feedback
        * `QUESTION` - Question
        * `ANNOUNCEMENT` - Announcement
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
        industry:
          type: string
          maxLength: 100
        company_size:
          oneOf:
          - $ref: '#/components/schemas/CompanySizeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        headquarters:
          type: string
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 30
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          readOnly: true
        total_placements:
          type: integer
          readOnly: true
        total_drives:
          type: integer
          readOnly: true
        last_visit_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - rating
      - total_drives
      - total_placements
      - updated_at
    CompanyFeedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
        drive:
          allOf:
          - $ref: '#/components/schemas/PlacementDrive'
          readOnly: true
        drive_id:
          type: integer
          writeOnly: true
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
        student_quality_rating:
          type: integer
          maximum: 5
          minimum: 1
        process_rating:
          type: integer
          maximum: 5
          minimum: 1
        infrastructure_rating:
          type: integer
          maximum: 5
          minimum: 1
        positive_feedback:
          type: string
        areas_for_improvement:
          type: string
        suggestions:
          type: string
        would_visit_again:
          type: boolean
        feedback_by:
          type: string
          maxLength: 255
        feedback_by_designation:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - company_id
      - created_at
      - drive
      - drive_id
      - id
      - infrastructure_rating
      - overall_rating
      - process_rating
      - student_quality_rating
    CompanySizeEnum:
      enum:
      - STARTUP
      - SMALL
      - MEDIUM
      - LARGE
      - ENTERPRISE
      type: string
      description: |-
        * `STARTUP` - Startup (1-50 employees)
        * `SMALL` - Small (51-200 employees)
        * `MEDIUM` - Medium (201-1000 employees)
        * `LARGE` - Large (1001-5000 employees)
        * `ENTERPRISE` - Enterprise (5000+ employees)
    ContractualFullTimePartTimeEnum:
      enum:
      - FULL_TIME
      - PART_TIME
      type: string
      description: |-
        * `FULL_TIME` - Full Time
        * `PART_TIME` - Part Time
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: Course code (e.g., CS101)
          maxLength: 20
        title:
          type: string
          description: Course title
          maxLength: 200
        description:
          type: string
          description: Course description
        level:
          $ref: '#/components/schemas/LevelEnum'
        credits:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Credit hours
        duration_weeks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in weeks
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum number of students per section
        prerequisites:
          type: array
          items:
            type: string
          readOnly: true
        department:
          type: string
          readOnly: true
        programs:
          type: array
          items:
            type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEf3Enum'
        enrolled_students_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - created_at
      - department
      - description
      - enrolled_students_count
      - id
      - prerequisites
      - programs
      - title
      - updated_at
    CourseCreate:
      type: object
      properties:
        code:
          type: string
          description: Course code (e.g., CS101)
          maxLength: 20
        title:
          type: string
          description: Course title
          maxLength: 200
        description:
          type: string
          description: Course description
        level:
          $ref: '#/components/schemas/LevelEnum'
        credits:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Credit hours
        duration_weeks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in weeks
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum number of students per section
        prerequisites:
          type: array
          items:
            type: integer
          description: Prerequisite courses
        department:
          type: string
          format: uuid
          nullable: true
        programs:
          type: array
          items:
            type: integer
          description: Programs this course belongs to
        status:
          $ref: '#/components/schemas/StatusEf3Enum'
      required:
      - code
      - description
      - programs
      - title
    CourseDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: Course code (e.g., CS101)
          maxLength: 20
        title:
          type: string
          description: Course title
          maxLength: 200
        description:
          type: string
          description: Course description
        level:
          $ref: '#/components/schemas/LevelEnum'
        credits:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Credit hours
        duration_weeks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in weeks
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum number of students per section
        prerequisites:
          type: array
          items:
            type: string
          readOnly: true
        department:
          type: string
          readOnly: true
        programs:
          type: array
          items:
            type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEf3Enum'
        enrolled_students_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        syllabus:
          allOf:
          - $ref: '#/components/schemas/Syllabus'
          readOnly: true
        timetables:
          type: array
          items:
            $ref: '#/components/schemas/Timetable'
          readOnly: true
        enrollments:
          type: array
          items:
            $ref: '#/components/schemas/CourseEnrollment'
          readOnly: true
      required:
      - code
      - created_at
      - department
      - description
      - enrolled_students_count
      - enrollments
      - id
      - prerequisites
      - programs
      - syllabus
      - timetables
      - title
      - updated_at
    CourseEnrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        course:
          type: string
          readOnly: true
        course_section:
          allOf:
          - $ref: '#/components/schemas/CourseSection'
          readOnly: true
        student_batch:
          type: string
          readOnly: true
        academic_year:
          type: string
          readOnly: true
        semester:
          type: string
          readOnly: true
        section_number:
          type: string
          readOnly: true
        enrollment_date:
          type: string
          format: date
          readOnly: true
        status:
          $ref: '#/components/schemas/Status917Enum'
        grade:
          type: string
          description: Final grade (e.g., A, B+, C)
          maxLength: 5
        grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          nullable: true
          description: Grade points
        attendance_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Attendance percentage
        enrollment_type:
          $ref: '#/components/schemas/EnrollmentTypeEnum'
        notes:
          type: string
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - course
      - course_section
      - created_at
      - enrollment_date
      - id
      - section_number
      - semester
      - student
      - student_batch
      - updated_at
    CourseEnrollmentCreate:
      type: object
      properties:
        student:
          type: string
          format: uuid
        course_section:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/Status917Enum'
        grade:
          type: string
          description: Final grade (e.g., A, B+, C)
          maxLength: 5
        grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          nullable: true
          description: Grade points
        attendance_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Attendance percentage
        enrollment_type:
          $ref: '#/components/schemas/EnrollmentTypeEnum'
        notes:
          type: string
          description: Additional notes
      required:
      - student
    CoursePrerequisite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        prerequisite_course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        is_mandatory:
          type: boolean
          description: Whether this prerequisite is mandatory
        minimum_grade:
          type: string
          description: Minimum grade required (e.g., C, B+)
          maxLength: 5
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course
      - created_at
      - id
      - prerequisite_course
      - student_batch
    CoursePrerequisiteCreate:
      type: object
      properties:
        course:
          type: integer
          description: Course that has prerequisites
        prerequisite_course:
          type: integer
          description: Prerequisite course
        student_batch:
          type: integer
          nullable: true
          description: Specific batch (null means applies to all batches)
        is_mandatory:
          type: boolean
          description: Whether this prerequisite is mandatory
        minimum_grade:
          type: string
          description: Minimum grade required (e.g., C, B+)
          maxLength: 5
      required:
      - course
      - prerequisite_course
    CourseSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        section_number:
          type: string
          readOnly: true
        section_type:
          $ref: '#/components/schemas/SectionTypeEnum'
        section_type_display:
          type: string
          readOnly: true
        faculty:
          type: string
          readOnly: true
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum students for this section (optional)
        current_enrollment:
          type: integer
          readOnly: true
          description: Current number of enrolled students (optional)
        available_seats:
          type: string
          readOnly: true
        academic_year:
          type: string
          readOnly: true
        semester:
          type: string
          readOnly: true
        is_active:
          type: boolean
        notes:
          type: string
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - available_seats
      - course
      - created_at
      - current_enrollment
      - faculty
      - id
      - section_number
      - section_type_display
      - semester
      - student_batch
      - updated_at
    CourseSectionCreate:
      type: object
      properties:
        course:
          type: integer
        student_batch:
          type: integer
          nullable: true
          description: Student batch assigned to this section
        section_type:
          $ref: '#/components/schemas/SectionTypeEnum'
        faculty:
          type: string
          format: uuid
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum students for this section (optional)
        current_enrollment:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Current number of enrolled students (optional)
        is_active:
          type: boolean
        notes:
          type: string
          description: Additional notes
      required:
      - course
      - faculty
    CumulativeGPA:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          format: uuid
        cgpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
          description: Cumulative Grade Point Average
        total_credits_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total credits earned across all semesters
        total_quality_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total quality points earned
        classification:
          oneOf:
          - $ref: '#/components/schemas/ClassificationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        is_eligible_for_graduation:
          type: boolean
        graduation_date:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - student
      - updated_at
    CustomField:
      type: object
      description: Serializer for CustomField model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        label:
          type: string
          maxLength: 200
        field_type:
          $ref: '#/components/schemas/FieldTypeEnum'
        required:
          type: boolean
        default_value:
          type: string
          nullable: true
        choices:
          type: string
          nullable: true
          description: Comma-separated choices for choice fields
        help_text:
          type: string
          nullable: true
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - created_at
      - field_type
      - id
      - label
      - name
      - updated_at
    CustomFieldCreate:
      type: object
      description: Serializer for creating custom fields
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        label:
          type: string
          maxLength: 200
        field_type:
          $ref: '#/components/schemas/FieldTypeEnum'
        required:
          type: boolean
        default_value:
          type: string
          nullable: true
        choices:
          type: string
          nullable: true
          description: Comma-separated choices for choice fields
        help_text:
          type: string
          nullable: true
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - created_at
      - field_type
      - id
      - label
      - name
      - updated_at
    CustomFieldTypeEnum:
      enum:
      - text
      - number
      - date
      - email
      - phone
      - select
      - multiselect
      - boolean
      - textarea
      - file
      - url
      type: string
      description: |-
        * `text` - Text
        * `number` - Number
        * `date` - Date
        * `email` - Email
        * `phone` - Phone
        * `select` - Select (Dropdown)
        * `multiselect` - Multi-Select
        * `boolean` - Yes/No
        * `textarea` - Long Text
        * `file` - File Upload
        * `url` - URL
    CustomFieldValue:
      type: object
      description: Serializer for CustomFieldValue model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        custom_field:
          allOf:
          - $ref: '#/components/schemas/CustomField'
          readOnly: true
        custom_field_id:
          type: string
          format: uuid
          writeOnly: true
        value:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - custom_field
      - custom_field_id
      - id
      - updated_at
    CustomFieldValueCreate:
      type: object
      description: Serializer for creating custom field values
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        value:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
        custom_field:
          type: string
          format: uuid
      required:
      - created_at
      - custom_field
      - faculty
      - id
      - updated_at
    Dataset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        project_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        storage_url:
          type: string
          format: uri
          maxLength: 200
        is_public:
          type: boolean
      required:
      - id
      - name
      - projects
    DayOfWeekC1fEnum:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
      description: |-
        * `MONDAY` - Monday
        * `TUESDAY` - Tuesday
        * `WEDNESDAY` - Wednesday
        * `THURSDAY` - Thursday
        * `FRIDAY` - Friday
        * `SATURDAY` - Saturday
        * `SUNDAY` - Sunday
    DayOfWeekCa4Enum:
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
      type: string
      description: |-
        * `MON` - Monday
        * `TUE` - Tuesday
        * `WED` - Wednesday
        * `THU` - Thursday
        * `FRI` - Friday
        * `SAT` - Saturday
        * `SUN` - Sunday
    Department:
      type: object
      description: Serializer for Department model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Full department name
          maxLength: 200
        short_name:
          type: string
          description: Short name or abbreviation (e.g., CS, ME, EE)
          maxLength: 50
        code:
          type: string
          description: Department code for system use (e.g., CS001, ME002)
          maxLength: 10
        department_type:
          allOf:
          - $ref: '#/components/schemas/DepartmentTypeEnum'
          description: |-
            Type of department

            * `ACADEMIC` - Academic Department
            * `ADMINISTRATIVE` - Administrative Department
            * `RESEARCH` - Research Department
            * `SERVICE` - Service Department
            * `SUPPORT` - Support Department
        parent_department:
          type: string
          format: uuid
          nullable: true
          description: Parent department if this is a sub-department
        parent_department_name:
          type: string
          readOnly: true
        head_of_department:
          type: string
          format: uuid
          nullable: true
          description: Current head of department
        head_of_department_name:
          type: string
          readOnly: true
        deputy_head:
          type: string
          format: uuid
          nullable: true
          description: Deputy head of department
        deputy_head_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Department email address
          maxLength: 254
        phone:
          type: string
          description: Department phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        fax:
          type: string
          nullable: true
          description: Department fax number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        building:
          type: string
          description: Building name or number
          maxLength: 100
        floor:
          type: string
          nullable: true
          description: Floor number or name
          maxLength: 20
        room_number:
          type: string
          nullable: true
          description: Room number
          maxLength: 20
        address_line1:
          type: string
          nullable: true
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          description: Address line 2
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          nullable: true
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        established_date:
          type: string
          format: date
          description: Date when department was established
        accreditation_status:
          type: string
          nullable: true
          description: Accreditation status (e.g., NAAC, NBA)
          maxLength: 50
        accreditation_valid_until:
          type: string
          format: date
          nullable: true
          description: Accreditation valid until date
        description:
          type: string
          description: Department description and overview
        mission:
          type: string
          nullable: true
          description: Department mission statement
        vision:
          type: string
          nullable: true
          description: Department vision statement
        objectives:
          type: string
          nullable: true
          description: Department objectives
        max_faculty_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum faculty capacity
        max_student_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum student capacity
        current_faculty_count:
          type: integer
          readOnly: true
          description: Current faculty count
        current_student_count:
          type: integer
          readOnly: true
          description: Current student count
        faculty_utilization_percentage:
          type: string
          readOnly: true
        student_utilization_percentage:
          type: string
          readOnly: true
        annual_budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          nullable: true
          description: Annual budget in local currency
        budget_year:
          type: string
          nullable: true
          description: Budget year (e.g., 2024-2025)
          maxLength: 9
        status:
          $ref: '#/components/schemas/StatusD49Enum'
        is_active:
          type: boolean
          description: Whether department is currently active
        website_url:
          type: string
          format: uri
          nullable: true
          description: Department website URL
          maxLength: 200
        social_media_links:
          description: Social media links (JSON format)
        logo:
          type: string
          format: uri
          nullable: true
          description: Department logo
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        updated_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - building
      - code
      - created_at
      - created_by_name
      - current_faculty_count
      - current_student_count
      - deputy_head_name
      - description
      - email
      - established_date
      - faculty_utilization_percentage
      - full_address
      - head_of_department_name
      - id
      - name
      - parent_department_name
      - phone
      - short_name
      - student_utilization_percentage
      - updated_at
      - updated_by_name
    DepartmentAnnouncement:
      type: object
      description: Serializer for DepartmentAnnouncement model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        title:
          type: string
          description: Announcement title
          maxLength: 200
        content:
          type: string
          description: Announcement content
        announcement_type:
          $ref: '#/components/schemas/AnnouncementTypeEnum'
        priority:
          $ref: '#/components/schemas/Priority1baEnum'
        is_published:
          type: boolean
          description: Whether announcement is published
        publish_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Date when announcement was published
        expiry_date:
          type: string
          format: date-time
          nullable: true
          description: Date when announcement expires
        target_audience:
          type: string
          description: Target audience (ALL, FACULTY, STUDENTS, etc.)
          maxLength: 100
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - created_by_name
      - department
      - department_name
      - id
      - publish_date
      - title
      - updated_at
    DepartmentDetail:
      type: object
      description: Detailed serializer for Department with related objects
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Full department name
          maxLength: 200
        short_name:
          type: string
          description: Short name or abbreviation (e.g., CS, ME, EE)
          maxLength: 50
        code:
          type: string
          description: Department code for system use (e.g., CS001, ME002)
          maxLength: 10
        department_type:
          allOf:
          - $ref: '#/components/schemas/DepartmentTypeEnum'
          description: |-
            Type of department

            * `ACADEMIC` - Academic Department
            * `ADMINISTRATIVE` - Administrative Department
            * `RESEARCH` - Research Department
            * `SERVICE` - Service Department
            * `SUPPORT` - Support Department
        parent_department:
          type: string
          format: uuid
          nullable: true
          description: Parent department if this is a sub-department
        parent_department_name:
          type: string
          readOnly: true
        head_of_department:
          type: string
          format: uuid
          nullable: true
          description: Current head of department
        head_of_department_name:
          type: string
          readOnly: true
        deputy_head:
          type: string
          format: uuid
          nullable: true
          description: Deputy head of department
        deputy_head_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Department email address
          maxLength: 254
        phone:
          type: string
          description: Department phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        fax:
          type: string
          nullable: true
          description: Department fax number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        building:
          type: string
          description: Building name or number
          maxLength: 100
        floor:
          type: string
          nullable: true
          description: Floor number or name
          maxLength: 20
        room_number:
          type: string
          nullable: true
          description: Room number
          maxLength: 20
        address_line1:
          type: string
          nullable: true
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          description: Address line 2
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          nullable: true
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        established_date:
          type: string
          format: date
          description: Date when department was established
        accreditation_status:
          type: string
          nullable: true
          description: Accreditation status (e.g., NAAC, NBA)
          maxLength: 50
        accreditation_valid_until:
          type: string
          format: date
          nullable: true
          description: Accreditation valid until date
        description:
          type: string
          description: Department description and overview
        mission:
          type: string
          nullable: true
          description: Department mission statement
        vision:
          type: string
          nullable: true
          description: Department vision statement
        objectives:
          type: string
          nullable: true
          description: Department objectives
        max_faculty_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum faculty capacity
        max_student_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum student capacity
        current_faculty_count:
          type: integer
          readOnly: true
          description: Current faculty count
        current_student_count:
          type: integer
          readOnly: true
          description: Current student count
        faculty_utilization_percentage:
          type: string
          readOnly: true
        student_utilization_percentage:
          type: string
          readOnly: true
        annual_budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          nullable: true
          description: Annual budget in local currency
        budget_year:
          type: string
          nullable: true
          description: Budget year (e.g., 2024-2025)
          maxLength: 9
        status:
          $ref: '#/components/schemas/StatusD49Enum'
        is_active:
          type: boolean
          description: Whether department is currently active
        website_url:
          type: string
          format: uri
          nullable: true
          description: Department website URL
          maxLength: 200
        social_media_links:
          description: Social media links (JSON format)
        logo:
          type: string
          format: uri
          nullable: true
          description: Department logo
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        updated_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        resources:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentResource'
          readOnly: true
        announcements:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentAnnouncement'
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentEvent'
          readOnly: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentDocument'
          readOnly: true
      required:
      - announcements
      - building
      - code
      - created_at
      - created_by_name
      - current_faculty_count
      - current_student_count
      - deputy_head_name
      - description
      - documents
      - email
      - established_date
      - events
      - faculty_utilization_percentage
      - full_address
      - head_of_department_name
      - id
      - name
      - parent_department_name
      - phone
      - resources
      - short_name
      - student_utilization_percentage
      - updated_at
      - updated_by_name
    DepartmentDocument:
      type: object
      description: Serializer for DepartmentDocument model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        title:
          type: string
          description: Document title
          maxLength: 200
        document_type:
          $ref: '#/components/schemas/DepartmentDocumentDocumentTypeEnum'
        description:
          type: string
          nullable: true
          description: Document description
        file:
          type: string
          format: uri
          description: Document file
        file_url:
          type: string
          readOnly: true
        file_size:
          type: string
          readOnly: true
        version:
          type: string
          description: Document version
          maxLength: 20
        is_public:
          type: boolean
          description: Whether document is public
        uploaded_by:
          type: string
          format: uuid
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - department
      - department_name
      - document_type
      - file
      - file_size
      - file_url
      - id
      - title
      - updated_at
      - uploaded_by_name
    DepartmentDocumentDocumentTypeEnum:
      enum:
      - POLICY
      - PROCEDURE
      - FORM
      - REPORT
      - MANUAL
      - GUIDELINE
      - CERTIFICATE
      - OTHER
      type: string
      description: |-
        * `POLICY` - Policy Document
        * `PROCEDURE` - Procedure Document
        * `FORM` - Form
        * `REPORT` - Report
        * `MANUAL` - Manual
        * `GUIDELINE` - Guideline
        * `CERTIFICATE` - Certificate
        * `OTHER` - Other
    DepartmentEnum:
      enum:
      - COMPUTER_SCIENCE
      - MATHEMATICS
      - PHYSICS
      - CHEMISTRY
      - BIOLOGY
      - ENGLISH
      - HISTORY
      - GEOGRAPHY
      - ECONOMICS
      - COMMERCE
      - PHYSICAL_EDUCATION
      - ARTS
      - MUSIC
      - ADMINISTRATION
      - OTHER
      type: string
      description: |-
        * `COMPUTER_SCIENCE` - Computer Science
        * `MATHEMATICS` - Mathematics
        * `PHYSICS` - Physics
        * `CHEMISTRY` - Chemistry
        * `BIOLOGY` - Biology
        * `ENGLISH` - English
        * `HISTORY` - History
        * `GEOGRAPHY` - Geography
        * `ECONOMICS` - Economics
        * `COMMERCE` - Commerce
        * `PHYSICAL_EDUCATION` - Physical Education
        * `ARTS` - Arts
        * `MUSIC` - Music
        * `ADMINISTRATION` - Administration
        * `OTHER` - Other
    DepartmentEvent:
      type: object
      description: Serializer for DepartmentEvent model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        description:
          type: string
          description: Event description
        event_type:
          $ref: '#/components/schemas/DepartmentEventEventTypeEnum'
        start_date:
          type: string
          format: date-time
          description: Event start date and time
        end_date:
          type: string
          format: date-time
          description: Event end date and time
        location:
          type: string
          description: Event location
          maxLength: 200
        status:
          $ref: '#/components/schemas/DepartmentEventStatusEnum'
        is_public:
          type: boolean
          description: Whether event is public
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum number of attendees
        registration_required:
          type: boolean
          description: Whether registration is required
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Registration deadline
        organizer:
          type: string
          format: uuid
          nullable: true
          description: Event organizer
        organizer_name:
          type: string
          readOnly: true
        contact_email:
          type: string
          format: email
          nullable: true
          description: Contact email for event
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          description: Contact phone for event
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        duration_hours:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by_name
      - department
      - department_name
      - description
      - duration_hours
      - end_date
      - event_type
      - id
      - location
      - organizer_name
      - start_date
      - title
      - updated_at
    DepartmentEventEventTypeEnum:
      enum:
      - SEMINAR
      - WORKSHOP
      - CONFERENCE
      - MEETING
      - CELEBRATION
      - COMPETITION
      - EXHIBITION
      - OTHER
      type: string
      description: |-
        * `SEMINAR` - Seminar
        * `WORKSHOP` - Workshop
        * `CONFERENCE` - Conference
        * `MEETING` - Meeting
        * `CELEBRATION` - Celebration
        * `COMPETITION` - Competition
        * `EXHIBITION` - Exhibition
        * `OTHER` - Other
    DepartmentEventStatusEnum:
      enum:
      - PLANNED
      - CONFIRMED
      - ONGOING
      - COMPLETED
      - CANCELLED
      - POSTPONED
      type: string
      description: |-
        * `PLANNED` - Planned
        * `CONFIRMED` - Confirmed
        * `ONGOING` - Ongoing
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
        * `POSTPONED` - Postponed
    DepartmentList:
      type: object
      description: Lightweight serializer for department lists
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Full department name
          maxLength: 200
        short_name:
          type: string
          description: Short name or abbreviation (e.g., CS, ME, EE)
          maxLength: 50
        code:
          type: string
          description: Department code for system use (e.g., CS001, ME002)
          maxLength: 10
        department_type:
          allOf:
          - $ref: '#/components/schemas/DepartmentTypeEnum'
          description: |-
            Type of department

            * `ACADEMIC` - Academic Department
            * `ADMINISTRATIVE` - Administrative Department
            * `RESEARCH` - Research Department
            * `SERVICE` - Service Department
            * `SUPPORT` - Support Department
        head_of_department_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Department email address
          maxLength: 254
        phone:
          type: string
          description: Department phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        current_faculty_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Current faculty count
        current_student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Current student count
        faculty_utilization_percentage:
          type: string
          readOnly: true
        student_utilization_percentage:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusD49Enum'
        is_active:
          type: boolean
          description: Whether department is currently active
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - created_at
      - email
      - faculty_utilization_percentage
      - head_of_department_name
      - id
      - name
      - phone
      - short_name
      - student_utilization_percentage
    DepartmentResource:
      type: object
      description: Serializer for DepartmentResource model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        name:
          type: string
          description: Resource name
          maxLength: 200
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        description:
          type: string
          description: Resource description
        location:
          type: string
          description: Resource location
          maxLength: 200
        status:
          $ref: '#/components/schemas/DepartmentResourceStatusEnum'
        purchase_date:
          type: string
          format: date
          nullable: true
          description: Date when resource was purchased
        warranty_expiry:
          type: string
          format: date
          nullable: true
          description: Warranty expiry date
        maintenance_schedule:
          type: string
          nullable: true
          description: Maintenance schedule
        responsible_person:
          type: string
          format: uuid
          nullable: true
          description: Person responsible for this resource
        responsible_person_name:
          type: string
          readOnly: true
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          description: Resource cost
        notes:
          type: string
          nullable: true
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - department
      - department_name
      - description
      - id
      - location
      - name
      - resource_type
      - responsible_person_name
      - updated_at
    DepartmentResourceStatusEnum:
      enum:
      - AVAILABLE
      - IN_USE
      - MAINTENANCE
      - OUT_OF_ORDER
      - RETIRED
      type: string
      description: |-
        * `AVAILABLE` - Available
        * `IN_USE` - In Use
        * `MAINTENANCE` - Under Maintenance
        * `OUT_OF_ORDER` - Out of Order
        * `RETIRED` - Retired
    DepartmentTypeEnum:
      enum:
      - ACADEMIC
      - ADMINISTRATIVE
      - RESEARCH
      - SERVICE
      - SUPPORT
      type: string
      description: |-
        * `ACADEMIC` - Academic Department
        * `ADMINISTRATIVE` - Administrative Department
        * `RESEARCH` - Research Department
        * `SERVICE` - Service Department
        * `SUPPORT` - Support Department
    DesignationEnum:
      enum:
      - PROFESSOR
      - ASSOCIATE_PROFESSOR
      - ASSISTANT_PROFESSOR
      - LECTURER
      - INSTRUCTOR
      - HEAD_OF_DEPARTMENT
      - DEAN
      - PRINCIPAL
      - VICE_PRINCIPAL
      type: string
      description: |-
        * `PROFESSOR` - Professor
        * `ASSOCIATE_PROFESSOR` - Associate Professor
        * `ASSISTANT_PROFESSOR` - Assistant Professor
        * `LECTURER` - Lecturer
        * `INSTRUCTOR` - Instructor
        * `HEAD_OF_DEPARTMENT` - Head of Department
        * `DEAN` - Dean
        * `PRINCIPAL` - Principal
        * `VICE_PRINCIPAL` - Vice Principal
    DifficultyLevelEnum:
      enum:
      - BEGINNER
      - INTERMEDIATE
      - ADVANCED
      - EXPERT
      type: string
      description: |-
        * `BEGINNER` - Beginner
        * `INTERMEDIATE` - Intermediate
        * `ADVANCED` - Advanced
        * `EXPERT` - Expert
    DiscountTypeEnum:
      enum:
      - EARLY_PAYMENT
      - SIBLING
      - STAFF_CHILD
      - BULK_PAYMENT
      - LOYALTY
      - OTHER
      type: string
      description: |-
        * `EARLY_PAYMENT` - Early Payment
        * `SIBLING` - Sibling Discount
        * `STAFF_CHILD` - Staff Child
        * `BULK_PAYMENT` - Bulk Payment
        * `LOYALTY` - Loyalty Discount
        * `OTHER` - Other
    DocumentType144Enum:
      enum:
      - RESUME
      - DEGREE_CERTIFICATE
      - EXPERIENCE_CERTIFICATE
      - ID_PROOF
      - ADDRESS_PROOF
      - PHOTO
      - PAN_CARD
      - AADHAR_CARD
      - OTHER
      type: string
      description: |-
        * `RESUME` - Resume/CV
        * `DEGREE_CERTIFICATE` - Degree Certificate
        * `EXPERIENCE_CERTIFICATE` - Experience Certificate
        * `ID_PROOF` - ID Proof
        * `ADDRESS_PROOF` - Address Proof
        * `PHOTO` - Photograph
        * `PAN_CARD` - PAN Card
        * `AADHAR_CARD` - Aadhar Card
        * `OTHER` - Other
    DriveTypeEnum:
      enum:
      - CAMPUS
      - POOL
      - VIRTUAL
      type: string
      description: |-
        * `CAMPUS` - On Campus
        * `POOL` - Pool Campus
        * `VIRTUAL` - Virtual
    Driver:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        full_name:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 20
        license_number:
          type: string
          maxLength: 64
        license_expiry:
          type: string
          format: date
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
          nullable: true
      required:
      - created_at
      - full_name
      - id
      - license_expiry
      - license_number
      - phone
      - updated_at
    DueTypeEnum:
      enum:
      - TUITION
      - EXAM
      - LIBRARY
      - LAB
      - HOSTEL
      - OTHER
      type: string
      description: |-
        * `TUITION` - Tuition Fee
        * `EXAM` - Examination Fee
        * `LIBRARY` - Library Fine
        * `LAB` - Laboratory Fee
        * `HOSTEL` - Hostel Fee
        * `OTHER` - Other Dues
    Education:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        institution:
          type: string
          maxLength: 255
        degree:
          type: string
          maxLength: 255
        field_of_study:
          type: string
          nullable: true
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        grade:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - created_at
      - degree
      - id
      - institution
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - start_date
      - updated_at
    EmploymentTypeEnum:
      enum:
      - FULL_TIME
      - PART_TIME
      - CONTRACT
      - VISITING
      - ADJUNCT
      type: string
      description: |-
        * `FULL_TIME` - Full Time
        * `PART_TIME` - Part Time
        * `CONTRACT` - Contract
        * `VISITING` - Visiting
        * `ADJUNCT` - Adjunct
    EnrollmentTypeEnum:
      enum:
      - REGULAR
      - AUDIT
      - CREDIT_TRANSFER
      - REPEAT
      type: string
      description: |-
        * `REGULAR` - Regular
        * `AUDIT` - Audit
        * `CREDIT_TRANSFER` - Credit Transfer
        * `REPEAT` - Repeat Course
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        category_name:
          type: string
          readOnly: true
        venue_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        timezone_str:
          type: string
          maxLength: 64
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_public:
          type: boolean
        status:
          $ref: '#/components/schemas/EventStatusEnum'
        category:
          type: string
          format: uuid
          nullable: true
        venue:
          type: string
          format: uuid
          nullable: true
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - category_name
      - created_at
      - created_by
      - end_at
      - id
      - start_at
      - title
      - updated_at
      - updated_by
      - venue_name
    EventCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
      required:
      - created_at
      - id
      - name
      - updated_at
    EventRegistration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        event_title:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        attendee_name:
          type: string
          maxLength: 200
        attendee_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        attendee_mobile:
          type: string
          nullable: true
          maxLength: 20
        attendee_type:
          $ref: '#/components/schemas/AttendeeTypeEnum'
        checked_in_at:
          type: string
          format: date-time
          nullable: true
        is_waitlisted:
          type: boolean
        event:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
          nullable: true
      required:
      - attendee_name
      - attendee_type
      - created_at
      - event
      - event_title
      - id
      - updated_at
    EventStatusEnum:
      enum:
      - DRAFT
      - PUBLISHED
      - CANCELLED
      - COMPLETED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `PUBLISHED` - Published
        * `CANCELLED` - Cancelled
        * `COMPLETED` - Completed
    EventType430Enum:
      enum:
      - HOLIDAY
      - EXAM
      - BREAK
      - EVENT
      - DEADLINE
      - OTHER
      type: string
      description: |-
        * `HOLIDAY` - Holiday
        * `EXAM` - Examination
        * `BREAK` - Break
        * `EVENT` - Special Event
        * `DEADLINE` - Deadline
        * `OTHER` - Other
    ExamAttendance:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        invigilator_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/ExamAttendanceStatusEnum'
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
        remarks:
          type: string
          description: Any remarks or notes
        exam_registration:
          type: string
          format: uuid
        invigilator:
          type: string
          format: uuid
          nullable: true
      required:
      - created_at
      - exam_registration
      - exam_title
      - id
      - invigilator_name
      - status
      - student_name
      - student_roll_number
      - updated_at
    ExamAttendanceStatusEnum:
      enum:
      - PRESENT
      - ABSENT
      - LATE
      - DISQUALIFIED
      - MEDICAL_LEAVE
      type: string
      description: |-
        * `PRESENT` - Present
        * `ABSENT` - Absent
        * `LATE` - Late
        * `DISQUALIFIED` - Disqualified
        * `MEDICAL_LEAVE` - Medical Leave
    ExamRegistration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        approved_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusC3eEnum'
        registration_date:
          type: string
          format: date-time
          readOnly: true
        approved_date:
          type: string
          format: date-time
          nullable: true
        rejection_reason:
          type: string
          description: Reason for rejection if applicable
        special_requirements:
          type: string
          description: Any special requirements or accommodations
        student:
          type: string
          format: uuid
        exam_schedule:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - approved_by_name
      - course_code
      - created_at
      - exam_schedule
      - exam_schedule_title
      - id
      - registration_date
      - student
      - student_name
      - student_roll_number
      - updated_at
    ExamRegistrationDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        approved_by_name:
          type: string
          readOnly: true
        exam_schedule:
          allOf:
          - $ref: '#/components/schemas/ExamSchedule'
          readOnly: true
        hall_ticket:
          allOf:
          - $ref: '#/components/schemas/HallTicket'
          readOnly: true
        attendance:
          allOf:
          - $ref: '#/components/schemas/ExamAttendance'
          readOnly: true
        result:
          allOf:
          - $ref: '#/components/schemas/ExamResult'
          readOnly: true
        violations:
          type: array
          items:
            $ref: '#/components/schemas/ExamViolation'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusC3eEnum'
        registration_date:
          type: string
          format: date-time
          readOnly: true
        approved_date:
          type: string
          format: date-time
          nullable: true
        rejection_reason:
          type: string
          description: Reason for rejection if applicable
        special_requirements:
          type: string
          description: Any special requirements or accommodations
        student:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - approved_by_name
      - attendance
      - course_code
      - created_at
      - exam_schedule
      - exam_schedule_title
      - hall_ticket
      - id
      - registration_date
      - result
      - student
      - student_name
      - student_roll_number
      - updated_at
      - violations
    ExamResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        total_marks:
          type: integer
          readOnly: true
        passing_marks:
          type: integer
          readOnly: true
        evaluated_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        marks_obtained:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        grade:
          allOf:
          - $ref: '#/components/schemas/GradeEnum'
          readOnly: true
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        is_pass:
          type: boolean
          readOnly: true
        remarks:
          type: string
          description: Additional remarks or comments
        evaluated_at:
          type: string
          format: date-time
          nullable: true
        is_published:
          type: boolean
          description: Whether result is published to student
        published_at:
          type: string
          format: date-time
          nullable: true
        exam_registration:
          type: string
          format: uuid
        evaluated_by:
          type: string
          format: uuid
          nullable: true
      required:
      - course_code
      - created_at
      - evaluated_by_name
      - exam_registration
      - exam_title
      - grade
      - id
      - is_pass
      - passing_marks
      - percentage
      - student_name
      - student_roll_number
      - total_marks
      - updated_at
    ExamRoom:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Room name/number
          maxLength: 100
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum seating capacity
        building:
          type: string
          maxLength: 100
        floor:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        is_accessible:
          type: boolean
          description: Wheelchair accessible
        has_projector:
          type: boolean
        has_air_conditioning:
          type: boolean
        is_active:
          type: boolean
        description:
          type: string
      required:
      - capacity
      - created_at
      - id
      - name
      - room_type
      - updated_at
    ExamRoomAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        allocated_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of seats allocated for this exam
        is_primary:
          type: boolean
          description: Primary room for the exam
        notes:
          type: string
          description: Special notes about this allocation
        exam_schedule:
          type: string
          format: uuid
        exam_room:
          type: string
          format: uuid
      required:
      - allocated_capacity
      - created_at
      - exam_room
      - exam_room_name
      - exam_schedule
      - exam_schedule_title
      - id
      - updated_at
    ExamSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exam_session_name:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        course_title:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        registrations_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        exam_type:
          $ref: '#/components/schemas/ExamTypeEnum'
        title:
          type: string
          description: Exam title
          maxLength: 200
        description:
          type: string
        exam_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Exam duration in minutes
        total_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total marks for the exam
        passing_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Minimum marks required to pass
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum students that can take this exam
        status:
          $ref: '#/components/schemas/Status739Enum'
        instructions:
          type: string
          description: Special instructions for students
        is_online:
          type: boolean
          description: Whether this is an online exam
        online_platform:
          type: string
          description: Platform for online exams
          maxLength: 100
        exam_session:
          type: string
          format: uuid
        course:
          type: integer
      required:
      - course
      - course_code
      - course_title
      - created_at
      - duration_minutes
      - end_time
      - exam_date
      - exam_session
      - exam_session_name
      - exam_type
      - id
      - is_ongoing
      - max_students
      - passing_marks
      - registrations_count
      - start_time
      - title
      - total_marks
      - updated_at
    ExamScheduleDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exam_session_name:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        course_title:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        registrations_count:
          type: string
          readOnly: true
        exam_session:
          allOf:
          - $ref: '#/components/schemas/ExamSession'
          readOnly: true
        course:
          type: string
          readOnly: true
        room_allocations:
          type: array
          items:
            $ref: '#/components/schemas/ExamRoomAllocation'
          readOnly: true
        staff_assignments:
          type: array
          items:
            $ref: '#/components/schemas/ExamStaffAssignment'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        exam_type:
          $ref: '#/components/schemas/ExamTypeEnum'
        title:
          type: string
          description: Exam title
          maxLength: 200
        description:
          type: string
        exam_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Exam duration in minutes
        total_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total marks for the exam
        passing_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Minimum marks required to pass
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum students that can take this exam
        status:
          $ref: '#/components/schemas/Status739Enum'
        instructions:
          type: string
          description: Special instructions for students
        is_online:
          type: boolean
          description: Whether this is an online exam
        online_platform:
          type: string
          description: Platform for online exams
          maxLength: 100
      required:
      - course
      - course_code
      - course_title
      - created_at
      - duration_minutes
      - end_time
      - exam_date
      - exam_session
      - exam_session_name
      - exam_type
      - id
      - is_ongoing
      - max_students
      - passing_marks
      - registrations_count
      - room_allocations
      - staff_assignments
      - start_time
      - title
      - total_marks
      - updated_at
    ExamSession:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        is_registration_open:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        exam_schedules_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Exam session name (e.g., Fall 2024 Mid Semester)
          maxLength: 200
        session_type:
          $ref: '#/components/schemas/SessionTypeEnum'
        academic_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        semester:
          type: integer
          maximum: 8
          minimum: 1
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        registration_start:
          type: string
          format: date-time
          description: When students can start registering for exams
        registration_end:
          type: string
          format: date-time
          description: Last date for exam registration
        status:
          $ref: '#/components/schemas/Status0aeEnum'
        description:
          type: string
        is_active:
          type: boolean
      required:
      - academic_year
      - created_at
      - end_date
      - exam_schedules_count
      - id
      - is_ongoing
      - is_registration_open
      - name
      - registration_end
      - registration_start
      - semester
      - session_type
      - start_date
      - updated_at
    ExamSessionSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Exam session name (e.g., Fall 2024 Mid Semester)
          maxLength: 200
        session_type:
          $ref: '#/components/schemas/SessionTypeEnum'
        academic_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        semester:
          type: integer
          maximum: 8
          minimum: 1
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status0aeEnum'
        total_exams:
          type: string
          readOnly: true
        total_registrations:
          type: string
          readOnly: true
        total_students:
          type: string
          readOnly: true
      required:
      - academic_year
      - end_date
      - id
      - name
      - semester
      - session_type
      - start_date
      - total_exams
      - total_registrations
      - total_students
    ExamStaffAssignment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        faculty_name:
          type: string
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_available:
          type: boolean
          description: Whether staff is available for this duty
        assigned_date:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
          description: Special instructions or notes
        exam_schedule:
          type: string
          format: uuid
        faculty:
          type: string
          format: uuid
        exam_room:
          type: string
          format: uuid
          nullable: true
      required:
      - assigned_date
      - created_at
      - exam_room_name
      - exam_schedule
      - exam_schedule_title
      - faculty
      - faculty_name
      - id
      - role
      - updated_at
    ExamTypeEnum:
      enum:
      - THEORY
      - PRACTICAL
      - VIVA
      - PROJECT
      - ASSIGNMENT
      type: string
      description: |-
        * `THEORY` - Theory
        * `PRACTICAL` - Practical
        * `VIVA` - Viva Voce
        * `PROJECT` - Project Presentation
        * `ASSIGNMENT` - Assignment Submission
    ExamViolation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        reported_by_name:
          type: string
          readOnly: true
        resolved_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        violation_type:
          $ref: '#/components/schemas/ViolationTypeEnum'
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        description:
          type: string
          description: Detailed description of the violation
        reported_at:
          type: string
          format: date-time
          readOnly: true
        action_taken:
          type: string
          description: Action taken against the violation
        penalty:
          type: string
          description: Penalty imposed
        is_resolved:
          type: boolean
        resolved_at:
          type: string
          format: date-time
          nullable: true
        exam_registration:
          type: string
          format: uuid
        reported_by:
          type: string
          format: uuid
        resolved_by:
          type: string
          format: uuid
          nullable: true
      required:
      - created_at
      - description
      - exam_registration
      - exam_title
      - id
      - reported_at
      - reported_by
      - reported_by_name
      - resolved_by_name
      - severity
      - student_name
      - student_roll_number
      - updated_at
      - violation_type
    Experience:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        title:
          type: string
          maxLength: 255
        organization:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        currently_working:
          type: boolean
        location:
          type: string
          nullable: true
          maxLength: 255
        responsibilities:
          type: string
          nullable: true
        metadata: {}
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - created_at
      - id
      - organization
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - start_date
      - title
      - updated_at
    Faculty:
      type: object
      description: Main serializer for Faculty model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/FacultyDocument'
          readOnly: true
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/FacultySubject'
          readOnly: true
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/FacultySchedule'
          readOnly: true
        leaves:
          type: array
          items:
            $ref: '#/components/schemas/FacultyLeave'
          readOnly: true
        performances:
          type: array
          items:
            $ref: '#/components/schemas/FacultyPerformance'
          readOnly: true
        custom_field_values:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
          readOnly: true
        full_name:
          type: string
          readOnly: true
        is_active_faculty:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of the Faculty
          maxLength: 200
        pan_no:
          type: string
          nullable: true
          description: PAN Number
          maxLength: 10
        apaar_faculty_id:
          type: string
          description: APAAR Faculty ID
          maxLength: 50
        highest_degree:
          type: string
          description: Highest Degree
          maxLength: 100
        university:
          type: string
          nullable: true
          description: University
          maxLength: 200
        area_of_specialization:
          type: string
          nullable: true
          description: Area of Specialization
          maxLength: 200
        date_of_joining_institution:
          type: string
          format: date
          description: Date of Joining in this Institution
        designation_at_joining:
          type: string
          description: Designation at Time of Joining in this Institution
          maxLength: 100
        present_designation:
          type: string
          description: Present Designation
          maxLength: 100
        date_designated_as_professor:
          type: string
          format: date
          nullable: true
          description: Date designated as Professor/Associate Professor
        nature_of_association:
          allOf:
          - $ref: '#/components/schemas/NatureOfAssociationEnum'
          description: |-
            Nature of Association

            * `REGULAR` - Regular
            * `CONTRACT` - Contract
            * `AD_HOC` - Ad hoc
        contractual_full_time_part_time:
          nullable: true
          description: |-
            If contractual mention Full time or Part time

            * `FULL_TIME` - Full Time
            * `PART_TIME` - Part Time
          oneOf:
          - $ref: '#/components/schemas/ContractualFullTimePartTimeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        currently_associated:
          type: boolean
          description: Currently Associated (Y/N)
        date_of_leaving:
          type: string
          format: date
          nullable: true
          description: Date of Leaving if any
        experience_in_current_institute:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Experience in years in current institute
        employee_id:
          type: string
          description: Unique employee identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        designation:
          $ref: '#/components/schemas/DesignationEnum'
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        employment_type:
          $ref: '#/components/schemas/EmploymentTypeEnum'
        status:
          $ref: '#/components/schemas/Status1e1Enum'
        date_of_joining:
          type: string
          format: date
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        alternate_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address_line_1:
          type: string
          maxLength: 255
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 100
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          nullable: true
          maxLength: 200
        year_of_completion:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        previous_institution:
          type: string
          nullable: true
          maxLength: 200
        achievements:
          type: string
          nullable: true
        research_interests:
          type: string
          nullable: true
        is_head_of_department:
          type: boolean
        is_mentor:
          type: boolean
        mentor_for_grades:
          type: string
          nullable: true
          description: Comma-separated grade levels
          maxLength: 50
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_phone:
          type: string
          maxLength: 15
        emergency_contact_relationship:
          type: string
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        department_ref:
          type: string
          format: uuid
          nullable: true
          description: Department reference
      required:
      - created_at
      - custom_field_values
      - documents
      - full_name
      - id
      - is_active_faculty
      - leaves
      - performances
      - schedules
      - subjects
      - updated_at
      - user
    FacultyCreate:
      type: object
      description: Serializer for creating new faculty members
      properties:
        name:
          type: string
          description: Name of the Faculty
          maxLength: 200
        pan_no:
          type: string
          nullable: true
          description: PAN Number
          maxLength: 10
        apaar_faculty_id:
          type: string
          description: APAAR Faculty ID
          maxLength: 50
        highest_degree:
          type: string
          description: Highest Degree
          maxLength: 100
        university:
          type: string
          nullable: true
          description: University
          maxLength: 200
        area_of_specialization:
          type: string
          nullable: true
          description: Area of Specialization
          maxLength: 200
        date_of_joining_institution:
          type: string
          format: date
          description: Date of Joining in this Institution
        designation_at_joining:
          type: string
          description: Designation at Time of Joining in this Institution
          maxLength: 100
        present_designation:
          type: string
          description: Present Designation
          maxLength: 100
        date_designated_as_professor:
          type: string
          format: date
          nullable: true
          description: Date designated as Professor/Associate Professor
        nature_of_association:
          allOf:
          - $ref: '#/components/schemas/NatureOfAssociationEnum'
          description: |-
            Nature of Association

            * `REGULAR` - Regular
            * `CONTRACT` - Contract
            * `AD_HOC` - Ad hoc
        contractual_full_time_part_time:
          nullable: true
          description: |-
            If contractual mention Full time or Part time

            * `FULL_TIME` - Full Time
            * `PART_TIME` - Part Time
          oneOf:
          - $ref: '#/components/schemas/ContractualFullTimePartTimeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        currently_associated:
          type: boolean
          description: Currently Associated (Y/N)
        date_of_leaving:
          type: string
          format: date
          nullable: true
          description: Date of Leaving if any
        experience_in_current_institute:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Experience in years in current institute
        employee_id:
          type: string
          description: Unique employee identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        designation:
          $ref: '#/components/schemas/DesignationEnum'
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        department_ref:
          type: string
          format: uuid
          nullable: true
          description: Department reference
        department_name:
          type: string
          readOnly: true
        employment_type:
          $ref: '#/components/schemas/EmploymentTypeEnum'
        date_of_joining:
          type: string
          format: date
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        alternate_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address_line_1:
          type: string
          maxLength: 255
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 100
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          nullable: true
          maxLength: 200
        year_of_completion:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        previous_institution:
          type: string
          nullable: true
          maxLength: 200
        achievements:
          type: string
          nullable: true
        research_interests:
          type: string
          nullable: true
        is_head_of_department:
          type: boolean
        is_mentor:
          type: boolean
        mentor_for_grades:
          type: string
          nullable: true
          description: Comma-separated grade levels
          maxLength: 50
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_phone:
          type: string
          maxLength: 15
        emergency_contact_relationship:
          type: string
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        email:
          type: string
          format: email
          maxLength: 254
        custom_fields:
          description: Custom field values as key-value pairs
      required:
      - department_name
    FacultyDetail:
      type: object
      description: Detailed serializer for faculty member view
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/FacultyDocument'
          readOnly: true
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/FacultySubject'
          readOnly: true
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/FacultySchedule'
          readOnly: true
        leaves:
          type: array
          items:
            $ref: '#/components/schemas/FacultyLeave'
          readOnly: true
        performances:
          type: array
          items:
            $ref: '#/components/schemas/FacultyPerformance'
          readOnly: true
        custom_field_values:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
          readOnly: true
        full_name:
          type: string
          readOnly: true
        is_active_faculty:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of the Faculty
          maxLength: 200
        pan_no:
          type: string
          nullable: true
          description: PAN Number
          maxLength: 10
        apaar_faculty_id:
          type: string
          description: APAAR Faculty ID
          maxLength: 50
        highest_degree:
          type: string
          description: Highest Degree
          maxLength: 100
        university:
          type: string
          nullable: true
          description: University
          maxLength: 200
        area_of_specialization:
          type: string
          nullable: true
          description: Area of Specialization
          maxLength: 200
        date_of_joining_institution:
          type: string
          format: date
          description: Date of Joining in this Institution
        designation_at_joining:
          type: string
          description: Designation at Time of Joining in this Institution
          maxLength: 100
        present_designation:
          type: string
          description: Present Designation
          maxLength: 100
        date_designated_as_professor:
          type: string
          format: date
          nullable: true
          description: Date designated as Professor/Associate Professor
        nature_of_association:
          allOf:
          - $ref: '#/components/schemas/NatureOfAssociationEnum'
          description: |-
            Nature of Association

            * `REGULAR` - Regular
            * `CONTRACT` - Contract
            * `AD_HOC` - Ad hoc
        contractual_full_time_part_time:
          nullable: true
          description: |-
            If contractual mention Full time or Part time

            * `FULL_TIME` - Full Time
            * `PART_TIME` - Part Time
          oneOf:
          - $ref: '#/components/schemas/ContractualFullTimePartTimeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        currently_associated:
          type: boolean
          description: Currently Associated (Y/N)
        date_of_leaving:
          type: string
          format: date
          nullable: true
          description: Date of Leaving if any
        experience_in_current_institute:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Experience in years in current institute
        employee_id:
          type: string
          description: Unique employee identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        designation:
          $ref: '#/components/schemas/DesignationEnum'
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        employment_type:
          $ref: '#/components/schemas/EmploymentTypeEnum'
        status:
          $ref: '#/components/schemas/Status1e1Enum'
        date_of_joining:
          type: string
          format: date
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        alternate_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address_line_1:
          type: string
          maxLength: 255
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 100
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          nullable: true
          maxLength: 200
        year_of_completion:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        previous_institution:
          type: string
          nullable: true
          maxLength: 200
        achievements:
          type: string
          nullable: true
        research_interests:
          type: string
          nullable: true
        is_head_of_department:
          type: boolean
        is_mentor:
          type: boolean
        mentor_for_grades:
          type: string
          nullable: true
          description: Comma-separated grade levels
          maxLength: 50
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_phone:
          type: string
          maxLength: 15
        emergency_contact_relationship:
          type: string
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        department_ref:
          type: string
          format: uuid
          nullable: true
          description: Department reference
      required:
      - created_at
      - custom_field_values
      - documents
      - full_name
      - id
      - is_active_faculty
      - leaves
      - performances
      - schedules
      - subjects
      - updated_at
      - user
    FacultyDocument:
      type: object
      description: Serializer for FacultyDocument model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        verified_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        document_type:
          $ref: '#/components/schemas/DocumentType144Enum'
        title:
          type: string
          maxLength: 200
        file:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        is_verified:
          type: boolean
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        faculty:
          type: string
          format: uuid
      required:
      - created_at
      - document_type
      - faculty
      - file
      - id
      - title
      - updated_at
      - verified_at
      - verified_by
    FacultyDocumentCreate:
      type: object
      description: Serializer for creating faculty documents
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        document_type:
          $ref: '#/components/schemas/DocumentType144Enum'
        title:
          type: string
          maxLength: 200
        file:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        is_verified:
          type: boolean
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        faculty:
          type: string
          format: uuid
        verified_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - created_at
      - document_type
      - faculty
      - file
      - id
      - title
      - updated_at
      - verified_at
      - verified_by
    FacultyLeave:
      type: object
      description: Serializer for FacultyLeave model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        approved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        leave_days:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        reason:
          type: string
        status:
          $ref: '#/components/schemas/Status8dfEnum'
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        rejection_reason:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
      required:
      - approved_at
      - approved_by
      - created_at
      - end_date
      - faculty
      - id
      - leave_days
      - leave_type
      - reason
      - start_date
      - updated_at
    FacultyLeaveCreate:
      type: object
      description: Serializer for creating faculty leave requests
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        reason:
          type: string
        status:
          $ref: '#/components/schemas/Status8dfEnum'
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        rejection_reason:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - approved_at
      - approved_by
      - created_at
      - end_date
      - faculty
      - id
      - leave_type
      - reason
      - start_date
      - updated_at
    FacultyList:
      type: object
      description: Simplified serializer for listing faculty members
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        name:
          type: string
          description: Name of the Faculty
          maxLength: 200
        apaar_faculty_id:
          type: string
          description: APAAR Faculty ID
          maxLength: 50
        employee_id:
          type: string
          description: Unique employee identifier
          maxLength: 20
        full_name:
          type: string
          readOnly: true
        present_designation:
          type: string
          description: Present Designation
          maxLength: 100
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        employment_type:
          $ref: '#/components/schemas/EmploymentTypeEnum'
        status:
          $ref: '#/components/schemas/Status1e1Enum'
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        date_of_joining_institution:
          type: string
          format: date
          description: Date of Joining in this Institution
        currently_associated:
          type: boolean
          description: Currently Associated (Y/N)
        is_active_faculty:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - full_name
      - id
      - is_active_faculty
      - user
    FacultyPerformance:
      type: object
      description: Serializer for FacultyPerformance model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        evaluated_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        evaluation_period:
          type: string
          description: e.g., Q1, Q2, Q3, Q4, Annual
          maxLength: 50
        teaching_effectiveness:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        student_satisfaction:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        research_contribution:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        administrative_work:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        professional_development:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        overall_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          readOnly: true
          description: Overall performance score
        strengths:
          type: string
          nullable: true
        areas_for_improvement:
          type: string
          nullable: true
        recommendations:
          type: string
          nullable: true
        evaluation_date:
          type: string
          format: date
        comments:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
      required:
      - academic_year
      - administrative_work
      - created_at
      - evaluated_by
      - evaluation_date
      - evaluation_period
      - faculty
      - id
      - overall_score
      - professional_development
      - research_contribution
      - student_satisfaction
      - teaching_effectiveness
      - updated_at
    FacultyPerformanceCreate:
      type: object
      description: Serializer for creating faculty performance evaluations
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        evaluation_period:
          type: string
          description: e.g., Q1, Q2, Q3, Q4, Annual
          maxLength: 50
        teaching_effectiveness:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        student_satisfaction:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        research_contribution:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        administrative_work:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        professional_development:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        overall_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          readOnly: true
          description: Overall performance score
        strengths:
          type: string
          nullable: true
        areas_for_improvement:
          type: string
          nullable: true
        recommendations:
          type: string
          nullable: true
        evaluation_date:
          type: string
          format: date
        comments:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
        evaluated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - academic_year
      - administrative_work
      - created_at
      - evaluated_by
      - evaluation_date
      - evaluation_period
      - faculty
      - id
      - overall_score
      - professional_development
      - research_contribution
      - student_satisfaction
      - teaching_effectiveness
      - updated_at
    FacultySchedule:
      type: object
      description: Serializer for FacultySchedule model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekC1fEnum'
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        subject:
          type: string
          maxLength: 100
        grade_level:
          type: string
          maxLength: 10
        room_number:
          type: string
          nullable: true
          maxLength: 20
        is_online:
          type: boolean
        meeting_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        faculty:
          type: string
          format: uuid
      required:
      - created_at
      - day_of_week
      - end_time
      - faculty
      - grade_level
      - id
      - start_time
      - subject
      - updated_at
    FacultyScheduleCreate:
      type: object
      description: Serializer for creating faculty schedules
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekC1fEnum'
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        subject:
          type: string
          maxLength: 100
        grade_level:
          type: string
          maxLength: 10
        room_number:
          type: string
          nullable: true
          maxLength: 20
        is_online:
          type: boolean
        meeting_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        faculty:
          type: string
          format: uuid
      required:
      - created_at
      - day_of_week
      - end_time
      - faculty
      - grade_level
      - id
      - start_time
      - subject
      - updated_at
    FacultySubject:
      type: object
      description: Serializer for FacultySubject model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        subject_name:
          type: string
          maxLength: 100
        grade_level:
          type: string
          description: e.g., Grade 1-12, College
          maxLength: 10
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        is_primary_subject:
          type: boolean
        faculty:
          type: string
          format: uuid
      required:
      - academic_year
      - created_at
      - faculty
      - grade_level
      - id
      - subject_name
      - updated_at
    FacultySubjectCreate:
      type: object
      description: Serializer for creating faculty subjects
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        subject_name:
          type: string
          maxLength: 100
        grade_level:
          type: string
          description: e.g., Grade 1-12, College
          maxLength: 10
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        is_primary_subject:
          type: boolean
        faculty:
          type: string
          format: uuid
      required:
      - academic_year
      - created_at
      - faculty
      - grade_level
      - id
      - subject_name
      - updated_at
    FacultyUpdate:
      type: object
      description: Serializer for updating faculty information
      properties:
        name:
          type: string
          description: Name of the Faculty
          maxLength: 200
        pan_no:
          type: string
          nullable: true
          description: PAN Number
          maxLength: 10
        highest_degree:
          type: string
          description: Highest Degree
          maxLength: 100
        university:
          type: string
          nullable: true
          description: University
          maxLength: 200
        area_of_specialization:
          type: string
          nullable: true
          description: Area of Specialization
          maxLength: 200
        date_of_joining_institution:
          type: string
          format: date
          description: Date of Joining in this Institution
        designation_at_joining:
          type: string
          description: Designation at Time of Joining in this Institution
          maxLength: 100
        present_designation:
          type: string
          description: Present Designation
          maxLength: 100
        date_designated_as_professor:
          type: string
          format: date
          nullable: true
          description: Date designated as Professor/Associate Professor
        nature_of_association:
          allOf:
          - $ref: '#/components/schemas/NatureOfAssociationEnum'
          description: |-
            Nature of Association

            * `REGULAR` - Regular
            * `CONTRACT` - Contract
            * `AD_HOC` - Ad hoc
        contractual_full_time_part_time:
          nullable: true
          description: |-
            If contractual mention Full time or Part time

            * `FULL_TIME` - Full Time
            * `PART_TIME` - Part Time
          oneOf:
          - $ref: '#/components/schemas/ContractualFullTimePartTimeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        currently_associated:
          type: boolean
          description: Currently Associated (Y/N)
        date_of_leaving:
          type: string
          format: date
          nullable: true
          description: Date of Leaving if any
        experience_in_current_institute:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Experience in years in current institute
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        designation:
          $ref: '#/components/schemas/DesignationEnum'
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        department_ref:
          type: string
          format: uuid
          nullable: true
          description: Department reference
        department_name:
          type: string
          readOnly: true
        employment_type:
          $ref: '#/components/schemas/EmploymentTypeEnum'
        status:
          $ref: '#/components/schemas/Status1e1Enum'
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        alternate_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address_line_1:
          type: string
          maxLength: 255
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 100
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          nullable: true
          maxLength: 200
        year_of_completion:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        previous_institution:
          type: string
          nullable: true
          maxLength: 200
        achievements:
          type: string
          nullable: true
        research_interests:
          type: string
          nullable: true
        is_head_of_department:
          type: boolean
        is_mentor:
          type: boolean
        mentor_for_grades:
          type: string
          nullable: true
          description: Comma-separated grade levels
          maxLength: 50
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_phone:
          type: string
          maxLength: 15
        emergency_contact_relationship:
          type: string
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        custom_fields:
          description: Custom field values as key-value pairs
      required:
      - department_name
    FeeCategory:
      type: object
      description: Serializer for FeeCategory model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        display_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    FeeDiscount:
      type: object
      description: Serializer for FeeDiscount model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        reason:
          type: string
        valid_until:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - discount_type
      - id
      - percentage
      - reason
      - student_fee
      - student_name
      - student_roll_number
      - updated_at
    FeeReceipt:
      type: object
      description: Serializer for FeeReceipt model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        payment:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        receipt_number:
          type: string
          readOnly: true
        generated_date:
          type: string
          format: date-time
          readOnly: true
        generated_by:
          type: string
          format: uuid
          nullable: true
        generated_by_username:
          type: string
          readOnly: true
        is_printed:
          type: boolean
        printed_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - generated_by_username
      - generated_date
      - id
      - payment
      - payment_amount
      - receipt_number
      - student_fee
      - student_name
      - student_roll_number
      - updated_at
    FeeStructure:
      type: object
      description: Serializer for FeeStructure model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        academic_year:
          $ref: '#/components/schemas/AcademicYearEnum'
        grade_level:
          $ref: '#/components/schemas/GradeLevelEnum'
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        total_amount:
          type: string
          readOnly: true
        fee_details_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - created_at
      - fee_details_count
      - grade_level
      - id
      - name
      - total_amount
      - updated_at
    FeeStructureDetail:
      type: object
      description: Serializer for FeeStructureDetail model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        fee_structure:
          allOf:
          - $ref: '#/components/schemas/FeeStructure'
          readOnly: true
        fee_category:
          allOf:
          - $ref: '#/components/schemas/FeeCategory'
          readOnly: true
        fee_structure_id:
          type: string
          format: uuid
          writeOnly: true
        fee_category_id:
          type: string
          format: uuid
          writeOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        is_optional:
          type: boolean
        due_date:
          type: string
          format: date
          nullable: true
        late_fee_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        late_fee_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - fee_category
      - fee_category_id
      - fee_structure
      - fee_structure_id
      - frequency
      - id
      - updated_at
    FeeStructureDetailNested:
      type: object
      description: Nested serializer for FeeStructureDetail with full fee structure
        info
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        fee_structure:
          $ref: '#/components/schemas/FeeStructure'
        fee_category:
          $ref: '#/components/schemas/FeeCategory'
        fee_structure_id:
          type: string
          format: uuid
          writeOnly: true
        fee_category_id:
          type: string
          format: uuid
          writeOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        is_optional:
          type: boolean
        due_date:
          type: string
          format: date
          nullable: true
        late_fee_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        late_fee_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - fee_category
      - fee_category_id
      - fee_structure
      - fee_structure_id
      - frequency
      - id
      - updated_at
    FeeWaiver:
      type: object
      description: Serializer for FeeWaiver model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        waiver_type:
          $ref: '#/components/schemas/WaiverTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        reason:
          type: string
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_by_username:
          type: string
          readOnly: true
        approved_date:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - approved_by_username
      - created_at
      - id
      - percentage
      - reason
      - student_fee
      - student_name
      - student_roll_number
      - updated_at
      - waiver_type
    Feedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/FeedbackCategory'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
          nullable: true
        created_by:
          type: string
          readOnly: true
        is_anonymous:
          type: boolean
        status:
          $ref: '#/components/schemas/FeedbackStatusEnum'
        priority:
          $ref: '#/components/schemas/FeedbackPriorityEnum'
        rating:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        sentiment:
          type: string
          maxLength: 20
        department_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        course_id:
          type: integer
          writeOnly: true
          nullable: true
        section_id:
          type: integer
          writeOnly: true
          nullable: true
        faculty_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        syllabus_id:
          type: integer
          writeOnly: true
          nullable: true
        target_type:
          type: string
          maxLength: 100
        target_id:
          type: string
          maxLength: 64
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackTag'
          readOnly: true
        tag_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - created_by
      - description
      - id
      - tags
      - title
      - updated_at
    FeedbackAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feedback:
          type: integer
        uploaded_by:
          type: string
          readOnly: true
        file_url:
          type: string
          format: uri
          maxLength: 500
        description:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - feedback
      - file_url
      - id
      - uploaded_by
    FeedbackCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    FeedbackComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feedback:
          type: integer
        commented_by:
          type: string
          readOnly: true
        content:
          type: string
        is_internal:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - commented_by
      - content
      - created_at
      - feedback
      - id
    FeedbackPriorityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    FeedbackStatusEnum:
      enum:
      - open
      - in_review
      - resolved
      - closed
      type: string
      description: |-
        * `open` - Open
        * `in_review` - In Review
        * `resolved` - Resolved
        * `closed` - Closed
    FeedbackTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    FeedbackVote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feedback:
          type: integer
        voted_by:
          type: string
          format: uuid
          readOnly: true
        is_upvote:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - feedback
      - id
      - voted_by
    FieldTypeEnum:
      enum:
      - CHAR
      - TEXT
      - INTEGER
      - DECIMAL
      - DATE
      - DATETIME
      - BOOLEAN
      - EMAIL
      - URL
      - PHONE
      - CHOICE
      type: string
      description: |-
        * `CHAR` - Text
        * `TEXT` - Long Text
        * `INTEGER` - Number
        * `DECIMAL` - Decimal Number
        * `DATE` - Date
        * `DATETIME` - Date & Time
        * `BOOLEAN` - Yes/No
        * `EMAIL` - Email
        * `URL` - URL
        * `PHONE` - Phone Number
        * `CHOICE` - Choice Field
    FileTypeEnum:
      enum:
      - ASSIGNMENT
      - SUBMISSION
      type: string
      description: |-
        * `ASSIGNMENT` - Assignment File
        * `SUBMISSION` - Submission File
    FrequencyEnum:
      enum:
      - MONTHLY
      - QUARTERLY
      - SEMESTER
      - ANNUAL
      - ONE_TIME
      type: string
      description: |-
        * `MONTHLY` - Monthly
        * `QUARTERLY` - Quarterly
        * `SEMESTER` - Semester
        * `ANNUAL` - Annual
        * `ONE_TIME` - One Time
    GenderEnum:
      enum:
      - M
      - F
      - O
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
        * `O` - Other
    GradeEnum:
      enum:
      - A+
      - A
      - B+
      - B
      - C+
      - C
      - D
      - F
      - I
      - W
      type: string
      description: |-
        * `A+` - A+ (90-100)
        * `A` - A (80-89)
        * `B+` - B+ (70-79)
        * `B` - B (60-69)
        * `C+` - C+ (50-59)
        * `C` - C (40-49)
        * `D` - D (30-39)
        * `F` - F (Below 30)
        * `I` - Incomplete
        * `W` - Withdrawn
    GradeLetterEnum:
      enum:
      - A+
      - A
      - A-
      - B+
      - B
      - B-
      - C+
      - C
      - C-
      - D+
      - D
      - F
      - P
      - NP
      type: string
      description: |-
        * `A+` - A+
        * `A` - A
        * `A-` - A-
        * `B+` - B+
        * `B` - B
        * `B-` - B-
        * `C+` - C+
        * `C` - C
        * `C-` - C-
        * `D+` - D+
        * `D` - D
        * `F` - F
        * `P` - Pass
        * `NP` - No Pass
    GradeLevelEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      - '11'
      - '12'
      type: string
      description: |-
        * `1` - Grade 1
        * `2` - Grade 2
        * `3` - Grade 3
        * `4` - Grade 4
        * `5` - Grade 5
        * `6` - Grade 6
        * `7` - Grade 7
        * `8` - Grade 8
        * `9` - Grade 9
        * `10` - Grade 10
        * `11` - Grade 11
        * `12` - Grade 12
    GradeScale:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        letter:
          type: string
          maxLength: 2
        description:
          type: string
          description: Grade description (e.g., Outstanding, Excellent)
          maxLength: 50
        min_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Inclusive lower bound (0-100)
        max_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Inclusive upper bound (0-100)
        grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Grade points for the letter (0-10)
        is_active:
          type: boolean
      required:
      - description
      - grade_points
      - id
      - letter
      - max_score
      - min_score
    Grant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        sponsor:
          type: string
          maxLength: 255
        reference_code:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
      required:
      - id
      - title
    HallTicket:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        exam_date:
          type: string
          format: date
          readOnly: true
        start_time:
          type: string
          format: time
          readOnly: true
        end_time:
          type: string
          format: time
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        building:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        ticket_number:
          type: string
          readOnly: true
          description: Unique hall ticket number
        seat_number:
          type: string
          description: Assigned seat number
          maxLength: 20
        status:
          $ref: '#/components/schemas/Status24cEnum'
        generated_date:
          type: string
          format: date-time
          readOnly: true
        printed_date:
          type: string
          format: date-time
          nullable: true
        issued_date:
          type: string
          format: date-time
          nullable: true
        used_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          description: Special instructions or notes
        exam_registration:
          type: string
          format: uuid
        exam_room:
          type: string
          format: uuid
          nullable: true
      required:
      - building
      - course_code
      - created_at
      - end_time
      - exam_date
      - exam_registration
      - exam_room_name
      - exam_title
      - generated_date
      - id
      - start_time
      - student_name
      - student_roll_number
      - ticket_number
      - updated_at
    HallTicketDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        exam_date:
          type: string
          format: date
          readOnly: true
        start_time:
          type: string
          format: time
          readOnly: true
        end_time:
          type: string
          format: time
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        building:
          type: string
          readOnly: true
        exam_registration:
          allOf:
          - $ref: '#/components/schemas/ExamRegistration'
          readOnly: true
        exam_room:
          allOf:
          - $ref: '#/components/schemas/ExamRoom'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        ticket_number:
          type: string
          readOnly: true
          description: Unique hall ticket number
        seat_number:
          type: string
          description: Assigned seat number
          maxLength: 20
        status:
          $ref: '#/components/schemas/Status24cEnum'
        generated_date:
          type: string
          format: date-time
          readOnly: true
        printed_date:
          type: string
          format: date-time
          nullable: true
        issued_date:
          type: string
          format: date-time
          nullable: true
        used_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          description: Special instructions or notes
      required:
      - building
      - course_code
      - created_at
      - end_time
      - exam_date
      - exam_registration
      - exam_room
      - exam_room_name
      - exam_title
      - generated_date
      - id
      - start_time
      - student_name
      - student_roll_number
      - ticket_number
      - updated_at
    InterviewRound:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        drive:
          type: integer
        name:
          type: string
          maxLength: 255
        round_type:
          $ref: '#/components/schemas/RoundTypeEnum'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
          maxLength: 255
        instructions:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - drive
      - id
      - name
      - updated_at
    JobPosting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        location:
          type: string
          maxLength: 255
        work_mode:
          $ref: '#/components/schemas/WorkModeEnum'
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        stipend:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        salary_min:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        salary_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        currency:
          type: string
          maxLength: 10
        skills:
          description: List of required skills
        eligibility_criteria:
          type: string
        application_deadline:
          type: string
          format: date
          nullable: true
        openings:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        posted_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - company_id
      - created_at
      - description
      - id
      - posted_by
      - title
      - updated_at
    JobTypeEnum:
      enum:
      - FULL_TIME
      - PART_TIME
      - INTERNSHIP
      - CONTRACT
      - TEMPORARY
      type: string
      description: |-
        * `FULL_TIME` - Full-time
        * `PART_TIME` - Part-time
        * `INTERNSHIP` - Internship
        * `CONTRACT` - Contract
        * `TEMPORARY` - Temporary
    LeaveTypeEnum:
      enum:
      - CASUAL
      - SICK
      - ANNUAL
      - MATERNITY
      - PATERNITY
      - STUDY
      - OTHER
      type: string
      description: |-
        * `CASUAL` - Casual Leave
        * `SICK` - Sick Leave
        * `ANNUAL` - Annual Leave
        * `MATERNITY` - Maternity Leave
        * `PATERNITY` - Paternity Leave
        * `STUDY` - Study Leave
        * `OTHER` - Other
    LevelEnum:
      enum:
      - UG
      - PG
      - PHD
      - DIPLOMA
      - CERTIFICATE
      type: string
      description: |-
        * `UG` - Undergraduate
        * `PG` - Postgraduate
        * `PHD` - Doctorate
        * `DIPLOMA` - Diploma
        * `CERTIFICATE` - Certificate
    Meeting:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        scheduled_at:
          type: string
          format: date-time
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
        agenda:
          type: string
          nullable: true
          maxLength: 255
        notes:
          type: string
          nullable: true
        mentorship:
          type: string
          format: uuid
        created_by:
          type: string
          format: uuid
          nullable: true
      required:
      - created_at
      - id
      - mentorship
      - scheduled_at
      - updated_at
    Mentorship:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        meetings:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
          readOnly: true
        feedback:
          type: array
          items:
            $ref: '#/components/schemas/Feedback'
          readOnly: true
        action_items:
          type: array
          items:
            $ref: '#/components/schemas/ActionItem'
          readOnly: true
        mentor_name:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        objective:
          type: string
          nullable: true
          maxLength: 255
        academic_year:
          type: string
          nullable: true
          description: e.g., 2024-2025
          maxLength: 9
        grade_level:
          type: string
          nullable: true
          maxLength: 2
        section:
          type: string
          nullable: true
          maxLength: 1
        risk_score:
          type: integer
          maximum: 32767
          minimum: 0
          description: 0 (low) to 100 (high)
        risk_factors: {}
        last_risk_evaluated_at:
          type: string
          format: date-time
          nullable: true
        mentor:
          type: string
          format: uuid
        student:
          type: string
          format: uuid
        department_ref:
          type: string
          format: uuid
          nullable: true
      required:
      - action_items
      - created_at
      - department_name
      - feedback
      - id
      - meetings
      - mentor
      - mentor_name
      - projects
      - start_date
      - student
      - student_name
      - updated_at
    MidTermGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          format: uuid
        course_section:
          type: integer
        semester:
          type: integer
        midterm_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Marks obtained by student
        total_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Total marks for the exam (e.g., 50, 100)
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          description: Calculated percentage
        midterm_grade:
          type: string
          readOnly: true
        midterm_grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        evaluated_at:
          type: string
          format: date-time
          readOnly: true
        evaluator:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - course_section
      - evaluated_at
      - evaluator
      - id
      - midterm_grade
      - midterm_grade_points
      - percentage
      - semester
      - student
    NatureOfAssociationEnum:
      enum:
      - REGULAR
      - CONTRACT
      - AD_HOC
      type: string
      description: |-
        * `REGULAR` - Regular
        * `CONTRACT` - Contract
        * `AD_HOC` - Ad hoc
    NotificationTypeEnum:
      enum:
      - ASSIGNMENT_CREATED
      - ASSIGNMENT_DUE_SOON
      - ASSIGNMENT_OVERDUE
      - SUBMISSION_RECEIVED
      - GRADE_POSTED
      - FEEDBACK_POSTED
      - PEER_REVIEW_ASSIGNED
      - PLAGIARISM_DETECTED
      type: string
      description: |-
        * `ASSIGNMENT_CREATED` - Assignment Created
        * `ASSIGNMENT_DUE_SOON` - Assignment Due Soon
        * `ASSIGNMENT_OVERDUE` - Assignment Overdue
        * `SUBMISSION_RECEIVED` - Submission Received
        * `GRADE_POSTED` - Grade Posted
        * `FEEDBACK_POSTED` - Feedback Posted
        * `PEER_REVIEW_ASSIGNED` - Peer Review Assigned
        * `PLAGIARISM_DETECTED` - Plagiarism Detected
    NullEnum:
      enum:
      - null
    Offer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        application:
          type: integer
        offered_role:
          type: string
          maxLength: 255
        package_annual_ctc:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Annual CTC
        joining_location:
          type: string
          maxLength: 255
        joining_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/OfferStatusEnum'
        offered_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
      required:
      - application
      - id
      - offered_at
      - offered_role
      - package_annual_ctc
      - updated_at
    OfferStatusEnum:
      enum:
      - PENDING
      - ACCEPTED
      - DECLINED
      - EXPIRED
      type: string
      description: |-
        * `PENDING` - Pending
        * `ACCEPTED` - Accepted
        * `DECLINED` - Declined
        * `EXPIRED` - Expired
    OperationTypeEnum:
      enum:
      - ASSIGN_DEPARTMENT
      - ASSIGN_PROGRAM
      - ASSIGN_YEAR
      - ASSIGN_SEMESTER
      - ASSIGN_SECTION
      - PROMOTE_YEAR
      - TRANSFER_BATCH
      - CUSTOM
      type: string
      description: |-
        * `ASSIGN_DEPARTMENT` - Assign Department
        * `ASSIGN_PROGRAM` - Assign Academic Program
        * `ASSIGN_YEAR` - Assign Academic Year
        * `ASSIGN_SEMESTER` - Assign Semester
        * `ASSIGN_SECTION` - Assign Section
        * `PROMOTE_YEAR` - Promote to Next Year
        * `TRANSFER_BATCH` - Transfer to Different Batch
        * `CUSTOM` - Custom Assignment
    PaginatedAcademicCalendarList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AcademicCalendar'
    PaginatedAchievementList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Achievement'
    PaginatedActionItemList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActionItem'
    PaginatedAlumniPlacementList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AlumniPlacement'
    PaginatedApplicationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    PaginatedAssignmentCommentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentComment'
    PaginatedAssignmentSubmissionList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentSubmission'
    PaginatedAssignmentTemplateList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentTemplate'
    PaginatedAttendanceRecordList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AttendanceRecord'
    PaginatedAttendanceSessionList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/AttendanceSession'
    PaginatedBatchCourseEnrollmentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/BatchCourseEnrollment'
    PaginatedBulkAssignmentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkAssignment'
    PaginatedCollaborationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Collaboration'
    PaginatedCompanyFeedbackList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyFeedback'
    PaginatedCompanyList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    PaginatedCourseEnrollmentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseEnrollment'
    PaginatedCourseList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    PaginatedCoursePrerequisiteList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/CoursePrerequisite'
    PaginatedCourseSectionList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseSection'
    PaginatedCumulativeGPAList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CumulativeGPA'
    PaginatedCustomFieldList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    PaginatedCustomFieldValueList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
    PaginatedDatasetList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
    PaginatedDepartmentAnnouncementList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentAnnouncement'
    PaginatedDepartmentDocumentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentDocument'
    PaginatedDepartmentEventList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentEvent'
    PaginatedDepartmentListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentList'
    PaginatedDepartmentResourceList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentResource'
    PaginatedDriverList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Driver'
    PaginatedEducationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Education'
    PaginatedEventCategoryList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventCategory'
    PaginatedEventList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedEventRegistrationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventRegistration'
    PaginatedExamAttendanceList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamAttendance'
    PaginatedExamRegistrationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamRegistration'
    PaginatedExamResultList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamResult'
    PaginatedExamRoomAllocationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamRoomAllocation'
    PaginatedExamRoomList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamRoom'
    PaginatedExamScheduleList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamSchedule'
    PaginatedExamSessionSummaryList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamSessionSummary'
    PaginatedExamStaffAssignmentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamStaffAssignment'
    PaginatedExamViolationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExamViolation'
    PaginatedExperienceList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
    PaginatedFacultyDocumentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacultyDocument'
    PaginatedFacultyLeaveList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacultyLeave'
    PaginatedFacultyListList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacultyList'
    PaginatedFacultyPerformanceList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacultyPerformance'
    PaginatedFacultyScheduleList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacultySchedule'
    PaginatedFacultySubjectList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacultySubject'
    PaginatedFeeCategoryList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeCategory'
    PaginatedFeeDiscountList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeDiscount'
    PaginatedFeeReceiptList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeReceipt'
    PaginatedFeeStructureDetailList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeStructureDetail'
    PaginatedFeeStructureList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeStructure'
    PaginatedFeeWaiverList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeWaiver'
    PaginatedFeedbackAttachmentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackAttachment'
    PaginatedFeedbackCategoryList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackCategory'
    PaginatedFeedbackCommentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackComment'
    PaginatedFeedbackList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feedback'
    PaginatedFeedbackTagList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackTag'
    PaginatedFeedbackVoteList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackVote'
    PaginatedGradeScaleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GradeScale'
    PaginatedGrantList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
    PaginatedHallTicketList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/HallTicket'
    PaginatedInterviewRoundList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/InterviewRound'
    PaginatedJobPostingList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/JobPosting'
    PaginatedMeetingList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
    PaginatedMentorshipList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Mentorship'
    PaginatedMidTermGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MidTermGrade'
    PaginatedOfferList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
    PaginatedPatentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Patent'
    PaginatedPaymentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedPlacementDocumentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlacementDocument'
    PaginatedPlacementDriveList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlacementDrive'
    PaginatedPlacementStatisticsList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlacementStatistics'
    PaginatedProjectList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedPublicationList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
    PaginatedResearcherList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Researcher'
    PaginatedResumeProfileList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResumeProfile'
    PaginatedRouteList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Route'
    PaginatedRouteStopList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/RouteStop'
    PaginatedSemesterGPAList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SemesterGPA'
    PaginatedSemesterGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SemesterGrade'
    PaginatedSkillList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
    PaginatedStopList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Stop'
    PaginatedStudentBatchList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentBatch'
    PaginatedStudentCustomFieldValueList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentCustomFieldValue'
    PaginatedStudentDocumentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentDocument'
    PaginatedStudentDueSummaryList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentDueSummary'
    PaginatedStudentEnrollmentHistoryList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentEnrollmentHistory'
    PaginatedStudentFeeList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentFee'
    PaginatedStudentImportList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentImport'
    PaginatedStudentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    PaginatedStudentListList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentList'
    PaginatedSyllabusList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Syllabus'
    PaginatedSyllabusTopicList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/SyllabusTopic'
    PaginatedTimetableList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Timetable'
    PaginatedTransportPassList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransportPass'
    PaginatedTripScheduleList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/TripSchedule'
    PaginatedUserList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVehicleAssignmentList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/VehicleAssignment'
    PaginatedVehicleList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'
    PaginatedVenueList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Venue'
    PassTypeEnum:
      enum:
      - STUDENT
      - STAFF
      type: string
      description: |-
        * `STUDENT` - Student
        * `STAFF` - Staff
    PatchedAcademicCalendar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        event_type:
          $ref: '#/components/schemas/EventType430Enum'
        event_type_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          description: Event start date
        end_date:
          type: string
          format: date
          description: Event end date
        description:
          type: string
          description: Event description
        academic_year:
          type: string
          description: Academic year
          maxLength: 9
        semester:
          type: string
          description: Semester (if applicable)
          maxLength: 20
        is_academic_day:
          type: boolean
          description: Whether this is an academic day
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedActionItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        priority:
          $ref: '#/components/schemas/Priority1baEnum'
        status:
          $ref: '#/components/schemas/ActionItemStatusEnum'
        mentorship:
          type: string
          format: uuid
        meeting:
          type: string
          format: uuid
          nullable: true
        assigned_to_user:
          type: string
          format: uuid
          nullable: true
        created_by:
          type: string
          format: uuid
          nullable: true
    PatchedAlumniPlacement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        student_id:
          type: string
          format: uuid
          writeOnly: true
        current_company:
          type: string
          maxLength: 255
        current_designation:
          type: string
          maxLength: 255
        current_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        current_location:
          type: string
          maxLength: 255
        total_experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        job_changes:
          type: integer
          maximum: 2147483647
          minimum: 0
        pursuing_higher_studies:
          type: boolean
        higher_studies_institution:
          type: string
          maxLength: 255
        higher_studies_program:
          type: string
          maxLength: 255
        is_entrepreneur:
          type: boolean
        startup_name:
          type: string
          maxLength: 255
        startup_description:
          type: string
        linkedin_profile:
          type: string
          format: uri
          maxLength: 200
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 30
        willing_to_mentor:
          type: boolean
        willing_to_recruit:
          type: boolean
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        student_id:
          type: string
          format: uuid
          writeOnly: true
        job:
          allOf:
          - $ref: '#/components/schemas/JobPosting'
          readOnly: true
        job_id:
          type: integer
          writeOnly: true
        drive_id:
          type: integer
          writeOnly: true
          nullable: true
        resume:
          type: string
          format: uri
          nullable: true
        cover_letter:
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        applied_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
    PatchedAssignmentCategory:
      type: object
      description: Serializer for AssignmentCategory model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        color_code:
          type: string
          description: Hex color code
          maxLength: 7
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAssignmentCreate:
      type: object
      description: Serializer for creating Assignment
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        instructions:
          type: string
          nullable: true
        category:
          type: string
          format: uuid
          nullable: true
        assignment_type:
          $ref: '#/components/schemas/AssignmentTypeEnum'
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date-time
        late_submission_allowed:
          type: boolean
        late_penalty_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Percentage penalty for late submissions (0-100)
        is_group_assignment:
          type: boolean
        max_group_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum group size for group assignments
        is_apaar_compliant:
          type: boolean
          description: Compliant with AP Academic Assessment and Accreditation Requirements
        requires_plagiarism_check:
          type: boolean
          description: Requires plagiarism detection check
        plagiarism_threshold:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Maximum allowed similarity percentage (0-100)
        rubric:
          type: string
          format: uuid
          nullable: true
          description: Grading rubric for this assignment
        enable_peer_review:
          type: boolean
          description: Enable peer review for this assignment
        peer_review_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Weight of peer review in final grade (0-100)
        learning_objectives:
          type: string
          nullable: true
          description: Learning objectives for this assignment
        estimated_time_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Estimated time to complete in hours
        submission_reminder_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days before due date to send reminder
        academic_year:
          type: integer
          nullable: true
          description: Academic year for this assignment
        semester:
          type: integer
          nullable: true
          description: Semester for this assignment
        assigned_to_programs:
          type: array
          items:
            type: integer
          description: Academic programs this assignment is assigned to
        assigned_to_departments:
          type: array
          items:
            type: string
            format: uuid
          description: Departments this assignment is assigned to
        assigned_to_courses:
          type: array
          items:
            type: integer
          description: Courses this assignment is assigned to
        assigned_to_course_sections:
          type: array
          items:
            type: integer
          description: Course sections this assignment is assigned to
        assigned_to_students:
          type: array
          items:
            type: string
            format: uuid
          description: Specific students this assignment is assigned to
        attachment_files:
          description: List of file information for assignment attachments
    PatchedAssignmentGrade:
      type: object
      description: Serializer for AssignmentGrade model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        marks_obtained:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        out_of_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
        percentage:
          type: string
          readOnly: true
        grade_letter:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GradeLetterEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        feedback:
          type: string
          nullable: true
        graded_by:
          type: string
          format: uuid
        graded_by_name:
          type: string
          readOnly: true
        graded_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAssignmentNotification:
      type: object
      description: Serializer for AssignmentNotification model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        assignment_title:
          type: string
          readOnly: true
        recipient:
          type: string
          format: uuid
        recipient_name:
          type: string
          readOnly: true
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        title:
          type: string
          maxLength: 200
        message:
          type: string
        is_read:
          type: boolean
        read_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        context_data:
          description: Additional context data for the notification
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAssignmentRubric:
      type: object
      description: Serializer for AssignmentRubric model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        rubric_type:
          $ref: '#/components/schemas/RubricTypeEnum'
        criteria:
          description: List of rubric criteria with descriptions and point values
        total_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        created_by:
          type: string
          format: uuid
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Available to all faculty
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAssignmentRubricGrade:
      type: object
      description: Serializer for AssignmentRubricGrade model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        submission:
          type: string
          format: uuid
        rubric:
          type: string
          format: uuid
        criteria_scores:
          description: Scores for each rubric criterion
        total_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        feedback:
          type: string
          nullable: true
        graded_by:
          type: string
          format: uuid
        graded_by_name:
          type: string
          readOnly: true
        graded_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAssignmentSubmission:
      type: object
      description: Serializer for AssignmentSubmission model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        assignment:
          type: string
          format: uuid
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_id:
          type: string
          readOnly: true
        content:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          description: Additional notes from student
        status:
          $ref: '#/components/schemas/AssignmentSubmissionStatusEnum'
        submission_date:
          type: string
          format: date-time
          readOnly: true
        is_late:
          type: boolean
          readOnly: true
        attachment_files:
          description: List of file information for submission attachments
        files:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentFile'
          readOnly: true
        grade:
          allOf:
          - $ref: '#/components/schemas/AssignmentGrade'
          readOnly: true
        feedback:
          type: string
          nullable: true
        graded_by:
          type: string
          format: uuid
          nullable: true
        graded_by_name:
          type: string
          readOnly: true
        graded_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAssignmentTemplate:
      type: object
      description: Serializer for AssignmentTemplate model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        instructions:
          type: string
          nullable: true
        category:
          type: string
          format: uuid
          nullable: true
        category_name:
          type: string
          readOnly: true
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        is_group_assignment:
          type: boolean
        max_group_size:
          type: integer
          maximum: 2147483647
          minimum: 0
        template_data:
          description: Additional template configuration data
        created_by:
          type: string
          format: uuid
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Available to all faculty
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAttendanceRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        session:
          type: integer
        student:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/AttendanceRecordStatusEnum'
        check_in_time:
          type: string
          format: date-time
          nullable: true
        remarks:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAttendanceSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_section:
          type: integer
        timetable:
          type: integer
          nullable: true
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        room:
          type: string
          maxLength: 50
        is_cancelled:
          type: boolean
        notes:
          type: string
        records:
          type: array
          items:
            $ref: '#/components/schemas/AttendanceRecord'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedBatchCourseEnrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_section:
          type: string
          readOnly: true
        academic_year:
          type: string
          description: Academic year for enrollment
          maxLength: 9
        semester:
          type: string
          description: Semester for enrollment
          maxLength: 20
        enrollment_date:
          type: string
          format: date
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusA19Enum'
        auto_enroll_new_students:
          type: boolean
          description: Automatically enroll new students added to this batch
        notes:
          type: string
          description: Additional notes
        enrolled_students_count:
          type: string
          readOnly: true
        batch_students_count:
          type: string
          readOnly: true
        enrollment_percentage:
          type: string
          readOnly: true
        created_by:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCollaboration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          allOf:
          - $ref: '#/components/schemas/Project'
          readOnly: true
        project_id:
          type: integer
          writeOnly: true
        partner_institution:
          type: string
          maxLength: 255
        contact_person:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
    PatchedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
        industry:
          type: string
          maxLength: 100
        company_size:
          oneOf:
          - $ref: '#/components/schemas/CompanySizeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        headquarters:
          type: string
          maxLength: 255
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 30
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          readOnly: true
        total_placements:
          type: integer
          readOnly: true
        total_drives:
          type: integer
          readOnly: true
        last_visit_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCompanyFeedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
        drive:
          allOf:
          - $ref: '#/components/schemas/PlacementDrive'
          readOnly: true
        drive_id:
          type: integer
          writeOnly: true
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
        student_quality_rating:
          type: integer
          maximum: 5
          minimum: 1
        process_rating:
          type: integer
          maximum: 5
          minimum: 1
        infrastructure_rating:
          type: integer
          maximum: 5
          minimum: 1
        positive_feedback:
          type: string
        areas_for_improvement:
          type: string
        suggestions:
          type: string
        would_visit_again:
          type: boolean
        feedback_by:
          type: string
          maxLength: 255
        feedback_by_designation:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: Course code (e.g., CS101)
          maxLength: 20
        title:
          type: string
          description: Course title
          maxLength: 200
        description:
          type: string
          description: Course description
        level:
          $ref: '#/components/schemas/LevelEnum'
        credits:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Credit hours
        duration_weeks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in weeks
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum number of students per section
        prerequisites:
          type: array
          items:
            type: string
          readOnly: true
        department:
          type: string
          readOnly: true
        programs:
          type: array
          items:
            type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEf3Enum'
        enrolled_students_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCourseEnrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        course:
          type: string
          readOnly: true
        course_section:
          allOf:
          - $ref: '#/components/schemas/CourseSection'
          readOnly: true
        student_batch:
          type: string
          readOnly: true
        academic_year:
          type: string
          readOnly: true
        semester:
          type: string
          readOnly: true
        section_number:
          type: string
          readOnly: true
        enrollment_date:
          type: string
          format: date
          readOnly: true
        status:
          $ref: '#/components/schemas/Status917Enum'
        grade:
          type: string
          description: Final grade (e.g., A, B+, C)
          maxLength: 5
        grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          nullable: true
          description: Grade points
        attendance_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Attendance percentage
        enrollment_type:
          $ref: '#/components/schemas/EnrollmentTypeEnum'
        notes:
          type: string
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCoursePrerequisite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        prerequisite_course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        is_mandatory:
          type: boolean
          description: Whether this prerequisite is mandatory
        minimum_grade:
          type: string
          description: Minimum grade required (e.g., C, B+)
          maxLength: 5
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCourseSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        student_batch:
          allOf:
          - $ref: '#/components/schemas/StudentBatch'
          readOnly: true
        section_number:
          type: string
          readOnly: true
        section_type:
          $ref: '#/components/schemas/SectionTypeEnum'
        section_type_display:
          type: string
          readOnly: true
        faculty:
          type: string
          readOnly: true
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum students for this section (optional)
        current_enrollment:
          type: integer
          readOnly: true
          description: Current number of enrolled students (optional)
        available_seats:
          type: string
          readOnly: true
        academic_year:
          type: string
          readOnly: true
        semester:
          type: string
          readOnly: true
        is_active:
          type: boolean
        notes:
          type: string
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCustomField:
      type: object
      description: Serializer for CustomField model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
        label:
          type: string
          maxLength: 200
        field_type:
          $ref: '#/components/schemas/FieldTypeEnum'
        required:
          type: boolean
        default_value:
          type: string
          nullable: true
        choices:
          type: string
          nullable: true
          description: Comma-separated choices for choice fields
        help_text:
          type: string
          nullable: true
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedCustomFieldValue:
      type: object
      description: Serializer for CustomFieldValue model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        custom_field:
          allOf:
          - $ref: '#/components/schemas/CustomField'
          readOnly: true
        custom_field_id:
          type: string
          format: uuid
          writeOnly: true
        value:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDataset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        project_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        storage_url:
          type: string
          format: uri
          maxLength: 200
        is_public:
          type: boolean
    PatchedDepartment:
      type: object
      description: Serializer for Department model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Full department name
          maxLength: 200
        short_name:
          type: string
          description: Short name or abbreviation (e.g., CS, ME, EE)
          maxLength: 50
        code:
          type: string
          description: Department code for system use (e.g., CS001, ME002)
          maxLength: 10
        department_type:
          allOf:
          - $ref: '#/components/schemas/DepartmentTypeEnum'
          description: |-
            Type of department

            * `ACADEMIC` - Academic Department
            * `ADMINISTRATIVE` - Administrative Department
            * `RESEARCH` - Research Department
            * `SERVICE` - Service Department
            * `SUPPORT` - Support Department
        parent_department:
          type: string
          format: uuid
          nullable: true
          description: Parent department if this is a sub-department
        parent_department_name:
          type: string
          readOnly: true
        head_of_department:
          type: string
          format: uuid
          nullable: true
          description: Current head of department
        head_of_department_name:
          type: string
          readOnly: true
        deputy_head:
          type: string
          format: uuid
          nullable: true
          description: Deputy head of department
        deputy_head_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: Department email address
          maxLength: 254
        phone:
          type: string
          description: Department phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        fax:
          type: string
          nullable: true
          description: Department fax number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        building:
          type: string
          description: Building name or number
          maxLength: 100
        floor:
          type: string
          nullable: true
          description: Floor number or name
          maxLength: 20
        room_number:
          type: string
          nullable: true
          description: Room number
          maxLength: 20
        address_line1:
          type: string
          nullable: true
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          description: Address line 2
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          nullable: true
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        established_date:
          type: string
          format: date
          description: Date when department was established
        accreditation_status:
          type: string
          nullable: true
          description: Accreditation status (e.g., NAAC, NBA)
          maxLength: 50
        accreditation_valid_until:
          type: string
          format: date
          nullable: true
          description: Accreditation valid until date
        description:
          type: string
          description: Department description and overview
        mission:
          type: string
          nullable: true
          description: Department mission statement
        vision:
          type: string
          nullable: true
          description: Department vision statement
        objectives:
          type: string
          nullable: true
          description: Department objectives
        max_faculty_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum faculty capacity
        max_student_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum student capacity
        current_faculty_count:
          type: integer
          readOnly: true
          description: Current faculty count
        current_student_count:
          type: integer
          readOnly: true
          description: Current student count
        faculty_utilization_percentage:
          type: string
          readOnly: true
        student_utilization_percentage:
          type: string
          readOnly: true
        annual_budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          nullable: true
          description: Annual budget in local currency
        budget_year:
          type: string
          nullable: true
          description: Budget year (e.g., 2024-2025)
          maxLength: 9
        status:
          $ref: '#/components/schemas/StatusD49Enum'
        is_active:
          type: boolean
          description: Whether department is currently active
        website_url:
          type: string
          format: uri
          nullable: true
          description: Department website URL
          maxLength: 200
        social_media_links:
          description: Social media links (JSON format)
        logo:
          type: string
          format: uri
          nullable: true
          description: Department logo
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        updated_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDepartmentAnnouncement:
      type: object
      description: Serializer for DepartmentAnnouncement model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        title:
          type: string
          description: Announcement title
          maxLength: 200
        content:
          type: string
          description: Announcement content
        announcement_type:
          $ref: '#/components/schemas/AnnouncementTypeEnum'
        priority:
          $ref: '#/components/schemas/Priority1baEnum'
        is_published:
          type: boolean
          description: Whether announcement is published
        publish_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Date when announcement was published
        expiry_date:
          type: string
          format: date-time
          nullable: true
          description: Date when announcement expires
        target_audience:
          type: string
          description: Target audience (ALL, FACULTY, STUDENTS, etc.)
          maxLength: 100
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDepartmentDocument:
      type: object
      description: Serializer for DepartmentDocument model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        title:
          type: string
          description: Document title
          maxLength: 200
        document_type:
          $ref: '#/components/schemas/DepartmentDocumentDocumentTypeEnum'
        description:
          type: string
          nullable: true
          description: Document description
        file:
          type: string
          format: uri
          description: Document file
        file_url:
          type: string
          readOnly: true
        file_size:
          type: string
          readOnly: true
        version:
          type: string
          description: Document version
          maxLength: 20
        is_public:
          type: boolean
          description: Whether document is public
        uploaded_by:
          type: string
          format: uuid
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDepartmentEvent:
      type: object
      description: Serializer for DepartmentEvent model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        description:
          type: string
          description: Event description
        event_type:
          $ref: '#/components/schemas/DepartmentEventEventTypeEnum'
        start_date:
          type: string
          format: date-time
          description: Event start date and time
        end_date:
          type: string
          format: date-time
          description: Event end date and time
        location:
          type: string
          description: Event location
          maxLength: 200
        status:
          $ref: '#/components/schemas/DepartmentEventStatusEnum'
        is_public:
          type: boolean
          description: Whether event is public
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum number of attendees
        registration_required:
          type: boolean
          description: Whether registration is required
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Registration deadline
        organizer:
          type: string
          format: uuid
          nullable: true
          description: Event organizer
        organizer_name:
          type: string
          readOnly: true
        contact_email:
          type: string
          format: email
          nullable: true
          description: Contact email for event
          maxLength: 254
        contact_phone:
          type: string
          nullable: true
          description: Contact phone for event
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        duration_hours:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDepartmentResource:
      type: object
      description: Serializer for DepartmentResource model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        name:
          type: string
          description: Resource name
          maxLength: 200
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        description:
          type: string
          description: Resource description
        location:
          type: string
          description: Resource location
          maxLength: 200
        status:
          $ref: '#/components/schemas/DepartmentResourceStatusEnum'
        purchase_date:
          type: string
          format: date
          nullable: true
          description: Date when resource was purchased
        warranty_expiry:
          type: string
          format: date
          nullable: true
          description: Warranty expiry date
        maintenance_schedule:
          type: string
          nullable: true
          description: Maintenance schedule
        responsible_person:
          type: string
          format: uuid
          nullable: true
          description: Person responsible for this resource
        responsible_person_name:
          type: string
          readOnly: true
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          description: Resource cost
        notes:
          type: string
          nullable: true
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDriver:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        full_name:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 20
        license_number:
          type: string
          maxLength: 64
        license_expiry:
          type: string
          format: date
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
          nullable: true
    PatchedExamAttendance:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        invigilator_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/ExamAttendanceStatusEnum'
        check_in_time:
          type: string
          format: date-time
          nullable: true
        check_out_time:
          type: string
          format: date-time
          nullable: true
        remarks:
          type: string
          description: Any remarks or notes
        exam_registration:
          type: string
          format: uuid
        invigilator:
          type: string
          format: uuid
          nullable: true
    PatchedExamRegistration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        approved_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusC3eEnum'
        registration_date:
          type: string
          format: date-time
          readOnly: true
        approved_date:
          type: string
          format: date-time
          nullable: true
        rejection_reason:
          type: string
          description: Reason for rejection if applicable
        special_requirements:
          type: string
          description: Any special requirements or accommodations
        student:
          type: string
          format: uuid
        exam_schedule:
          type: string
          format: uuid
        approved_by:
          type: string
          format: uuid
          nullable: true
    PatchedExamResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        total_marks:
          type: integer
          readOnly: true
        passing_marks:
          type: integer
          readOnly: true
        evaluated_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        marks_obtained:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        grade:
          allOf:
          - $ref: '#/components/schemas/GradeEnum'
          readOnly: true
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        is_pass:
          type: boolean
          readOnly: true
        remarks:
          type: string
          description: Additional remarks or comments
        evaluated_at:
          type: string
          format: date-time
          nullable: true
        is_published:
          type: boolean
          description: Whether result is published to student
        published_at:
          type: string
          format: date-time
          nullable: true
        exam_registration:
          type: string
          format: uuid
        evaluated_by:
          type: string
          format: uuid
          nullable: true
    PatchedExamRoom:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Room name/number
          maxLength: 100
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum seating capacity
        building:
          type: string
          maxLength: 100
        floor:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        is_accessible:
          type: boolean
          description: Wheelchair accessible
        has_projector:
          type: boolean
        has_air_conditioning:
          type: boolean
        is_active:
          type: boolean
        description:
          type: string
    PatchedExamRoomAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        allocated_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of seats allocated for this exam
        is_primary:
          type: boolean
          description: Primary room for the exam
        notes:
          type: string
          description: Special notes about this allocation
        exam_schedule:
          type: string
          format: uuid
        exam_room:
          type: string
          format: uuid
    PatchedExamSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exam_session_name:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        course_title:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        registrations_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        exam_type:
          $ref: '#/components/schemas/ExamTypeEnum'
        title:
          type: string
          description: Exam title
          maxLength: 200
        description:
          type: string
        exam_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Exam duration in minutes
        total_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total marks for the exam
        passing_marks:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Minimum marks required to pass
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum students that can take this exam
        status:
          $ref: '#/components/schemas/Status739Enum'
        instructions:
          type: string
          description: Special instructions for students
        is_online:
          type: boolean
          description: Whether this is an online exam
        online_platform:
          type: string
          description: Platform for online exams
          maxLength: 100
        exam_session:
          type: string
          format: uuid
        course:
          type: integer
    PatchedExamSession:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        is_registration_open:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        exam_schedules_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Exam session name (e.g., Fall 2024 Mid Semester)
          maxLength: 200
        session_type:
          $ref: '#/components/schemas/SessionTypeEnum'
        academic_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        semester:
          type: integer
          maximum: 8
          minimum: 1
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        registration_start:
          type: string
          format: date-time
          description: When students can start registering for exams
        registration_end:
          type: string
          format: date-time
          description: Last date for exam registration
        status:
          $ref: '#/components/schemas/Status0aeEnum'
        description:
          type: string
        is_active:
          type: boolean
    PatchedExamStaffAssignment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        faculty_name:
          type: string
          readOnly: true
        exam_schedule_title:
          type: string
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_available:
          type: boolean
          description: Whether staff is available for this duty
        assigned_date:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
          description: Special instructions or notes
        exam_schedule:
          type: string
          format: uuid
        faculty:
          type: string
          format: uuid
        exam_room:
          type: string
          format: uuid
          nullable: true
    PatchedExamViolation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        reported_by_name:
          type: string
          readOnly: true
        resolved_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        violation_type:
          $ref: '#/components/schemas/ViolationTypeEnum'
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        description:
          type: string
          description: Detailed description of the violation
        reported_at:
          type: string
          format: date-time
          readOnly: true
        action_taken:
          type: string
          description: Action taken against the violation
        penalty:
          type: string
          description: Penalty imposed
        is_resolved:
          type: boolean
        resolved_at:
          type: string
          format: date-time
          nullable: true
        exam_registration:
          type: string
          format: uuid
        reported_by:
          type: string
          format: uuid
        resolved_by:
          type: string
          format: uuid
          nullable: true
    PatchedFacultyDocument:
      type: object
      description: Serializer for FacultyDocument model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        verified_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        document_type:
          $ref: '#/components/schemas/DocumentType144Enum'
        title:
          type: string
          maxLength: 200
        file:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        is_verified:
          type: boolean
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        faculty:
          type: string
          format: uuid
    PatchedFacultyLeave:
      type: object
      description: Serializer for FacultyLeave model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        approved_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        leave_days:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        leave_type:
          $ref: '#/components/schemas/LeaveTypeEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        reason:
          type: string
        status:
          $ref: '#/components/schemas/Status8dfEnum'
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        rejection_reason:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
    PatchedFacultyPerformance:
      type: object
      description: Serializer for FacultyPerformance model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        evaluated_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        evaluation_period:
          type: string
          description: e.g., Q1, Q2, Q3, Q4, Annual
          maxLength: 50
        teaching_effectiveness:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        student_satisfaction:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        research_contribution:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        administrative_work:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        professional_development:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          description: Score out of 10
        overall_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,1})?$
          readOnly: true
          description: Overall performance score
        strengths:
          type: string
          nullable: true
        areas_for_improvement:
          type: string
          nullable: true
        recommendations:
          type: string
          nullable: true
        evaluation_date:
          type: string
          format: date
        comments:
          type: string
          nullable: true
        faculty:
          type: string
          format: uuid
    PatchedFacultySchedule:
      type: object
      description: Serializer for FacultySchedule model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekC1fEnum'
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        subject:
          type: string
          maxLength: 100
        grade_level:
          type: string
          maxLength: 10
        room_number:
          type: string
          nullable: true
          maxLength: 20
        is_online:
          type: boolean
        meeting_link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        faculty:
          type: string
          format: uuid
    PatchedFacultySubject:
      type: object
      description: Serializer for FacultySubject model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        subject_name:
          type: string
          maxLength: 100
        grade_level:
          type: string
          description: e.g., Grade 1-12, College
          maxLength: 10
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        is_primary_subject:
          type: boolean
        faculty:
          type: string
          format: uuid
    PatchedFacultyUpdate:
      type: object
      description: Serializer for updating faculty information
      properties:
        name:
          type: string
          description: Name of the Faculty
          maxLength: 200
        pan_no:
          type: string
          nullable: true
          description: PAN Number
          maxLength: 10
        highest_degree:
          type: string
          description: Highest Degree
          maxLength: 100
        university:
          type: string
          nullable: true
          description: University
          maxLength: 200
        area_of_specialization:
          type: string
          nullable: true
          description: Area of Specialization
          maxLength: 200
        date_of_joining_institution:
          type: string
          format: date
          description: Date of Joining in this Institution
        designation_at_joining:
          type: string
          description: Designation at Time of Joining in this Institution
          maxLength: 100
        present_designation:
          type: string
          description: Present Designation
          maxLength: 100
        date_designated_as_professor:
          type: string
          format: date
          nullable: true
          description: Date designated as Professor/Associate Professor
        nature_of_association:
          allOf:
          - $ref: '#/components/schemas/NatureOfAssociationEnum'
          description: |-
            Nature of Association

            * `REGULAR` - Regular
            * `CONTRACT` - Contract
            * `AD_HOC` - Ad hoc
        contractual_full_time_part_time:
          nullable: true
          description: |-
            If contractual mention Full time or Part time

            * `FULL_TIME` - Full Time
            * `PART_TIME` - Part Time
          oneOf:
          - $ref: '#/components/schemas/ContractualFullTimePartTimeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        currently_associated:
          type: boolean
          description: Currently Associated (Y/N)
        date_of_leaving:
          type: string
          format: date
          nullable: true
          description: Date of Leaving if any
        experience_in_current_institute:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Experience in years in current institute
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        designation:
          $ref: '#/components/schemas/DesignationEnum'
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        department_ref:
          type: string
          format: uuid
          nullable: true
          description: Department reference
        department_name:
          type: string
          readOnly: true
        employment_type:
          $ref: '#/components/schemas/EmploymentTypeEnum'
        status:
          $ref: '#/components/schemas/Status1e1Enum'
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        alternate_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address_line_1:
          type: string
          maxLength: 255
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 100
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          nullable: true
          maxLength: 200
        year_of_completion:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
        previous_institution:
          type: string
          nullable: true
          maxLength: 200
        achievements:
          type: string
          nullable: true
        research_interests:
          type: string
          nullable: true
        is_head_of_department:
          type: boolean
        is_mentor:
          type: boolean
        mentor_for_grades:
          type: string
          nullable: true
          description: Comma-separated grade levels
          maxLength: 50
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_phone:
          type: string
          maxLength: 15
        emergency_contact_relationship:
          type: string
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        custom_fields:
          description: Custom field values as key-value pairs
    PatchedFeeCategory:
      type: object
      description: Serializer for FeeCategory model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
        display_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeeDiscount:
      type: object
      description: Serializer for FeeDiscount model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        reason:
          type: string
        valid_until:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeeReceipt:
      type: object
      description: Serializer for FeeReceipt model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        payment:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        receipt_number:
          type: string
          readOnly: true
        generated_date:
          type: string
          format: date-time
          readOnly: true
        generated_by:
          type: string
          format: uuid
          nullable: true
        generated_by_username:
          type: string
          readOnly: true
        is_printed:
          type: boolean
        printed_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeeStructure:
      type: object
      description: Serializer for FeeStructure model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        academic_year:
          $ref: '#/components/schemas/AcademicYearEnum'
        grade_level:
          $ref: '#/components/schemas/GradeLevelEnum'
        is_active:
          type: boolean
        description:
          type: string
          nullable: true
        total_amount:
          type: string
          readOnly: true
        fee_details_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeeStructureDetail:
      type: object
      description: Serializer for FeeStructureDetail model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        fee_structure:
          allOf:
          - $ref: '#/components/schemas/FeeStructure'
          readOnly: true
        fee_category:
          allOf:
          - $ref: '#/components/schemas/FeeCategory'
          readOnly: true
        fee_structure_id:
          type: string
          format: uuid
          writeOnly: true
        fee_category_id:
          type: string
          format: uuid
          writeOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        is_optional:
          type: boolean
        due_date:
          type: string
          format: date
          nullable: true
        late_fee_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        late_fee_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeeWaiver:
      type: object
      description: Serializer for FeeWaiver model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        waiver_type:
          $ref: '#/components/schemas/WaiverTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        reason:
          type: string
        approved_by:
          type: string
          format: uuid
          nullable: true
        approved_by_username:
          type: string
          readOnly: true
        approved_date:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/FeedbackCategory'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
          nullable: true
        created_by:
          type: string
          readOnly: true
        is_anonymous:
          type: boolean
        status:
          $ref: '#/components/schemas/FeedbackStatusEnum'
        priority:
          $ref: '#/components/schemas/FeedbackPriorityEnum'
        rating:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        sentiment:
          type: string
          maxLength: 20
        department_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        course_id:
          type: integer
          writeOnly: true
          nullable: true
        section_id:
          type: integer
          writeOnly: true
          nullable: true
        faculty_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        syllabus_id:
          type: integer
          writeOnly: true
          nullable: true
        target_type:
          type: string
          maxLength: 100
        target_id:
          type: string
          maxLength: 64
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackTag'
          readOnly: true
        tag_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedbackAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feedback:
          type: integer
        uploaded_by:
          type: string
          readOnly: true
        file_url:
          type: string
          format: uri
          maxLength: 500
        description:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedbackCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedbackComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feedback:
          type: integer
        commented_by:
          type: string
          readOnly: true
        content:
          type: string
        is_internal:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedbackTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFeedbackVote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        feedback:
          type: integer
        voted_by:
          type: string
          format: uuid
          readOnly: true
        is_upvote:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedGradeScale:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        letter:
          type: string
          maxLength: 2
        description:
          type: string
          description: Grade description (e.g., Outstanding, Excellent)
          maxLength: 50
        min_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Inclusive lower bound (0-100)
        max_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Inclusive upper bound (0-100)
        grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          description: Grade points for the letter (0-10)
        is_active:
          type: boolean
    PatchedGrant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        sponsor:
          type: string
          maxLength: 255
        reference_code:
          type: string
          maxLength: 100
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
    PatchedHallTicket:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        exam_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        exam_date:
          type: string
          format: date
          readOnly: true
        start_time:
          type: string
          format: time
          readOnly: true
        end_time:
          type: string
          format: time
          readOnly: true
        exam_room_name:
          type: string
          readOnly: true
        building:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        ticket_number:
          type: string
          readOnly: true
          description: Unique hall ticket number
        seat_number:
          type: string
          description: Assigned seat number
          maxLength: 20
        status:
          $ref: '#/components/schemas/Status24cEnum'
        generated_date:
          type: string
          format: date-time
          readOnly: true
        printed_date:
          type: string
          format: date-time
          nullable: true
        issued_date:
          type: string
          format: date-time
          nullable: true
        used_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          description: Special instructions or notes
        exam_registration:
          type: string
          format: uuid
        exam_room:
          type: string
          format: uuid
          nullable: true
    PatchedInterviewRound:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        drive:
          type: integer
        name:
          type: string
          maxLength: 255
        round_type:
          $ref: '#/components/schemas/RoundTypeEnum'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
          maxLength: 255
        instructions:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedJobPosting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        location:
          type: string
          maxLength: 255
        work_mode:
          $ref: '#/components/schemas/WorkModeEnum'
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        stipend:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        salary_min:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        salary_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        currency:
          type: string
          maxLength: 10
        skills:
          description: List of required skills
        eligibility_criteria:
          type: string
        application_deadline:
          type: string
          format: date
          nullable: true
        openings:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        posted_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMeeting:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        scheduled_at:
          type: string
          format: date-time
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
        agenda:
          type: string
          nullable: true
          maxLength: 255
        notes:
          type: string
          nullable: true
        mentorship:
          type: string
          format: uuid
        created_by:
          type: string
          format: uuid
          nullable: true
    PatchedMentorship:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        meetings:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
          readOnly: true
        feedback:
          type: array
          items:
            $ref: '#/components/schemas/Feedback'
          readOnly: true
        action_items:
          type: array
          items:
            $ref: '#/components/schemas/ActionItem'
          readOnly: true
        mentor_name:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        objective:
          type: string
          nullable: true
          maxLength: 255
        academic_year:
          type: string
          nullable: true
          description: e.g., 2024-2025
          maxLength: 9
        grade_level:
          type: string
          nullable: true
          maxLength: 2
        section:
          type: string
          nullable: true
          maxLength: 1
        risk_score:
          type: integer
          maximum: 32767
          minimum: 0
          description: 0 (low) to 100 (high)
        risk_factors: {}
        last_risk_evaluated_at:
          type: string
          format: date-time
          nullable: true
        mentor:
          type: string
          format: uuid
        student:
          type: string
          format: uuid
        department_ref:
          type: string
          format: uuid
          nullable: true
    PatchedMidTermGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          format: uuid
        course_section:
          type: integer
        semester:
          type: integer
        midterm_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Marks obtained by student
        total_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Total marks for the exam (e.g., 50, 100)
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          description: Calculated percentage
        midterm_grade:
          type: string
          readOnly: true
        midterm_grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        evaluated_at:
          type: string
          format: date-time
          readOnly: true
        evaluator:
          type: string
          format: uuid
          readOnly: true
          nullable: true
    PatchedOffer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        application:
          type: integer
        offered_role:
          type: string
          maxLength: 255
        package_annual_ctc:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Annual CTC
        joining_location:
          type: string
          maxLength: 255
        joining_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/OfferStatusEnum'
        offered_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
    PatchedPatent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        inventors:
          type: array
          items:
            $ref: '#/components/schemas/Researcher'
          readOnly: true
        inventor_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        project_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        title:
          type: string
          maxLength: 512
        application_number:
          type: string
          maxLength: 128
        grant_number:
          type: string
          maxLength: 128
        filing_date:
          type: string
          format: date
          nullable: true
        grant_date:
          type: string
          format: date
          nullable: true
    PatchedPayment:
      type: object
      description: Serializer for Payment model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        fee_category:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_date:
          type: string
          format: date-time
        transaction_id:
          type: string
          nullable: true
          maxLength: 100
        reference_number:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusF3aEnum'
        receipt_number:
          type: string
          readOnly: true
          nullable: true
        notes:
          type: string
          nullable: true
        collected_by:
          type: string
          format: uuid
          nullable: true
        collected_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPlacementDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        document_type:
          $ref: '#/components/schemas/PlacementDocumentDocumentTypeEnum'
        title:
          type: string
          maxLength: 255
        description:
          type: string
        file:
          type: string
          format: uri
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
          nullable: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        student_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        drive:
          allOf:
          - $ref: '#/components/schemas/PlacementDrive'
          readOnly: true
        drive_id:
          type: integer
          writeOnly: true
          nullable: true
        document_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPlacementDrive:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        drive_type:
          $ref: '#/components/schemas/DriveTypeEnum'
        venue:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        min_cgpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        max_backlogs_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
        batch_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPlacementStatistics:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        department_id:
          type: string
          format: uuid
          writeOnly: true
        program:
          type: string
          readOnly: true
        program_id:
          type: integer
          writeOnly: true
        total_students:
          type: integer
          maximum: 2147483647
          minimum: 0
        eligible_students:
          type: integer
          maximum: 2147483647
          minimum: 0
        placed_students:
          type: integer
          maximum: 2147483647
          minimum: 0
        placement_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
        average_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        highest_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        lowest_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_companies_visited:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_job_offers:
          type: integer
          maximum: 2147483647
          minimum: 0
        students_higher_studies:
          type: integer
          maximum: 2147483647
          minimum: 0
        students_entrepreneurship:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProject:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        status:
          type: string
          maxLength: 30
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        mentorship:
          type: string
          format: uuid
    PatchedPublication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Researcher'
          readOnly: true
        author_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        project_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        title:
          type: string
          maxLength: 512
        publication_type:
          $ref: '#/components/schemas/PublicationTypeEnum'
        venue:
          type: string
          maxLength: 255
        year:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        doi:
          type: string
          maxLength: 128
        open_access_url:
          type: string
          format: uri
          maxLength: 200
    PatchedResearcher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/RNDUser'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        title:
          type: string
          maxLength: 100
        department:
          type: string
          maxLength: 255
        bio:
          type: string
        orcid:
          type: string
          maxLength: 50
        google_scholar_id:
          type: string
          maxLength: 64
    PatchedRoute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
        distance_km:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        is_active:
          type: boolean
        route_stops:
          type: array
          items:
            $ref: '#/components/schemas/RouteStop'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRouteStop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        route:
          type: integer
        stop:
          allOf:
          - $ref: '#/components/schemas/Stop'
          readOnly: true
        stop_id:
          type: integer
          writeOnly: true
        order_index:
          type: integer
          maximum: 2147483647
          minimum: 0
        arrival_offset_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSemesterGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          format: uuid
        course_section:
          type: integer
        semester:
          type: integer
        final_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Marks obtained by student
        total_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Total marks for the exam (e.g., 50, 100)
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          description: Calculated percentage
        final_grade:
          type: string
          readOnly: true
        final_grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        passed:
          type: boolean
          readOnly: true
        evaluated_at:
          type: string
          format: date-time
          readOnly: true
        evaluator:
          type: string
          format: uuid
          readOnly: true
          nullable: true
    PatchedSimpleAssignmentCreate:
      type: object
      description: Create/update with minimal required fields, using existing relations.
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        assignment_type:
          $ref: '#/components/schemas/AssignmentTypeEnum'
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusD19Enum'
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When the assignment becomes visible and open for submissions
        available_until:
          type: string
          format: date-time
          nullable: true
          description: Optional hard close; after this, no submissions are allowed
        academic_year:
          type: integer
          nullable: true
          description: Academic year for this assignment
        semester:
          type: integer
          nullable: true
          description: Semester for this assignment
        department:
          type: string
          format: uuid
          nullable: true
          description: Primary department for this assignment
        course:
          type: integer
          nullable: true
          description: Primary course for this assignment
        course_section:
          type: integer
          nullable: true
          description: Primary course section for this assignment
        assigned_to_departments:
          type: array
          items:
            type: string
            format: uuid
          description: Departments this assignment is assigned to
        assigned_to_courses:
          type: array
          items:
            type: integer
          description: Courses this assignment is assigned to
        assigned_to_course_sections:
          type: array
          items:
            type: integer
          description: Course sections this assignment is assigned to
        is_active:
          type: boolean
    PatchedStop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        landmark:
          type: string
          maxLength: 256
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
    PatchedStudent:
      type: object
      description: Basic student serializer for list views
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          description: Unique roll number/student identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        quota:
          type: integer
          nullable: true
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Academic or admission rank
        status:
          $ref: '#/components/schemas/Status57dEnum'
        has_login:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudentBatch:
      type: object
      description: Serializer for Student Batch model
      properties:
        id:
          type: integer
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        department_code:
          type: string
          readOnly: true
        academic_program:
          type: integer
          nullable: true
        academic_program_name:
          type: string
          readOnly: true
        academic_program_code:
          type: string
          readOnly: true
        academic_year:
          type: integer
        academic_year_display:
          type: string
          readOnly: true
        semester:
          $ref: '#/components/schemas/SemesterEnum'
        semester_name:
          type: string
          readOnly: true
        semester_type:
          type: string
          readOnly: true
        semester_start_date:
          type: string
          readOnly: true
        semester_end_date:
          type: string
          readOnly: true
        semester_is_current:
          type: string
          readOnly: true
        year_of_study:
          $ref: '#/components/schemas/YearOfStudyEnum'
        section:
          $ref: '#/components/schemas/SectionEnum'
        batch_name:
          type: string
          description: e.g., CS-2024-1-A
          maxLength: 100
        batch_code:
          type: string
          description: Unique batch code
          maxLength: 50
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum students per batch
        current_count:
          type: integer
          readOnly: true
          description: Current student count
        available_capacity:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          nullable: true
    PatchedStudentCustomFieldValue:
      type: object
      description: Serializer for student custom field values
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          description: Unique roll number/student identifier
          readOnly: true
        custom_field:
          type: string
          format: uuid
        custom_field_label:
          type: string
          readOnly: true
        custom_field_type:
          allOf:
          - $ref: '#/components/schemas/CustomFieldTypeEnum'
          readOnly: true
        value:
          type: string
          nullable: true
        file_value:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudentDocument:
      type: object
      description: Serializer for student documents
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          description: Unique roll number/student identifier
          readOnly: true
        document_type:
          $ref: '#/components/schemas/StudentDocumentDocumentTypeEnum'
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        document_file:
          type: string
          format: uri
        file_size:
          type: string
          readOnly: true
        file_url:
          type: string
          readOnly: true
        uploaded_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudentDue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        remaining_amount:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        due_type:
          $ref: '#/components/schemas/DueTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusF91Enum'
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        student:
          type: string
          format: uuid
    PatchedStudentEnrollmentHistory:
      type: object
      description: Serializer for student enrollment history
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          description: Unique roll number/student identifier
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        year_of_study:
          $ref: '#/components/schemas/YearOfStudyEnum'
        semester:
          $ref: '#/components/schemas/SemesterEnum'
        enrollment_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status57dEnum'
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudentFee:
      type: object
      description: Serializer for StudentFee model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        fee_structure_detail:
          type: string
          format: uuid
        fee_category_name:
          type: string
          readOnly: true
        fee_structure_name:
          type: string
          readOnly: true
        academic_year:
          type: string
          maxLength: 9
        due_date:
          type: string
          format: date
        amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        late_fee_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status58dEnum'
        notes:
          type: string
          nullable: true
        balance_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        is_overdue:
          type: boolean
          readOnly: true
        total_amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudentUpdate:
      type: object
      description: Serializer for updating existing students
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          readOnly: true
          description: Unique roll number/student identifier
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address_line1:
          type: string
          nullable: true
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        quota:
          type: integer
          nullable: true
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Academic or admission rank
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        department_name:
          type: string
          readOnly: true
        department_code:
          type: string
          readOnly: true
        academic_program_name:
          type: string
          readOnly: true
        academic_program_code:
          type: string
          readOnly: true
        academic_year_display:
          type: string
          readOnly: true
        semester_name:
          type: string
          readOnly: true
        village:
          type: string
          nullable: true
          maxLength: 200
        aadhar_number:
          type: string
          nullable: true
          description: 12-digit Aadhar number
          pattern: ^\d{12}$
          maxLength: 12
        religion:
          type: integer
          nullable: true
        caste:
          type: integer
          nullable: true
        subcaste:
          type: string
          nullable: true
          maxLength: 100
        father_name:
          type: string
          nullable: true
          maxLength: 200
        mother_name:
          type: string
          nullable: true
          maxLength: 200
        father_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        mother_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        enrollment_date:
          type: string
          format: date
        expected_graduation_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status57dEnum'
        guardian_name:
          type: string
          nullable: true
          maxLength: 200
        guardian_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        guardian_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        guardian_relationship:
          type: string
          nullable: true
          description: e.g., Father, Mother, Guardian, etc.
          maxLength: 50
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 200
        emergency_contact_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relationship:
          type: string
          nullable: true
          maxLength: 50
        medical_conditions:
          type: string
          nullable: true
          description: Any medical conditions or allergies
        medications:
          type: string
          nullable: true
          description: Current medications
        notes:
          type: string
          nullable: true
          description: Additional notes about the student
        profile_picture:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSyllabus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        version:
          type: string
          description: Syllabus version
          maxLength: 20
        academic_year:
          type: string
          description: Academic year (e.g., 2024-2025)
          maxLength: 9
        semester:
          type: string
          description: Semester (e.g., Fall, Spring)
          maxLength: 20
        learning_objectives:
          type: string
          description: Course learning objectives
        course_outline:
          type: string
          description: Detailed course outline
        assessment_methods:
          type: string
          description: Assessment and evaluation methods
        grading_policy:
          type: string
          description: Grading policy and criteria
        textbooks:
          type: string
          description: Required and recommended textbooks
        additional_resources:
          type: string
          description: Additional learning resources
        status:
          $ref: '#/components/schemas/StatusD77Enum'
        approved_by:
          type: string
          readOnly: true
        approved_at:
          type: string
          format: date-time
          nullable: true
        topics:
          type: array
          items:
            $ref: '#/components/schemas/SyllabusTopic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSyllabusTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        week_number:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Week number in the semester
        title:
          type: string
          description: Topic title
          maxLength: 200
        description:
          type: string
          description: Topic description
        learning_outcomes:
          type: string
          description: Specific learning outcomes for this topic
        readings:
          type: string
          description: Required readings for this topic
        activities:
          type: string
          description: Learning activities and assignments
        duration_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in hours
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order within the week
    PatchedTimetable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: string
          readOnly: true
        timetable_type:
          $ref: '#/components/schemas/TimetableTypeEnum'
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekCa4Enum'
        day_of_week_display:
          type: string
          readOnly: true
        start_time:
          type: string
          format: time
          description: Class start time
        end_time:
          type: string
          format: time
          description: Class end time
        room:
          type: string
          description: Classroom or venue
          maxLength: 50
        faculty:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether this timetable entry is active
        notes:
          type: string
          description: Additional notes
        duration_minutes:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTransportPass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        pass_type:
          $ref: '#/components/schemas/PassTypeEnum'
        valid_from:
          type: string
          format: date
        valid_to:
          type: string
          format: date
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
        route:
          type: integer
        start_stop:
          type: integer
        end_stop:
          type: integer
    PatchedTripSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        day_of_week:
          allOf:
          - $ref: '#/components/schemas/TripScheduleDayOfWeekEnum'
          minimum: -2147483648
          maximum: 2147483647
        departure_time:
          type: string
          format: time
        return_time:
          type: string
          format: time
          nullable: true
        effective_from:
          type: string
          format: date
        effective_to:
          type: string
          format: date
          nullable: true
        assignment:
          type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_active:
          type: boolean
        is_verified:
          type: boolean
        date_joined:
          type: string
          format: date-time
        groups:
          type: string
          readOnly: true
        permissions:
          type: string
          readOnly: true
    PatchedVehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        number_plate:
          type: string
          maxLength: 32
        registration_number:
          type: string
          maxLength: 64
        make:
          type: string
          maxLength: 64
        model:
          type: string
          maxLength: 64
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
        year_of_manufacture:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        is_active:
          type: boolean
    PatchedVehicleAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        vehicle:
          type: integer
        driver:
          type: integer
          nullable: true
        route:
          type: integer
    Patent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        inventors:
          type: array
          items:
            $ref: '#/components/schemas/Researcher'
          readOnly: true
        inventor_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        project_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        title:
          type: string
          maxLength: 512
        application_number:
          type: string
          maxLength: 128
        grant_number:
          type: string
          maxLength: 128
        filing_date:
          type: string
          format: date
          nullable: true
        grant_date:
          type: string
          format: date
          nullable: true
      required:
      - id
      - inventors
      - projects
      - title
    Payment:
      type: object
      description: Serializer for Payment model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        fee_category:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_date:
          type: string
          format: date-time
        transaction_id:
          type: string
          nullable: true
          maxLength: 100
        reference_number:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusF3aEnum'
        receipt_number:
          type: string
          readOnly: true
          nullable: true
        notes:
          type: string
          nullable: true
        collected_by:
          type: string
          format: uuid
          nullable: true
        collected_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - collected_by_username
      - created_at
      - fee_category
      - id
      - payment_method
      - receipt_number
      - student_fee
      - student_name
      - student_roll_number
      - updated_at
    PaymentMethodEnum:
      enum:
      - CASH
      - CHEQUE
      - BANK_TRANSFER
      - ONLINE
      - CARD
      - UPI
      - OTHER
      type: string
      description: |-
        * `CASH` - Cash
        * `CHEQUE` - Cheque
        * `BANK_TRANSFER` - Bank Transfer
        * `ONLINE` - Online Payment
        * `CARD` - Credit/Debit Card
        * `UPI` - UPI
        * `OTHER` - Other
    PaymentNested:
      type: object
      description: Nested serializer for Payment with full details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_fee:
          $ref: '#/components/schemas/StudentFee'
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        fee_category:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_date:
          type: string
          format: date-time
        transaction_id:
          type: string
          nullable: true
          maxLength: 100
        reference_number:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusF3aEnum'
        receipt_number:
          type: string
          readOnly: true
          nullable: true
        notes:
          type: string
          nullable: true
        collected_by:
          type: string
          format: uuid
          nullable: true
        collected_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - collected_by_username
      - created_at
      - fee_category
      - id
      - payment_method
      - receipt_number
      - student_fee
      - student_name
      - student_roll_number
      - updated_at
    PlacementDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        document_type:
          $ref: '#/components/schemas/PlacementDocumentDocumentTypeEnum'
        title:
          type: string
          maxLength: 255
        description:
          type: string
        file:
          type: string
          format: uri
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
          nullable: true
        student:
          allOf:
          - $ref: '#/components/schemas/Student'
          readOnly: true
        student_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        drive:
          allOf:
          - $ref: '#/components/schemas/PlacementDrive'
          readOnly: true
        drive_id:
          type: integer
          writeOnly: true
          nullable: true
        document_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - created_at
      - created_by
      - document_date
      - document_type
      - drive
      - file
      - id
      - student
      - title
      - updated_at
    PlacementDocumentDocumentTypeEnum:
      enum:
      - MOU
      - AGREEMENT
      - OFFER_LETTER
      - JOINING_LETTER
      - VERIFICATION
      - OTHER
      type: string
      description: |-
        * `MOU` - Memorandum of Understanding
        * `AGREEMENT` - Placement Agreement
        * `OFFER_LETTER` - Offer Letter
        * `JOINING_LETTER` - Joining Letter
        * `VERIFICATION` - Placement Verification
        * `OTHER` - Other
    PlacementDrive:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        drive_type:
          $ref: '#/components/schemas/DriveTypeEnum'
        venue:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        min_cgpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        max_backlogs_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
        batch_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - company
      - company_id
      - created_at
      - id
      - start_date
      - title
      - updated_at
    PlacementStatistics:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2024-2025
          maxLength: 9
        department:
          allOf:
          - $ref: '#/components/schemas/Department'
          readOnly: true
        department_id:
          type: string
          format: uuid
          writeOnly: true
        program:
          type: string
          readOnly: true
        program_id:
          type: integer
          writeOnly: true
        total_students:
          type: integer
          maximum: 2147483647
          minimum: 0
        eligible_students:
          type: integer
          maximum: 2147483647
          minimum: 0
        placed_students:
          type: integer
          maximum: 2147483647
          minimum: 0
        placement_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
        average_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        highest_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        lowest_salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_companies_visited:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_job_offers:
          type: integer
          maximum: 2147483647
          minimum: 0
        students_higher_studies:
          type: integer
          maximum: 2147483647
          minimum: 0
        students_entrepreneurship:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - created_at
      - department
      - department_id
      - id
      - placement_percentage
      - program
      - program_id
      - updated_at
    Priority1baEnum:
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - URGENT
      type: string
      description: |-
        * `LOW` - Low
        * `MEDIUM` - Medium
        * `HIGH` - High
        * `URGENT` - Urgent
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        role:
          type: string
          nullable: true
          maxLength: 255
        technologies: {}
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        repository_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - created_at
      - id
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - title
      - updated_at
    ProjectDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        principal_investigator:
          allOf:
          - $ref: '#/components/schemas/Researcher'
          readOnly: true
        principal_investigator_id:
          type: integer
          writeOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/Researcher'
          readOnly: true
        member_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          readOnly: true
        grant_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
          readOnly: true
        patents:
          type: array
          items:
            $ref: '#/components/schemas/Patent'
          readOnly: true
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
          readOnly: true
        collaborations:
          type: array
          items:
            $ref: '#/components/schemas/Collaboration'
          readOnly: true
        title:
          type: string
          maxLength: 255
        abstract:
          type: string
        status:
          $ref: '#/components/schemas/ProjectDetailStatusEnum'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        keywords: {}
      required:
      - collaborations
      - datasets
      - grants
      - id
      - members
      - patents
      - principal_investigator
      - principal_investigator_id
      - publications
      - title
    ProjectDetailStatusEnum:
      enum:
      - draft
      - active
      - paused
      - completed
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `active` - Active
        * `paused` - Paused
        * `completed` - Completed
        * `cancelled` - Cancelled
    Publication:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        title:
          type: string
          maxLength: 255
        authors:
          type: string
          maxLength: 255
        journal_or_conference:
          type: string
          nullable: true
          maxLength: 255
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        doi:
          type: string
          nullable: true
          maxLength: 128
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - authors
      - created_at
      - id
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - title
      - updated_at
    PublicationTypeEnum:
      enum:
      - journal
      - conference
      - book
      - preprint
      - other
      type: string
      description: |-
        * `journal` - Journal
        * `conference` - Conference
        * `book` - Book
        * `preprint` - Preprint
        * `other` - Other
    RNDUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - id
    Register:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - email
      - id
      - password
    Researcher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/RNDUser'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        title:
          type: string
          maxLength: 100
        department:
          type: string
          maxLength: 255
        bio:
          type: string
        orcid:
          type: string
          maxLength: 50
        google_scholar_id:
          type: string
          maxLength: 64
      required:
      - id
      - user
      - user_id
    ResearcherDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/RNDUser'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        led_projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
          readOnly: true
        patents:
          type: array
          items:
            $ref: '#/components/schemas/Patent'
          readOnly: true
        title:
          type: string
          maxLength: 100
        department:
          type: string
          maxLength: 255
        bio:
          type: string
        orcid:
          type: string
          maxLength: 50
        google_scholar_id:
          type: string
          maxLength: 64
      required:
      - id
      - led_projects
      - patents
      - projects
      - publications
      - user
      - user_id
    ResourceTypeEnum:
      enum:
      - LABORATORY
      - LIBRARY
      - EQUIPMENT
      - SOFTWARE
      - FACILITY
      - VEHICLE
      - OTHER
      type: string
      description: |-
        * `LABORATORY` - Laboratory
        * `LIBRARY` - Library
        * `EQUIPMENT` - Equipment
        * `SOFTWARE` - Software
        * `FACILITY` - Facility
        * `VEHICLE` - Vehicle
        * `OTHER` - Other
    ResumeProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        headline:
          type: string
          nullable: true
          maxLength: 255
        summary:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 255
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        links: {}
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - created_at
      - id
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - updated_at
    RoleEnum:
      enum:
      - INVIGILATOR
      - CHIEF_INVIGILATOR
      - DEPUTY_CHIEF
      - OBSERVER
      - TECHNICAL_SUPPORT
      - SECURITY
      - CLEANING
      type: string
      description: |-
        * `INVIGILATOR` - Invigilator
        * `CHIEF_INVIGILATOR` - Chief Invigilator
        * `DEPUTY_CHIEF` - Deputy Chief Invigilator
        * `OBSERVER` - Observer
        * `TECHNICAL_SUPPORT` - Technical Support
        * `SECURITY` - Security Staff
        * `CLEANING` - Cleaning Staff
    RollOrEmailToken:
      type: object
      description: Custom token serializer accepting roll number or email as username
        field.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        username:
          type: string
      required:
      - password
    RoomTypeEnum:
      enum:
      - CLASSROOM
      - LAB
      - AUDITORIUM
      - HALL
      - ONLINE
      - OUTDOOR
      type: string
      description: |-
        * `CLASSROOM` - Classroom
        * `LAB` - Laboratory
        * `AUDITORIUM` - Auditorium
        * `HALL` - Examination Hall
        * `ONLINE` - Online Platform
        * `OUTDOOR` - Outdoor Venue
    RoundTypeEnum:
      enum:
      - APTITUDE
      - TECH_TEST
      - GD
      - TECH_INTERVIEW
      - HR_INTERVIEW
      - OTHER
      type: string
      description: |-
        * `APTITUDE` - Aptitude Test
        * `TECH_TEST` - Technical Test
        * `GD` - Group Discussion
        * `TECH_INTERVIEW` - Technical Interview
        * `HR_INTERVIEW` - HR Interview
        * `OTHER` - Other
    Route:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
        distance_km:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        is_active:
          type: boolean
        route_stops:
          type: array
          items:
            $ref: '#/components/schemas/RouteStop'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - route_stops
      - updated_at
    RouteStop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        route:
          type: integer
        stop:
          allOf:
          - $ref: '#/components/schemas/Stop'
          readOnly: true
        stop_id:
          type: integer
          writeOnly: true
        order_index:
          type: integer
          maximum: 2147483647
          minimum: 0
        arrival_offset_min:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - route
      - stop
      - stop_id
      - updated_at
    RubricTypeEnum:
      enum:
      - ANALYTIC
      - HOLISTIC
      - CHECKLIST
      type: string
      description: |-
        * `ANALYTIC` - Analytic Rubric
        * `HOLISTIC` - Holistic Rubric
        * `CHECKLIST` - Checklist Rubric
    ScheduleTypeEnum:
      enum:
      - WEEKLY
      - MONTHLY
      - SEMESTER
      - CUSTOM
      type: string
      description: |-
        * `WEEKLY` - Weekly
        * `MONTHLY` - Monthly
        * `SEMESTER` - Per Semester
        * `CUSTOM` - Custom Interval
    SectionEnum:
      enum:
      - A
      - B
      - C
      - D
      - E
      - F
      - G
      - H
      - I
      - J
      - K
      - L
      - M
      - N
      - O
      - P
      - Q
      - R
      - S
      - T
      type: string
      description: |-
        * `A` - Section A
        * `B` - Section B
        * `C` - Section C
        * `D` - Section D
        * `E` - Section E
        * `F` - Section F
        * `G` - Section G
        * `H` - Section H
        * `I` - Section I
        * `J` - Section J
        * `K` - Section K
        * `L` - Section L
        * `M` - Section M
        * `N` - Section N
        * `O` - Section O
        * `P` - Section P
        * `Q` - Section Q
        * `R` - Section R
        * `S` - Section S
        * `T` - Section T
    SectionTypeEnum:
      enum:
      - LECTURE
      - LAB
      - TUTORIAL
      - SEMINAR
      - WORKSHOP
      type: string
      description: |-
        * `LECTURE` - Lecture
        * `LAB` - Laboratory
        * `TUTORIAL` - Tutorial
        * `SEMINAR` - Seminar
        * `WORKSHOP` - Workshop
    SemesterEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      type: string
      description: |-
        * `1` - Semester 1
        * `2` - Semester 2
        * `3` - Semester 3
        * `4` - Semester 4
        * `5` - Semester 5
        * `6` - Semester 6
        * `7` - Semester 7
        * `8` - Semester 8
        * `9` - Semester 9
        * `10` - Semester 10
    SemesterGPA:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          format: uuid
        semester:
          type: integer
        sgpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
          description: Semester Grade Point Average
        total_credits:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total credits earned in this semester
        total_quality_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Total quality points earned
        academic_standing:
          oneOf:
          - $ref: '#/components/schemas/AcademicStandingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - semester
      - student
      - updated_at
    SemesterGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
          format: uuid
        course_section:
          type: integer
        semester:
          type: integer
        final_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Marks obtained by student
        total_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: Total marks for the exam (e.g., 50, 100)
        percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          description: Calculated percentage
        final_grade:
          type: string
          readOnly: true
        final_grade_points:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        passed:
          type: boolean
          readOnly: true
        evaluated_at:
          type: string
          format: date-time
          readOnly: true
        evaluator:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - course_section
      - evaluated_at
      - evaluator
      - final_grade
      - final_grade_points
      - id
      - passed
      - percentage
      - semester
      - student
    SessionTypeEnum:
      enum:
      - MID_SEM
      - END_SEM
      - QUIZ
      - ASSIGNMENT
      - PROJECT
      - PRACTICAL
      - VIVA
      - THESIS
      type: string
      description: |-
        * `MID_SEM` - Mid Semester
        * `END_SEM` - End Semester
        * `QUIZ` - Quiz
        * `ASSIGNMENT` - Assignment
        * `PROJECT` - Project
        * `PRACTICAL` - Practical
        * `VIVA` - Viva Voce
        * `THESIS` - Thesis Defense
    SeverityEnum:
      enum:
      - MINOR
      - MODERATE
      - MAJOR
      - CRITICAL
      type: string
      description: |-
        * `MINOR` - Minor
        * `MODERATE` - Moderate
        * `MAJOR` - Major
        * `CRITICAL` - Critical
    SimpleAssignment:
      type: object
      description: Lightweight serializer exposing only core fields and simple relationships.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        assignment_type:
          $ref: '#/components/schemas/AssignmentTypeEnum'
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusD19Enum'
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When the assignment becomes visible and open for submissions
        available_until:
          type: string
          format: date-time
          nullable: true
          description: Optional hard close; after this, no submissions are allowed
        published_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when status first became PUBLISHED
        is_active:
          type: boolean
        faculty:
          type: string
          format: uuid
          readOnly: true
        faculty_name:
          type: string
          readOnly: true
        academic_year:
          type: integer
          nullable: true
          description: Academic year for this assignment
        semester:
          type: integer
          nullable: true
          description: Semester for this assignment
        department:
          type: string
          format: uuid
          nullable: true
          description: Primary department for this assignment
        department_name:
          type: string
          readOnly: true
        course:
          type: integer
          nullable: true
          description: Primary course for this assignment
        course_code:
          type: string
          readOnly: true
        course_section:
          type: integer
          nullable: true
          description: Primary course section for this assignment
        section_display:
          type: string
          readOnly: true
        department_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        course_ids:
          type: array
          items:
            type: integer
          readOnly: true
        section_ids:
          type: array
          items:
            type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course_code
      - course_ids
      - created_at
      - department_ids
      - department_name
      - description
      - due_date
      - faculty
      - faculty_name
      - id
      - max_marks
      - section_display
      - section_ids
      - title
      - updated_at
    SimpleAssignmentCreate:
      type: object
      description: Create/update with minimal required fields, using existing relations.
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        assignment_type:
          $ref: '#/components/schemas/AssignmentTypeEnum'
        max_marks:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusD19Enum'
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When the assignment becomes visible and open for submissions
        available_until:
          type: string
          format: date-time
          nullable: true
          description: Optional hard close; after this, no submissions are allowed
        academic_year:
          type: integer
          nullable: true
          description: Academic year for this assignment
        semester:
          type: integer
          nullable: true
          description: Semester for this assignment
        department:
          type: string
          format: uuid
          nullable: true
          description: Primary department for this assignment
        course:
          type: integer
          nullable: true
          description: Primary course for this assignment
        course_section:
          type: integer
          nullable: true
          description: Primary course section for this assignment
        assigned_to_departments:
          type: array
          items:
            type: string
            format: uuid
          description: Departments this assignment is assigned to
        assigned_to_courses:
          type: array
          items:
            type: integer
          description: Courses this assignment is assigned to
        assigned_to_course_sections:
          type: array
          items:
            type: integer
          description: Course sections this assignment is assigned to
        is_active:
          type: boolean
      required:
      - description
      - due_date
      - max_marks
      - title
    Skill:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner_type:
          type: string
          writeOnly: true
        owner_id:
          type: string
          format: uuid
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner_object_id:
          type: string
          format: uuid
        is_public:
          type: boolean
        name:
          type: string
          maxLength: 120
        proficiency:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        years_of_experience:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          nullable: true
        is_core:
          type: boolean
        created_by:
          type: string
          format: uuid
          nullable: true
        updated_by:
          type: string
          format: uuid
          nullable: true
        owner_content_type:
          type: integer
      required:
      - created_at
      - id
      - name
      - owner_content_type
      - owner_id
      - owner_object_id
      - owner_type
      - updated_at
    Status0aeEnum:
      enum:
      - DRAFT
      - PUBLISHED
      - ONGOING
      - COMPLETED
      - CANCELLED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `PUBLISHED` - Published
        * `ONGOING` - Ongoing
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
    Status1e1Enum:
      enum:
      - ACTIVE
      - INACTIVE
      - ON_LEAVE
      - RETIRED
      - TERMINATED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `INACTIVE` - Inactive
        * `ON_LEAVE` - On Leave
        * `RETIRED` - Retired
        * `TERMINATED` - Terminated
    Status24cEnum:
      enum:
      - DRAFT
      - GENERATED
      - PRINTED
      - ISSUED
      - USED
      - EXPIRED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `GENERATED` - Generated
        * `PRINTED` - Printed
        * `ISSUED` - Issued to Student
        * `USED` - Used in Exam
        * `EXPIRED` - Expired
    Status57dEnum:
      enum:
      - ACTIVE
      - INACTIVE
      - GRADUATED
      - SUSPENDED
      - DROPPED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `INACTIVE` - Inactive
        * `GRADUATED` - Graduated
        * `SUSPENDED` - Suspended
        * `DROPPED` - Dropped Out
    Status58dEnum:
      enum:
      - PENDING
      - PAID
      - PARTIAL
      - OVERDUE
      - WAIVED
      - CANCELLED
      type: string
      description: |-
        * `PENDING` - Pending
        * `PAID` - Paid
        * `PARTIAL` - Partially Paid
        * `OVERDUE` - Overdue
        * `WAIVED` - Waived
        * `CANCELLED` - Cancelled
    Status739Enum:
      enum:
      - SCHEDULED
      - ONGOING
      - COMPLETED
      - CANCELLED
      - POSTPONED
      type: string
      description: |-
        * `SCHEDULED` - Scheduled
        * `ONGOING` - Ongoing
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
        * `POSTPONED` - Postponed
    Status8dfEnum:
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - CANCELLED
      type: string
      description: |-
        * `PENDING` - Pending
        * `APPROVED` - Approved
        * `REJECTED` - Rejected
        * `CANCELLED` - Cancelled
    Status917Enum:
      enum:
      - ENROLLED
      - DROPPED
      - COMPLETED
      - WITHDRAWN
      - WAITLISTED
      - PENDING
      type: string
      description: |-
        * `ENROLLED` - Enrolled
        * `DROPPED` - Dropped
        * `COMPLETED` - Completed
        * `WITHDRAWN` - Withdrawn
        * `WAITLISTED` - Waitlisted
        * `PENDING` - Pending Approval
    StatusA19Enum:
      enum:
      - ACTIVE
      - INACTIVE
      - COMPLETED
      - CANCELLED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `INACTIVE` - Inactive
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
    StatusC3eEnum:
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - CANCELLED
      - COMPLETED
      type: string
      description: |-
        * `PENDING` - Pending Approval
        * `APPROVED` - Approved
        * `REJECTED` - Rejected
        * `CANCELLED` - Cancelled
        * `COMPLETED` - Completed
    StatusD19Enum:
      enum:
      - DRAFT
      - PUBLISHED
      - CLOSED
      - CANCELLED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `PUBLISHED` - Published
        * `CLOSED` - Closed
        * `CANCELLED` - Cancelled
    StatusD49Enum:
      enum:
      - ACTIVE
      - INACTIVE
      - SUSPENDED
      - MERGED
      - DISSOLVED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `INACTIVE` - Inactive
        * `SUSPENDED` - Suspended
        * `MERGED` - Merged
        * `DISSOLVED` - Dissolved
    StatusD77Enum:
      enum:
      - DRAFT
      - REVIEW
      - APPROVED
      - ACTIVE
      - ARCHIVED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `REVIEW` - Under Review
        * `APPROVED` - Approved
        * `ACTIVE` - Active
        * `ARCHIVED` - Archived
    StatusEf3Enum:
      enum:
      - ACTIVE
      - INACTIVE
      - DRAFT
      - ARCHIVED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `INACTIVE` - Inactive
        * `DRAFT` - Draft
        * `ARCHIVED` - Archived
    StatusF3aEnum:
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      - CANCELLED
      - REFUNDED
      type: string
      description: |-
        * `PENDING` - Pending
        * `COMPLETED` - Completed
        * `FAILED` - Failed
        * `CANCELLED` - Cancelled
        * `REFUNDED` - Refunded
    StatusF91Enum:
      enum:
      - PENDING
      - PAID
      - PARTIAL
      - WAIVED
      - OVERDUE
      type: string
      description: |-
        * `PENDING` - Pending
        * `PAID` - Paid
        * `PARTIAL` - Partially Paid
        * `WAIVED` - Waived
        * `OVERDUE` - Overdue
    Stop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        landmark:
          type: string
          maxLength: 256
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
      required:
      - created_at
      - id
      - landmark
      - name
      - updated_at
    Student:
      type: object
      description: Serializer for Student model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          description: Unique roll number/student identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address_line1:
          type: string
          nullable: true
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        quota:
          type: integer
          nullable: true
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Academic or admission rank
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        department_name:
          type: string
          readOnly: true
        department_code:
          type: string
          readOnly: true
        academic_program_name:
          type: string
          readOnly: true
        academic_program_code:
          type: string
          readOnly: true
        academic_year_display:
          type: string
          readOnly: true
        semester_name:
          type: string
          readOnly: true
        village:
          type: string
          nullable: true
          maxLength: 200
        aadhar_number:
          type: string
          nullable: true
          description: 12-digit Aadhar number
          pattern: ^\d{12}$
          maxLength: 12
        religion:
          type: integer
          nullable: true
        caste:
          type: integer
          nullable: true
        subcaste:
          type: string
          nullable: true
          maxLength: 100
        father_name:
          type: string
          nullable: true
          maxLength: 200
        mother_name:
          type: string
          nullable: true
          maxLength: 200
        father_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        mother_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        enrollment_date:
          type: string
          format: date
        expected_graduation_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status57dEnum'
        guardian_name:
          type: string
          nullable: true
          maxLength: 200
        guardian_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        guardian_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        guardian_relationship:
          type: string
          nullable: true
          description: e.g., Father, Mother, Guardian, etc.
          maxLength: 50
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 200
        emergency_contact_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relationship:
          type: string
          nullable: true
          maxLength: 50
        medical_conditions:
          type: string
          nullable: true
          description: Any medical conditions or allergies
        medications:
          type: string
          nullable: true
          description: Current medications
        notes:
          type: string
          nullable: true
          description: Additional notes about the student
        profile_picture:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_program_code
      - academic_program_name
      - academic_year_display
      - age
      - created_at
      - date_of_birth
      - department_code
      - department_name
      - first_name
      - full_address
      - full_name
      - gender
      - id
      - last_name
      - roll_number
      - semester_name
      - updated_at
    StudentBatch:
      type: object
      description: Serializer for Student Batch model
      properties:
        id:
          type: integer
          readOnly: true
        department:
          type: string
          format: uuid
        department_name:
          type: string
          readOnly: true
        department_code:
          type: string
          readOnly: true
        academic_program:
          type: integer
          nullable: true
        academic_program_name:
          type: string
          readOnly: true
        academic_program_code:
          type: string
          readOnly: true
        academic_year:
          type: integer
        academic_year_display:
          type: string
          readOnly: true
        semester:
          $ref: '#/components/schemas/SemesterEnum'
        semester_name:
          type: string
          readOnly: true
        semester_type:
          type: string
          readOnly: true
        semester_start_date:
          type: string
          readOnly: true
        semester_end_date:
          type: string
          readOnly: true
        semester_is_current:
          type: string
          readOnly: true
        year_of_study:
          $ref: '#/components/schemas/YearOfStudyEnum'
        section:
          $ref: '#/components/schemas/SectionEnum'
        batch_name:
          type: string
          description: e.g., CS-2024-1-A
          maxLength: 100
        batch_code:
          type: string
          description: Unique batch code
          maxLength: 50
        max_capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum students per batch
        current_count:
          type: integer
          readOnly: true
          description: Current student count
        available_capacity:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          nullable: true
      required:
      - academic_program_code
      - academic_program_name
      - academic_year
      - academic_year_display
      - available_capacity
      - batch_code
      - batch_name
      - created_at
      - current_count
      - department
      - department_code
      - department_name
      - id
      - is_full
      - section
      - semester_end_date
      - semester_is_current
      - semester_name
      - semester_start_date
      - semester_type
      - updated_at
      - year_of_study
    StudentCreate:
      type: object
      description: Serializer for creating new students with required fields
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          description: Unique roll number/student identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address_line1:
          type: string
          nullable: true
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        quota:
          type: integer
          nullable: true
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Academic or admission rank
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        department_name:
          type: string
          readOnly: true
        department_code:
          type: string
          readOnly: true
        academic_program_name:
          type: string
          readOnly: true
        academic_program_code:
          type: string
          readOnly: true
        academic_year_display:
          type: string
          readOnly: true
        semester_name:
          type: string
          readOnly: true
        village:
          type: string
          nullable: true
          maxLength: 200
        aadhar_number:
          type: string
          nullable: true
          description: 12-digit Aadhar number
          pattern: ^\d{12}$
          maxLength: 12
        religion:
          type: integer
          nullable: true
        caste:
          type: integer
          nullable: true
        subcaste:
          type: string
          nullable: true
          maxLength: 100
        father_name:
          type: string
          nullable: true
          maxLength: 200
        mother_name:
          type: string
          nullable: true
          maxLength: 200
        father_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        mother_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        enrollment_date:
          type: string
          format: date
        expected_graduation_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status57dEnum'
        guardian_name:
          type: string
          nullable: true
          maxLength: 200
        guardian_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        guardian_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        guardian_relationship:
          type: string
          nullable: true
          description: e.g., Father, Mother, Guardian, etc.
          maxLength: 50
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 200
        emergency_contact_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relationship:
          type: string
          nullable: true
          maxLength: 50
        medical_conditions:
          type: string
          nullable: true
          description: Any medical conditions or allergies
        medications:
          type: string
          nullable: true
          description: Current medications
        notes:
          type: string
          nullable: true
          description: Additional notes about the student
        profile_picture:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_program_code
      - academic_program_name
      - academic_year_display
      - age
      - created_at
      - date_of_birth
      - department_code
      - department_name
      - first_name
      - full_address
      - full_name
      - gender
      - id
      - last_name
      - roll_number
      - semester_name
      - updated_at
    StudentCustomFieldValue:
      type: object
      description: Serializer for student custom field values
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          description: Unique roll number/student identifier
          readOnly: true
        custom_field:
          type: string
          format: uuid
        custom_field_label:
          type: string
          readOnly: true
        custom_field_type:
          allOf:
          - $ref: '#/components/schemas/CustomFieldTypeEnum'
          readOnly: true
        value:
          type: string
          nullable: true
        file_value:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - custom_field
      - custom_field_label
      - custom_field_type
      - id
      - student
      - student_name
      - student_roll_number
      - updated_at
    StudentDetail:
      type: object
      description: Detailed student serializer for single student views
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          description: Unique roll number/student identifier
          maxLength: 20
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        quota:
          type: integer
          nullable: true
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Academic or admission rank
        status:
          $ref: '#/components/schemas/Status57dEnum'
        has_login:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        father_name:
          type: string
          nullable: true
          maxLength: 200
        mother_name:
          type: string
          nullable: true
          maxLength: 200
        father_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        mother_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        full_address:
          type: string
          readOnly: true
        village:
          type: string
          nullable: true
          maxLength: 200
        aadhar_number:
          type: string
          nullable: true
          description: 12-digit Aadhar number
          pattern: ^\d{12}$
          maxLength: 12
        religion:
          type: integer
          nullable: true
        caste:
          type: integer
          nullable: true
        subcaste:
          type: string
          nullable: true
          maxLength: 100
        user_info:
          type: string
          readOnly: true
        recent_sessions:
          type: string
          readOnly: true
      required:
      - age
      - created_at
      - date_of_birth
      - first_name
      - full_address
      - full_name
      - gender
      - has_login
      - id
      - last_name
      - recent_sessions
      - roll_number
      - updated_at
      - user_info
    StudentDocument:
      type: object
      description: Serializer for student documents
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          description: Unique roll number/student identifier
          readOnly: true
        document_type:
          $ref: '#/components/schemas/StudentDocumentDocumentTypeEnum'
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        document_file:
          type: string
          format: uri
        file_size:
          type: string
          readOnly: true
        file_url:
          type: string
          readOnly: true
        uploaded_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - document_file
      - document_type
      - file_size
      - file_url
      - id
      - student
      - student_name
      - student_roll_number
      - title
      - updated_at
      - uploaded_by
      - uploaded_by_name
    StudentDocumentDocumentTypeEnum:
      enum:
      - BIRTH_CERT
      - TRANSCRIPT
      - MEDICAL
      - IMMUNIZATION
      - PHOTO_ID
      - OTHER
      type: string
      description: |-
        * `BIRTH_CERT` - Birth Certificate
        * `TRANSCRIPT` - Academic Transcript
        * `MEDICAL` - Medical Record
        * `IMMUNIZATION` - Immunization Record
        * `PHOTO_ID` - Photo ID
        * `OTHER` - Other
    StudentDue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        remaining_amount:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        due_type:
          $ref: '#/components/schemas/DueTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusF91Enum'
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        student:
          type: string
          format: uuid
      required:
      - amount
      - created_at
      - due_date
      - due_type
      - id
      - is_overdue
      - remaining_amount
      - student
      - student_name
      - student_roll_number
      - updated_at
    StudentDueSummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          readOnly: true
        due_type:
          $ref: '#/components/schemas/DueTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        remaining_amount:
          type: string
          readOnly: true
        due_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusF91Enum'
        is_overdue:
          type: string
          readOnly: true
      required:
      - amount
      - due_date
      - due_type
      - id
      - is_overdue
      - remaining_amount
      - student_name
      - student_roll_number
    StudentEnrollmentHistory:
      type: object
      description: Serializer for student enrollment history
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_name:
          type: string
          readOnly: true
        student_roll_number:
          type: string
          description: Unique roll number/student identifier
          readOnly: true
        academic_year:
          type: string
          description: e.g., 2023-2024
          maxLength: 9
        year_of_study:
          $ref: '#/components/schemas/YearOfStudyEnum'
        semester:
          $ref: '#/components/schemas/SemesterEnum'
        enrollment_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status57dEnum'
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - created_at
      - enrollment_date
      - id
      - status
      - student
      - student_name
      - student_roll_number
      - updated_at
    StudentFee:
      type: object
      description: Serializer for StudentFee model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        fee_structure_detail:
          type: string
          format: uuid
        fee_category_name:
          type: string
          readOnly: true
        fee_structure_name:
          type: string
          readOnly: true
        academic_year:
          type: string
          maxLength: 9
        due_date:
          type: string
          format: date
        amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        late_fee_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status58dEnum'
        notes:
          type: string
          nullable: true
        balance_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        is_overdue:
          type: boolean
          readOnly: true
        total_amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - amount_due
      - balance_amount
      - created_at
      - due_date
      - fee_category_name
      - fee_structure_detail
      - fee_structure_name
      - id
      - is_overdue
      - student
      - student_name
      - student_roll_number
      - total_amount_due
      - updated_at
    StudentFeeNested:
      type: object
      description: Nested serializer for StudentFee with full details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student:
          type: string
          format: uuid
        student_roll_number:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        fee_structure_detail:
          $ref: '#/components/schemas/FeeStructureDetailNested'
        fee_category_name:
          type: string
          readOnly: true
        fee_structure_name:
          type: string
          readOnly: true
        academic_year:
          type: string
          maxLength: 9
        due_date:
          type: string
          format: date
        amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        late_fee_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/Status58dEnum'
        notes:
          type: string
          nullable: true
        balance_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        is_overdue:
          type: boolean
          readOnly: true
        total_amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - amount_due
      - balance_amount
      - created_at
      - due_date
      - fee_category_name
      - fee_structure_detail
      - fee_structure_name
      - id
      - is_overdue
      - student
      - student_name
      - student_roll_number
      - total_amount_due
      - updated_at
    StudentImport:
      type: object
      description: Serializer for student import records
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
          maxLength: 255
        file_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: File size in bytes
        total_rows:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        success_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        error_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        warning_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        skip_errors:
          type: boolean
        create_login:
          type: boolean
        update_existing:
          type: boolean
        status:
          $ref: '#/components/schemas/StudentImportStatusEnum'
        errors: {}
        warnings: {}
        created_by:
          type: string
          format: uuid
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        success_rate:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by_name
      - file_size
      - filename
      - id
      - success_rate
      - updated_at
    StudentImportStatusEnum:
      enum:
      - PENDING
      - PROCESSING
      - COMPLETED
      - FAILED
      type: string
      description: |-
        * `PENDING` - Pending
        * `PROCESSING` - Processing
        * `COMPLETED` - Completed
        * `FAILED` - Failed
    StudentList:
      type: object
      description: Simplified serializer for listing students
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          description: Unique roll number/student identifier
          maxLength: 20
        full_name:
          type: string
          readOnly: true
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        status:
          $ref: '#/components/schemas/Status57dEnum'
        enrollment_date:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - age
      - created_at
      - full_name
      - gender
      - id
      - roll_number
    StudentUpdate:
      type: object
      description: Serializer for updating existing students
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        roll_number:
          type: string
          readOnly: true
          description: Unique roll number/student identifier
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          nullable: true
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
        age:
          type: string
          readOnly: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        student_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address_line1:
          type: string
          nullable: true
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          nullable: true
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          maxLength: 100
        full_address:
          type: string
          readOnly: true
        quota:
          type: integer
          nullable: true
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Academic or admission rank
        student_batch:
          type: integer
          nullable: true
          description: Student's batch (contains department, program, year, semester,
            section)
        department_name:
          type: string
          readOnly: true
        department_code:
          type: string
          readOnly: true
        academic_program_name:
          type: string
          readOnly: true
        academic_program_code:
          type: string
          readOnly: true
        academic_year_display:
          type: string
          readOnly: true
        semester_name:
          type: string
          readOnly: true
        village:
          type: string
          nullable: true
          maxLength: 200
        aadhar_number:
          type: string
          nullable: true
          description: 12-digit Aadhar number
          pattern: ^\d{12}$
          maxLength: 12
        religion:
          type: integer
          nullable: true
        caste:
          type: integer
          nullable: true
        subcaste:
          type: string
          nullable: true
          maxLength: 100
        father_name:
          type: string
          nullable: true
          maxLength: 200
        mother_name:
          type: string
          nullable: true
          maxLength: 200
        father_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        mother_mobile:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        enrollment_date:
          type: string
          format: date
        expected_graduation_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status57dEnum'
        guardian_name:
          type: string
          nullable: true
          maxLength: 200
        guardian_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        guardian_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        guardian_relationship:
          type: string
          nullable: true
          description: e.g., Father, Mother, Guardian, etc.
          maxLength: 50
        emergency_contact_name:
          type: string
          nullable: true
          maxLength: 200
        emergency_contact_phone:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relationship:
          type: string
          nullable: true
          maxLength: 50
        medical_conditions:
          type: string
          nullable: true
          description: Any medical conditions or allergies
        medications:
          type: string
          nullable: true
          description: Current medications
        notes:
          type: string
          nullable: true
          description: Additional notes about the student
        profile_picture:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_program_code
      - academic_program_name
      - academic_year_display
      - age
      - created_at
      - date_of_birth
      - department_code
      - department_name
      - first_name
      - full_address
      - full_name
      - gender
      - id
      - last_name
      - roll_number
      - semester_name
      - updated_at
    Syllabus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        version:
          type: string
          description: Syllabus version
          maxLength: 20
        academic_year:
          type: string
          description: Academic year (e.g., 2024-2025)
          maxLength: 9
        semester:
          type: string
          description: Semester (e.g., Fall, Spring)
          maxLength: 20
        learning_objectives:
          type: string
          description: Course learning objectives
        course_outline:
          type: string
          description: Detailed course outline
        assessment_methods:
          type: string
          description: Assessment and evaluation methods
        grading_policy:
          type: string
          description: Grading policy and criteria
        textbooks:
          type: string
          description: Required and recommended textbooks
        additional_resources:
          type: string
          description: Additional learning resources
        status:
          $ref: '#/components/schemas/StatusD77Enum'
        approved_by:
          type: string
          readOnly: true
        approved_at:
          type: string
          format: date-time
          nullable: true
        topics:
          type: array
          items:
            $ref: '#/components/schemas/SyllabusTopic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - approved_by
      - assessment_methods
      - course
      - course_outline
      - created_at
      - grading_policy
      - id
      - learning_objectives
      - semester
      - textbooks
      - topics
      - updated_at
    SyllabusCreate:
      type: object
      properties:
        course:
          type: integer
        version:
          type: string
          description: Syllabus version
          maxLength: 20
        academic_year:
          type: string
          description: Academic year (e.g., 2024-2025)
          maxLength: 9
        semester:
          type: string
          description: Semester (e.g., Fall, Spring)
          maxLength: 20
        learning_objectives:
          type: string
          description: Course learning objectives
        course_outline:
          type: string
          description: Detailed course outline
        assessment_methods:
          type: string
          description: Assessment and evaluation methods
        grading_policy:
          type: string
          description: Grading policy and criteria
        textbooks:
          type: string
          description: Required and recommended textbooks
        additional_resources:
          type: string
          description: Additional learning resources
        status:
          $ref: '#/components/schemas/StatusD77Enum'
        topics:
          type: array
          items:
            $ref: '#/components/schemas/SyllabusTopic'
      required:
      - academic_year
      - assessment_methods
      - course
      - course_outline
      - grading_policy
      - learning_objectives
      - semester
      - textbooks
    SyllabusDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        version:
          type: string
          description: Syllabus version
          maxLength: 20
        academic_year:
          type: string
          description: Academic year (e.g., 2024-2025)
          maxLength: 9
        semester:
          type: string
          description: Semester (e.g., Fall, Spring)
          maxLength: 20
        learning_objectives:
          type: string
          description: Course learning objectives
        course_outline:
          type: string
          description: Detailed course outline
        assessment_methods:
          type: string
          description: Assessment and evaluation methods
        grading_policy:
          type: string
          description: Grading policy and criteria
        textbooks:
          type: string
          description: Required and recommended textbooks
        additional_resources:
          type: string
          description: Additional learning resources
        status:
          $ref: '#/components/schemas/StatusD77Enum'
        approved_by:
          type: string
          readOnly: true
        approved_at:
          type: string
          format: date-time
          nullable: true
        topics:
          type: array
          items:
            $ref: '#/components/schemas/SyllabusTopic'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - approved_by
      - assessment_methods
      - course
      - course_outline
      - created_at
      - grading_policy
      - id
      - learning_objectives
      - semester
      - textbooks
      - topics
      - updated_at
    SyllabusTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        week_number:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Week number in the semester
        title:
          type: string
          description: Topic title
          maxLength: 200
        description:
          type: string
          description: Topic description
        learning_outcomes:
          type: string
          description: Specific learning outcomes for this topic
        readings:
          type: string
          description: Required readings for this topic
        activities:
          type: string
          description: Learning activities and assignments
        duration_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in hours
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Order within the week
      required:
      - description
      - id
      - learning_outcomes
      - title
      - week_number
    Timetable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: string
          readOnly: true
        timetable_type:
          $ref: '#/components/schemas/TimetableTypeEnum'
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekCa4Enum'
        day_of_week_display:
          type: string
          readOnly: true
        start_time:
          type: string
          format: time
          description: Class start time
        end_time:
          type: string
          format: time
          description: Class end time
        room:
          type: string
          description: Classroom or venue
          maxLength: 50
        faculty:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether this timetable entry is active
        notes:
          type: string
          description: Additional notes
        duration_minutes:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course
      - created_at
      - day_of_week
      - day_of_week_display
      - duration_minutes
      - end_time
      - faculty
      - id
      - room
      - start_time
      - updated_at
    TimetableCreate:
      type: object
      properties:
        course_section:
          type: integer
          nullable: true
        timetable_type:
          $ref: '#/components/schemas/TimetableTypeEnum'
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekCa4Enum'
        start_time:
          type: string
          format: time
          description: Class start time
        end_time:
          type: string
          format: time
          description: Class end time
        room:
          type: string
          description: Classroom or venue
          maxLength: 50
        is_active:
          type: boolean
          description: Whether this timetable entry is active
        notes:
          type: string
          description: Additional notes
      required:
      - day_of_week
      - end_time
      - room
      - start_time
    TimetableDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        timetable_type:
          $ref: '#/components/schemas/TimetableTypeEnum'
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekCa4Enum'
        day_of_week_display:
          type: string
          readOnly: true
        start_time:
          type: string
          format: time
          description: Class start time
        end_time:
          type: string
          format: time
          description: Class end time
        room:
          type: string
          description: Classroom or venue
          maxLength: 50
        faculty:
          allOf:
          - $ref: '#/components/schemas/Faculty'
          readOnly: true
        is_active:
          type: boolean
          description: Whether this timetable entry is active
        notes:
          type: string
          description: Additional notes
        duration_minutes:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course
      - created_at
      - day_of_week
      - day_of_week_display
      - duration_minutes
      - end_time
      - faculty
      - id
      - room
      - start_time
      - updated_at
    TimetableTypeEnum:
      enum:
      - REGULAR
      - EXAM
      - MAKEUP
      - SPECIAL
      type: string
      description: |-
        * `REGULAR` - Regular Schedule
        * `EXAM` - Examination Schedule
        * `MAKEUP` - Make-up Classes
        * `SPECIAL` - Special Events
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TransportPass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        pass_type:
          $ref: '#/components/schemas/PassTypeEnum'
        valid_from:
          type: string
          format: date
        valid_to:
          type: string
          format: date
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
        route:
          type: integer
        start_stop:
          type: integer
        end_stop:
          type: integer
      required:
      - created_at
      - end_stop
      - id
      - price
      - route
      - start_stop
      - updated_at
      - user
      - valid_to
    TripSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        day_of_week:
          allOf:
          - $ref: '#/components/schemas/TripScheduleDayOfWeekEnum'
          minimum: -2147483648
          maximum: 2147483647
        departure_time:
          type: string
          format: time
        return_time:
          type: string
          format: time
          nullable: true
        effective_from:
          type: string
          format: date
        effective_to:
          type: string
          format: date
          nullable: true
        assignment:
          type: integer
      required:
      - assignment
      - created_at
      - day_of_week
      - departure_time
      - id
      - updated_at
    TripScheduleDayOfWeekEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `0` - Monday
        * `1` - Tuesday
        * `2` - Wednesday
        * `3` - Thursday
        * `4` - Friday
        * `5` - Saturday
        * `6` - Sunday
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_active:
          type: boolean
        is_verified:
          type: boolean
        date_joined:
          type: string
          format: date-time
        groups:
          type: string
          readOnly: true
        permissions:
          type: string
          readOnly: true
      required:
      - email
      - groups
      - id
      - permissions
    Vehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        number_plate:
          type: string
          maxLength: 32
        registration_number:
          type: string
          maxLength: 64
        make:
          type: string
          maxLength: 64
        model:
          type: string
          maxLength: 64
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
        year_of_manufacture:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        is_active:
          type: boolean
      required:
      - created_at
      - id
      - number_plate
      - registration_number
      - updated_at
    VehicleAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        vehicle:
          type: integer
        driver:
          type: integer
          nullable: true
        route:
          type: integer
      required:
      - created_at
      - id
      - route
      - updated_at
      - vehicle
    Venue:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        address:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          nullable: true
          maxLength: 20
        country:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
      required:
      - created_at
      - id
      - name
      - updated_at
    ViolationTypeEnum:
      enum:
      - CHEATING
      - COPYING
      - UNAUTHORIZED_MATERIAL
      - MOBILE_PHONE
      - TALKING
      - LEAVING_SEAT
      - LATE_ARRIVAL
      - EARLY_DEPARTURE
      - OTHER
      type: string
      description: |-
        * `CHEATING` - Cheating
        * `COPYING` - Copying from others
        * `UNAUTHORIZED_MATERIAL` - Using unauthorized material
        * `MOBILE_PHONE` - Using mobile phone
        * `TALKING` - Talking during exam
        * `LEAVING_SEAT` - Leaving seat without permission
        * `LATE_ARRIVAL` - Late arrival
        * `EARLY_DEPARTURE` - Early departure
        * `OTHER` - Other violation
    WaiverTypeEnum:
      enum:
      - SCHOLARSHIP
      - FINANCIAL_AID
      - MERIT
      - SPORTS
      - DISABILITY
      - OTHER
      type: string
      description: |-
        * `SCHOLARSHIP` - Scholarship
        * `FINANCIAL_AID` - Financial Aid
        * `MERIT` - Merit Based
        * `SPORTS` - Sports Quota
        * `DISABILITY` - Disability
        * `OTHER` - Other
    WorkModeEnum:
      enum:
      - ONSITE
      - REMOTE
      - HYBRID
      type: string
      description: |-
        * `ONSITE` - On-site
        * `REMOTE` - Remote
        * `HYBRID` - Hybrid
    YearOfStudyEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      type: string
      description: |-
        * `1` - 1st Year
        * `2` - 2nd Year
        * `3` - 3rd Year
        * `4` - 4th Year
        * `5` - 5th Year
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
