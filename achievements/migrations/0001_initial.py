# Generated by Django 5.1.4 on 2025-09-16 15:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('institution', models.CharField(max_length=255)),
                ('degree', models.CharField(max_length=255)),
                ('field_of_study', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('currently_working', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('technologies', models.JSONField(blank=True, default=list)),
                ('url', models.URLField(blank=True, null=True)),
                ('repository_url', models.URLField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('authors', models.CharField(max_length=255)),
                ('journal_or_conference', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('doi', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('AWARD', 'Award'), ('CERTIFICATION', 'Certification'), ('PUBLICATION', 'Publication'), ('PROJECT', 'Project'), ('PATENT', 'Patent'), ('SPORTS', 'Sports / Co-curricular'), ('VOLUNTEER', 'Volunteer'), ('OTHER', 'Other')], max_length=32)),
                ('description', models.TextField(blank=True, null=True)),
                ('issuer_or_organizer', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('achieved_on', models.DateField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='achievements/certificates/')),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-achieved_on', '-created_at'],
                'indexes': [models.Index(fields=['category'], name='achievement_categor_a7059b_idx'), models.Index(fields=['owner_type'], name='achievement_owner_t_a45223_idx')],
            },
        ),
        migrations.CreateModel(
            name='ResumeProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('headline', models.CharField(blank=True, max_length=255, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('links', models.JSONField(blank=True, default=list)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('owner_content_type', 'owner_object_id')},
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner_object_id', models.UUIDField()),
                ('owner_type', models.CharField(choices=[('students.student', 'Student'), ('faculty.faculty', 'Faculty'), ('departments.department', 'Department')], max_length=64)),
                ('is_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=120)),
                ('proficiency', models.IntegerField(default=0)),
                ('years_of_experience', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('is_core', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_core', '-proficiency', 'name'],
                'unique_together': {('owner_content_type', 'owner_object_id', 'name')},
            },
        ),
    ]
