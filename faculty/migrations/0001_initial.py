# Generated by Django 5.1.4 on 2025-09-11 16:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('label', models.CharField(max_length=200)),
                ('field_type', models.CharField(choices=[('CHAR', 'Text'), ('TEXT', 'Long Text'), ('INTEGER', 'Number'), ('DECIMAL', 'Decimal Number'), ('DATE', 'Date'), ('DATETIME', 'Date & Time'), ('BOOLEAN', 'Yes/No'), ('EMAIL', 'Email'), ('URL', 'URL'), ('PHONE', 'Phone Number'), ('CHOICE', 'Choice Field')], max_length=20)),
                ('required', models.BooleanField(default=False)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('choices', models.TextField(blank=True, help_text='Comma-separated choices for choice fields', null=True)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', help_text='Name of the Faculty', max_length=200)),
                ('pan_no', models.CharField(blank=True, help_text='PAN Number', max_length=10, null=True)),
                ('apaar_faculty_id', models.CharField(default='', help_text='APAAR Faculty ID', max_length=50, unique=True)),
                ('highest_degree', models.CharField(default='', help_text='Highest Degree', max_length=100)),
                ('university', models.CharField(blank=True, help_text='University', max_length=200, null=True)),
                ('area_of_specialization', models.CharField(blank=True, help_text='Area of Specialization', max_length=200, null=True)),
                ('date_of_joining_institution', models.DateField(default=django.utils.timezone.now, help_text='Date of Joining in this Institution')),
                ('designation_at_joining', models.CharField(default='', help_text='Designation at Time of Joining in this Institution', max_length=100)),
                ('present_designation', models.CharField(default='', help_text='Present Designation', max_length=100)),
                ('date_designated_as_professor', models.DateField(blank=True, help_text='Date designated as Professor/Associate Professor', null=True)),
                ('nature_of_association', models.CharField(choices=[('REGULAR', 'Regular'), ('CONTRACT', 'Contract'), ('AD_HOC', 'Ad hoc')], default='REGULAR', help_text='Nature of Association', max_length=20)),
                ('contractual_full_time_part_time', models.CharField(blank=True, choices=[('FULL_TIME', 'Full Time'), ('PART_TIME', 'Part Time')], help_text='If contractual mention Full time or Part time', max_length=20, null=True)),
                ('currently_associated', models.BooleanField(default=True, help_text='Currently Associated (Y/N)')),
                ('date_of_leaving', models.DateField(blank=True, help_text='Date of Leaving if any', null=True)),
                ('experience_in_current_institute', models.DecimalField(decimal_places=1, default=0.0, help_text='Experience in years in current institute', max_digits=4)),
                ('employee_id', models.CharField(default='', help_text='Unique employee identifier', max_length=20, unique=True)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='M', max_length=1)),
                ('designation', models.CharField(choices=[('PROFESSOR', 'Professor'), ('ASSOCIATE_PROFESSOR', 'Associate Professor'), ('ASSISTANT_PROFESSOR', 'Assistant Professor'), ('LECTURER', 'Lecturer'), ('INSTRUCTOR', 'Instructor'), ('HEAD_OF_DEPARTMENT', 'Head of Department'), ('DEAN', 'Dean'), ('PRINCIPAL', 'Principal'), ('VICE_PRINCIPAL', 'Vice Principal')], default='LECTURER', max_length=25)),
                ('department', models.CharField(choices=[('COMPUTER_SCIENCE', 'Computer Science'), ('MATHEMATICS', 'Mathematics'), ('PHYSICS', 'Physics'), ('CHEMISTRY', 'Chemistry'), ('BIOLOGY', 'Biology'), ('ENGLISH', 'English'), ('HISTORY', 'History'), ('GEOGRAPHY', 'Geography'), ('ECONOMICS', 'Economics'), ('COMMERCE', 'Commerce'), ('PHYSICAL_EDUCATION', 'Physical Education'), ('ARTS', 'Arts'), ('MUSIC', 'Music'), ('ADMINISTRATION', 'Administration'), ('OTHER', 'Other')], default='OTHER', max_length=25)),
                ('employment_type', models.CharField(choices=[('FULL_TIME', 'Full Time'), ('PART_TIME', 'Part Time'), ('CONTRACT', 'Contract'), ('VISITING', 'Visiting'), ('ADJUNCT', 'Adjunct')], default='FULL_TIME', max_length=15)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('ON_LEAVE', 'On Leave'), ('RETIRED', 'Retired'), ('TERMINATED', 'Terminated')], default='ACTIVE', max_length=15)),
                ('date_of_joining', models.DateField(default=django.utils.timezone.now)),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('phone_number', models.CharField(default='', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alternate_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address_line_1', models.CharField(default='', max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(default='', max_length=100)),
                ('state', models.CharField(default='', max_length=100)),
                ('postal_code', models.CharField(default='', max_length=10)),
                ('country', models.CharField(default='India', max_length=100)),
                ('highest_qualification', models.CharField(default='', max_length=100)),
                ('specialization', models.CharField(blank=True, max_length=200, null=True)),
                ('year_of_completion', models.IntegerField(blank=True, null=True)),
                ('experience_years', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('previous_institution', models.CharField(blank=True, max_length=200, null=True)),
                ('achievements', models.TextField(blank=True, null=True)),
                ('research_interests', models.TextField(blank=True, null=True)),
                ('is_head_of_department', models.BooleanField(default=False)),
                ('is_mentor', models.BooleanField(default=False)),
                ('mentor_for_grades', models.CharField(blank=True, help_text='Comma-separated grade levels', max_length=50, null=True)),
                ('emergency_contact_name', models.CharField(default='', max_length=100)),
                ('emergency_contact_phone', models.CharField(default='', max_length=15)),
                ('emergency_contact_relationship', models.CharField(default='', max_length=50)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='faculty_profiles/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('department_ref', models.ForeignKey(blank=True, help_text='Department reference', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty', to='departments.department')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faculty_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Faculty',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FacultyDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('RESUME', 'Resume/CV'), ('DEGREE_CERTIFICATE', 'Degree Certificate'), ('EXPERIENCE_CERTIFICATE', 'Experience Certificate'), ('ID_PROOF', 'ID Proof'), ('ADDRESS_PROOF', 'Address Proof'), ('PHOTO', 'Photograph'), ('PAN_CARD', 'PAN Card'), ('AADHAR_CARD', 'Aadhar Card'), ('OTHER', 'Other')], max_length=25)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='faculty_documents/')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='faculty.faculty')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacultyLeave',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leave_type', models.CharField(choices=[('CASUAL', 'Casual Leave'), ('SICK', 'Sick Leave'), ('ANNUAL', 'Annual Leave'), ('MATERNITY', 'Maternity Leave'), ('PATERNITY', 'Paternity Leave'), ('STUDY', 'Study Leave'), ('OTHER', 'Other')], max_length=15)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=15)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to=settings.AUTH_USER_MODEL)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to='faculty.faculty')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='CustomFieldValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.customfield')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_field_values', to='faculty.faculty')),
            ],
            options={
                'unique_together': {('faculty', 'custom_field')},
            },
        ),
        migrations.CreateModel(
            name='FacultyPerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.CharField(help_text='e.g., 2023-2024', max_length=9)),
                ('evaluation_period', models.CharField(help_text='e.g., Q1, Q2, Q3, Q4, Annual', max_length=50)),
                ('teaching_effectiveness', models.DecimalField(decimal_places=1, help_text='Score out of 10', max_digits=3)),
                ('student_satisfaction', models.DecimalField(decimal_places=1, help_text='Score out of 10', max_digits=3)),
                ('research_contribution', models.DecimalField(decimal_places=1, help_text='Score out of 10', max_digits=3)),
                ('administrative_work', models.DecimalField(decimal_places=1, help_text='Score out of 10', max_digits=3)),
                ('professional_development', models.DecimalField(decimal_places=1, help_text='Score out of 10', max_digits=3)),
                ('overall_score', models.DecimalField(decimal_places=1, help_text='Overall performance score', max_digits=3)),
                ('strengths', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('evaluation_date', models.DateField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('evaluated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_evaluations', to=settings.AUTH_USER_MODEL)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='faculty.faculty')),
            ],
            options={
                'ordering': ['-evaluation_date'],
                'unique_together': {('faculty', 'academic_year', 'evaluation_period')},
            },
        ),
        migrations.CreateModel(
            name='FacultySchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_of_week', models.CharField(choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('subject', models.CharField(max_length=100)),
                ('grade_level', models.CharField(max_length=10)),
                ('room_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='faculty.faculty')),
            ],
            options={
                'unique_together': {('faculty', 'day_of_week', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='FacultySubject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject_name', models.CharField(max_length=100)),
                ('grade_level', models.CharField(help_text='e.g., Grade 1-12, College', max_length=10)),
                ('academic_year', models.CharField(help_text='e.g., 2023-2024', max_length=9)),
                ('is_primary_subject', models.BooleanField(default=False)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='faculty.faculty')),
            ],
            options={
                'unique_together': {('faculty', 'subject_name', 'grade_level', 'academic_year')},
            },
        ),
    ]
