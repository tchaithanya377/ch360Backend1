name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Ensure pytest + coverage tooling are present
          pip install pytest pytest-cov

      - name: Django checks and migrations
        env:
          DJANGO_SETTINGS_MODULE: campshub360.settings
          SECRET_KEY: dummy
          DEBUG: '1'
        run: |
          python manage.py check --deploy --fail-level WARNING || true
          python manage.py migrate --noinput

      - name: Run tests with coverage (fail_under enforced by .coveragerc)
        env:
          DJANGO_SETTINGS_MODULE: campshub360.settings
          SECRET_KEY: dummy
          DEBUG: '1'
        run: |
          pytest -q --disable-warnings --maxfail=1 --cov=. --cov-report=term-missing

      - name: Upload coverage report (artifact)
        if: always()
        run: |
          pytest --cov=. --cov-report=xml:coverage.xml -q || true
        continue-on-error: true

      - name: Store coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml


